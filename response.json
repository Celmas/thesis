{
  "data": {
    "user": {
      "followers": {
        "totalCount": 79
      },
      "bio": "serious cryptography",
      "repositories": {
        "nodes": [
          {
            "name": "dokuwiki-plugin-icalevents",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "DokuWiki plugin that displays a calendar in iCalendar format according to a template",
            "watchers": {
              "totalCount": 3
            },
            "languages": {
              "nodes": [
                {
                  "name": "PHP"
                },
                {
                  "name": "Makefile"
                },
                {
                  "name": "CSS"
                }
              ]
            },
            "issues": {
              "totalCount": 22
            },
            "pullRequests": {
              "totalCount": 4
            },
            "isFork": false,
            "forkCount": 8,
            "url": "https://github.com/real-or-random/dokuwiki-plugin-icalevents",
            "primaryLanguage": {
              "name": "PHP"
            },
            "object": null
          },
          {
            "name": "rust-secp256k1",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Rust language bindings for Bitcoin secp256k1 library.",
            "watchers": {
              "totalCount": 18
            },
            "languages": {
              "nodes": [
                {
                  "name": "Makefile"
                },
                {
                  "name": "Rust"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "C"
                },
                {
                  "name": "C++"
                }
              ]
            },
            "issues": {
              "totalCount": 76
            },
            "pullRequests": {
              "totalCount": 217
            },
            "isFork": false,
            "forkCount": 168,
            "url": "https://github.com/rust-bitcoin/rust-secp256k1",
            "primaryLanguage": {
              "name": "C"
            },
            "object": {
              "text": "[![Build Status](https://travis-ci.org/rust-bitcoin/rust-secp256k1.png?branch=master)](https://travis-ci.org/rust-bitcoin/rust-secp256k1)\n\n[Full documentation](https://docs.rs/secp256k1/)\n\n### rust-secp256k1\n\n`rust-secp256k1` is a wrapper around [libsecp256k1](https://github.com/bitcoin-core/secp256k1),\na C library by Pieter Wuille for producing ECDSA signatures using the SECG curve\n`secp256k1`. This library\n* exposes type-safe Rust bindings for all `libsecp256k1` functions\n* implements key generation\n* implements deterministic nonce generation via RFC6979\n* implements many unit tests, adding to those already present in `libsecp256k1`\n* makes no allocations (except in unit tests) for efficiency and use in freestanding implementations\n\n### Contributing\n\nContributions to this library are welcome. A few guidelines:\n\n* Any breaking changes must have an accompanied entry in CHANGELOG.md\n* No new dependencies, please.\n* No crypto should be implemented in Rust, with the possible exception of hash functions. Cryptographic contributions should be directed upstream to libsecp256k1.\n* This library should always compile with any combination of features on **Rust 1.29**.\n\n## A note on Rust 1.29 support\n\nThe build dependency `cc` might require a more recent version of the Rust compiler.\nTo ensure compilation with Rust 1.29.0, pin its version in your `Cargo.lock`\nwith `cargo update -p cc --precise 1.0.41`. If you're using `secp256k1` in a library,\nto make sure it compiles in CI, you'll need to generate a lockfile first.\nExample for Travis CI:\n```yml\nbefore_script:\n  - if [ \"$TRAVIS_RUST_VERSION\" == \"1.29.0\" ]; then\n    cargo generate-lockfile --verbose && cargo update -p cc --precise \"1.0.41\" --verbose;\n    fi\n```\n\n## Fuzzing\n\nIf you want to fuzz this library, or any library which depends on it, you will\nprobably want to disable the actual cryptography, since fuzzers are unable to\nforge signatures and therefore won't test many interesting codepaths. To instead\nuse a trivially-broken but fuzzer-accessible signature scheme, compile with\n`--cfg=fuzzing` in your `RUSTFLAGS` variable.\n\nNote that `cargo hfuzz` sets this config flag automatically.\n\n"
            }
          },
          {
            "name": "arch-luks-suspend",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Lock encrypted root volume on suspend in Arch Linux",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": []
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 1
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/arch-luks-suspend",
            "primaryLanguage": {
              "name": "Shell"
            },
            "object": {
              "text": "arch-luks-suspend\n==================\n\nA script for [Arch Linux][] to lock the encrypted root volume on suspend.\n\nWhen using [dm-crypt with LUKS][] to set up full system encryption, the\nencryption key is kept in memory when suspending the system. This drawback\ndefeats the purpose of encryption if you carry around your suspended laptop\na lot. One can use the `cryptsetup luksSuspend` command to freeze all I/O and\nflush the key from memory, but special care must be taken when applying it to\nthe root device.\n\nThe `arch-linux-suspend` script replaces the default suspend mechanism of\nsystemd. It changes root to initramfs in order to perform the `luksSuspend`,\nactual suspend, and `luksResume` operations. It relies on the `shutdown`\ninitcpio hook to provide access to the initramfs.\n\n[Arch Linux]: https://www.archlinux.org/\n[dm-crypt with LUKS]: https://wiki.archlinux.org/index.php/Dm-crypt_with_LUKS\n\n\nInstallation\n-------------\n\n1. Install this AUR package: https://aur.archlinux.org/packages/arch-luks-suspend-git/  \n   Alternatively, run `make install` as root.\n2. Edit `/etc/mkinitcpio.conf` and make sure the following hooks are enabled:\n   `udev`, `encrypt`, `shutdown`, `suspend`.\n3. Rebuild the initramfs: `mkinitcpio -p linux`.\n4. Reboot.\n\n\nAuthor and license\n-------------------\n\nCopyright 2013 Vianney le Cl√©ment de Saint-Marcq <vleclement@gmail.com>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; version 3 of the License.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with This program.  If not, see <http://www.gnu.org/licenses/>.\n"
            }
          },
          {
            "name": "dokuwiki-plugin-todo",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "DokuWiki ToDo Plugin",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "PHP"
                },
                {
                  "name": "JavaScript"
                },
                {
                  "name": "CSS"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/dokuwiki-plugin-todo",
            "primaryLanguage": {
              "name": "PHP"
            },
            "object": {
              "text": "DokuWiki Plugin ToDo\r=====\r\rsee https://www.dokuwiki.org/plugin:todo\r"
            }
          },
          {
            "name": "dokuwiki",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "The DokuWiki Open Source Wiki Engine",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "PHP"
                },
                {
                  "name": "JavaScript"
                },
                {
                  "name": "ApacheConf"
                },
                {
                  "name": "HTML"
                },
                {
                  "name": "Shell"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/dokuwiki",
            "primaryLanguage": {
              "name": "PHP"
            },
            "object": null
          },
          {
            "name": "iCalcreator",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "iCalcreator is a PHP class package managing iCal formatted files",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "PHP"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/iCalcreator",
            "primaryLanguage": {
              "name": "PHP"
            },
            "object": null
          },
          {
            "name": "tls13-spec",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "TLS 1.3 Specification",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Makefile"
                },
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/tls13-spec",
            "primaryLanguage": {
              "name": "Python"
            },
            "object": {
              "text": "\nTLS 1.3 Draft Specifications\n=============================\n\nThis is the working area for the [IETF TLS Working\nGroup](https://trac.tools.ietf.org/wg/tls/trac/wiki) draft of [TLS 1.3]\n\nTLS 1.3 specification:\n* [Editor's copy](https://tlswg.github.io/tls13-spec/)\n* [Working Group Draft] (https://tools.ietf.org/html/draft-ietf-tls-tls13)\n\n\nContributing\n------------\n\nBefore submitting feedback, please familiarize yourself with our current issues\nlist and review the [working\ngroup home page](https://trac.tools.ietf.org/wg/tls/trac/wiki). If you're\nnew to this, you may also want to read the [Tao of the\nIETF](https://www.ietf.org/tao.html).\n\nBe aware that all contributions to the specification fall under the \"NOTE WELL\"\nterms outlined below.\n\n1. The best way to provide feedback (editorial or design) and ask questions is\nsending an e-mail to [our mailing\nlist](https://www.ietf.org/mailman/listinfo/tls). This will assure that\nthe entire Working Group sees your input in a timely fashion.\n\n2. If you have **editorial** suggestions (i.e., those that do not change the\nmeaning of the specification), you can either:\n\n  a) Fork this repository and submit a pull request; this is the lowest\n  friction way to get editorial changes in.\n  \n  b) Submit a new issue to Github, and mention that you believe it is editorial\n  in the issue body. It is not necessary to notify the mailing list for\n  editorial issues.\n  \n  c) Make comments on individual commits in Github. Note that this feedback is\n  processed only with best effort by the editors, so it should only be used for\n  quick editorial suggestions or questions.\n\n3. For non-editorial (i.e., **design**) issues, you can also create an issue on\nGithub. However, you **must notify the mailing list** when creating such issues,\nproviding a link to the issue in the message body.\n\n  Note that **github issues are not for substantial discussions**; the only\n  appropriate place to discuss design issues is on the mailing list itself.\n\n\nNOTE WELL\n---------\n\nAny submission to the [IETF](https://www.ietf.org/) intended by the Contributor\nfor publication as all or part of an IETF Internet-Draft or RFC and any\nstatement made within the context of an IETF activity is considered an \"IETF\nContribution\". Such statements include oral statements in IETF sessions, as\nwell as written and electronic communications made at any time or place, which\nare addressed to:\n\n * The IETF plenary session\n * The IESG, or any member thereof on behalf of the IESG\n * Any IETF mailing list, including the IETF list itself, any working group \n   or design team list, or any other list functioning under IETF auspices\n * Any IETF working group or portion thereof\n * Any Birds of a Feather (BOF) session\n * The IAB or any member thereof on behalf of the IAB\n * The RFC Editor or the Internet-Drafts function\n * All IETF Contributions are subject to the rules of \n   [RFC 5378](https://tools.ietf.org/html/rfc5378) and \n   [RFC 3979](https://tools.ietf.org/html/rfc3979) \n   (updated by [RFC 4879](https://tools.ietf.org/html/rfc4879)).\n\nStatements made outside of an IETF session, mailing list or other function,\nthat are clearly not intended to be input to an IETF activity, group or\nfunction, are not IETF Contributions in the context of this notice.\n\nPlease consult [RFC 5378](https://tools.ietf.org/html/rfc5378) and [RFC \n3979](https://tools.ietf.org/html/rfc3979) for details.\n\nA participant in any IETF activity is deemed to accept all IETF rules of\nprocess, as documented in Best Current Practices RFCs and IESG Statements.\n\nA participant in any IETF activity acknowledges that written, audio and video\nrecords of meetings may be made and may be available to the public.\n"
            }
          },
          {
            "name": "accas",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Implementation of Accountable Assertions",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "CMake"
                },
                {
                  "name": "C++"
                },
                {
                  "name": "C"
                }
              ]
            },
            "issues": {
              "totalCount": 1
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": false,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/accas",
            "primaryLanguage": {
              "name": "C++"
            },
            "object": {
              "text": "# Accountable Assertions\n\nA proof-of-concept implementation of the accountable assertions scheme\nintroduced in the research paper\n[Liar, Liar, Coins on Fire! ‚Äî Penalizing Equivocation By Loss Of Bitcoins](https://crypsys.mmci.uni-saarland.de/projects/PenalizingEquivocation/penalizing.pdf) (22nd Conference on Computer and\nCommunications Security, ACM CCS 2015).\n\n## Functionality\nAccountable assertions are a cryptographc primitive similar to digital\nsignatures. Instead of only authenticating a message, they allow a user\nholding a secret *assertion key* to assert a *statement* in a *context*.\nThe user should only assert one unique statement in each context. The\nassertion of two contradicting (i.e., different) statements in the same\ncontext, also called *equivocation*, is considered malicious.\n\nTo incentivize that the user does not equivocate, he is held accountable\nin the following sense: If the user creates two assertions that assert\ntwo different statements in the same in the same context, then everybody\ncan extract the user's secret assertion key from the two assertions.\n\nThe victims of the equivocation can now use this (no longer) secret\nassertion key to penalize equivocator. For example, if the secret\nassertion key is a Bitcoin secret key associated with some time-locked\nBitcoins, the equivocator can be forced to lose these Bitcoins to a\npredetermined party.\n\nSee\n[the paper](https://crypsys.mmci.uni-saarland.de/projects/PenalizingEquivocation/penalizing.pdf)\nfor a full description of the functionality provided by accountable assertions.\n\n## Technical Details\nThis is a proof-of-concept implementation based on Elliptic Curve\nCryptography on the curve secp256k1, i.e., it is compatible with Bitcoin\nkeys.\n\nIt is written in C++ and depends on libsecp256k1 to perform elliptic\ncurve computations. However, it does not only rely on the API provided\nby libsecp256k1 but also on internal functions. Consequently, the full\nsource code of libsecp256k1 is currently necessary to build the project.\n\n## Dependencies\n * [libsecp256k1](https://github.com/bitcoin/secp256k1) (full source,\n   commit a0d3b89dd6c7b11b5a1d2d91040cc5372399b6dc, see #1)\n * [Google Test](https://github.com/google/googletest/)\n * [cmake](https://cmake.org)\n\n## Building and Usage\n```\n$ mkdir build\n$ cd build\n$ cmake ..\n$ make\n```\n\nYou can additionally pass the following options to `cmake`:\n * `-DCMAKE_BUILD_TYPE=debug` for a debug build\n * `-DACCA_CT_LEN=n` to set the size of a supported assertion context to `n`\n   bytes. This parameter influences the running time and the probability that\n   any assertion does not succeed; see\n   [the paper](https://crypsys.mmci.uni-saarland.de/projects/PenalizingEquivocation/penalizing.pdf)\n   for details. The default is 8 bytes.\n\nTo run tests and benchmarks, run `./authenticatortest`.\n\nThe `Authenticator` class is provided as an interface to be used in other projects.\n\n## Copyright and License\nCopyright 2015 Tim Ruffing <tim.ruffing@mmci.uni-saarland.de>\n\nThe project is licensed under the MIT License, see LICENSE.txt\n"
            }
          },
          {
            "name": "bips",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Bitcoin Improvement Proposals",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Protocol Buffer"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/bips",
            "primaryLanguage": {
              "name": "Protocol Buffer"
            },
            "object": null
          },
          {
            "name": "haskell-vim-now",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "One-line Haskell Vim install",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Vim script"
                },
                {
                  "name": "Shell"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/haskell-vim-now",
            "primaryLanguage": {
              "name": "Vim script"
            },
            "object": {
              "text": "<img src=\"img/haskell.png\" align=\"right\" />\n<img src=\"img/vim.png\" align=\"right\" />\n\n<h2 align=\"left\">Haskell Vim IDE</h2>\n\n<br />\n\nIn less than **ten minutes** your Vim will transform into a beautiful\nHaskell paradise.  (Don't worry, it backs up your original\nconfiguration to `~/.vimrc.yearmonthdate_time`.) It also builds all necessary support binaries\nincluding `codex`, `hscope`, `hdevtools`, `hasktags`, `hoogle` and more.\n\nNo more wading through plugins trying to make them all work together.\nIn ten minutes you will have a fully functional Vim that looks great\nand lets you\n\n* inspect types\n* evaluate Haskell\n* lint and check\n* manipulate tags\n* hoogle lookup\n* pointfree refactor\n* tab complete\n* unicode symbols\n* highlight DSLs\n* work with git\n\n\n## Installation\n\nOne command does it all:\n\n```sh\nbash <(curl -sL http://git.io/haskell-vim-now)\n```\n\n## Keybindings and commands\n\nThe commands are organized into logical groups to help you remember\nthem.\n\n### Types, autocomplete, and linting\n\n<table>\n<tbody>\n  <tr>\n    <td>&lt;Tab&gt;</td><td>Autocomplete with words in file</td>\n  </tr>\n  <tr>\n    <td>&lt;C-space&gt;</td><td>Autocomplete with symbols in your Cabal sandbox</td>\n  </tr>\n  <tr>\n    <td>,ht</td><td>Show type of expression under cursor</td>\n  </tr>\n  <tr>\n    <td>,hT</td><td>Insert type of expression into previous line</td>\n  </tr>\n  <tr>\n    <td>,hl</td><td>Run Haskell linter on file</td>\n  </tr>\n  <tr>\n    <td>,hc</td><td>Run Haskell compile check on file</td>\n  </tr>\n  <tr>\n    <td>,&lt;cr&gt;</td><td>Clear type selection</td>\n  </tr>\n</tbody>\n</table>\n\n### Hoogle\n\n<table>\n<tbody>\n  <tr>\n    <td>,hh</td><td>Run Hoogle on the word under the cursor</td>\n  </tr>\n  <tr>\n    <td>,hH</td><td>Run Hoogle and prompt for input</td>\n  </tr>\n  <tr>\n    <td>,hi</td><td>Run Hoogle for detailed information on word under cursor</td>\n  </tr>\n  <tr>\n    <td>,hI</td><td>Run Hoogle for detailed information and prompt for input</td>\n  </tr>\n  <tr>\n    <td>,hz</td><td>Close the Hoogle search window</td>\n  </tr>\n</tbody>\n</table>\n\n### GHCI repl\n\nIf you open a tmux terminal alongside MacVim then you can send Vim\nselections to it. This works well for evaluating things in GHCI.\n\n<table>\n<tbody>\n  <tr>\n    <td>,rs</td><td>Send selected text to tmux</td>\n  </tr>\n  <tr>\n    <td>,rv</td><td>Change tmux session, window, and pane attachment</td>\n  </tr>\n</tbody>\n</table>\n\n### Git\n\n<table>\n<tbody>\n  <tr>\n    <td>,g?</td><td>Last-committed files (Monday morning key)</td>\n  </tr>\n  <tr>\n    <td>,gs</td><td>Git status (fugitive)</td>\n  </tr>\n  <tr>\n    <td>,gg</td><td>Git grep</td>\n  </tr>\n  <tr>\n    <td>,gl</td><td>Git log (extradition)</td>\n  </tr>\n  <tr>\n    <td>,gd</td><td>Git diff</td>\n  </tr>\n  <tr>\n    <td>,gb</td><td>Git blame</td>\n  </tr>\n</tbody>\n</table>\n\n### Commenting\n\n<table>\n<tbody>\n  <tr>\n    <td>gc</td><td>Comment / Uncomment selection</td>\n  </tr>\n</tbody>\n</table>\n\n### Aligning\n\n<table>\n<tbody>\n  <tr>\n    <td>,a=</td><td>Align on equal signs</td>\n  </tr>\n  <tr>\n    <td>,a,</td><td>Align on commas</td>\n  </tr>\n  <tr>\n    <td>,a|</td><td>Align on vertical bar</td>\n  </tr>\n  <tr>\n    <td>,ap</td><td>Align on character of your choice</td>\n  </tr>\n</tbody>\n</table>\n\n### Splits and find file\n\n<table>\n<tbody>\n  <tr>\n    <td>,&lt;space&gt;</td><td>Fuzzy file find (CtrlP)</td>\n  </tr>\n  <tr>\n    <td>,f</td><td>Toggle file browser, find file</td>\n  </tr>\n  <tr>\n    <td>,F</td><td>Toggle file browser</td>\n  </tr>\n  <tr>\n    <td>,sj</td><td>Open split below</td>\n  </tr>\n  <tr>\n    <td>,sk</td><td>Open split above</td>\n  </tr>\n  <tr>\n    <td>,sh</td><td>Open split leftward</td>\n  </tr>\n  <tr>\n    <td>,sl</td><td>Open split rightward</td>\n  </tr>\n</tbody>\n</table>\n\n### Tags\n\n<table>\n<tbody>\n  <tr>\n    <td>,tg</td><td>Generate tags with codex</td>\n  </tr>\n  <tr>\n    <td>,tt</td><td>Open/close the tag bar</td>\n  </tr>\n  <tr>\n    <td>C-]</td><td>Jump to definition of symbol (codex + hasktags)</td>\n  </tr>\n  <tr>\n    <td>C-\\</td><td>Show uses of symbol (hscope)</td>\n  </tr>\n</tbody>\n</table>\n\n### Conversions\n\n<table>\n<tbody>\n  <tr>\n    <td>,h.</td><td>Transform visual selection to pointfree style</td>\n  </tr>\n  <tr>\n    <td>,h&gt;</td><td>Transform visual selection to pointed style</td>\n  </tr>\n</tbody>\n</table>\n\n### Buffers\n\n<table>\n<tbody>\n  <tr>\n    <td>,bp</td><td>Previous buffer</td>\n  </tr>\n  <tr>\n    <td>,bn</td><td>Next buffer</td>\n  </tr>\n  <tr>\n    <td>,b&lt;space&gt;</td><td>Buffer fuzzy finder</td>\n  </tr>\n  <tr>\n    <td>,bd</td><td>Delete buffer, keep window open (bbye)</td>\n  </tr>\n  <tr>\n    <td>,bo</td><td>Close all buffers except the current one</td>\n  </tr>\n</tbody>\n</table>\n\n### Misc\n\n<table>\n<tbody>\n  <tr>\n    <td>,ma</td><td>Enable mouse mode (default)</td>\n  </tr>\n  <tr>\n    <td>,mo</td><td>Disable mouse mode</td>\n  </tr>\n  <tr>\n    <td>,ig</td><td>Toggle indentation guides</td>\n  </tr>\n  <tr>\n    <td>,u</td><td>Interactive undo tree</td>\n  </tr>\n  <tr>\n    <td>,ss</td><td>Enable spell checking</td>\n  </tr>\n  <tr>\n    <td>,e</td><td>Open file prompt with current path</td>\n  </tr>\n  <tr>\n    <td>,&lt;cr&gt;</td><td>Clear search highlights</td>\n  </tr>\n  <tr>\n    <td>,r</td><td>Redraw screen</td>\n  </tr>\n  <tr>\n    <td>C-h</td><td>Move cursor to leftward pane</td>\n  </tr>\n  <tr>\n    <td>C-k</td><td>Move cursor to upward pane</td>\n  </tr>\n  <tr>\n    <td>C-j</td><td>Move cursor to downward pane</td>\n  </tr>\n  <tr>\n    <td>C-l</td><td>Move cursor to rightward pane (redraw is `,r` instead)</td>\n  </tr>\n  <tr>\n    <td>gq</td><td>Format selection using `stylish-haskell` for haskell buffers (`par` for others)</td>\n  </tr>\n  <tr>\n    <td>,y</td><td>Yank to OS clipboard</td>\n  </tr>\n  <tr>\n    <td>,d</td><td>Delete to OS clipboard</td>\n  </tr>\n  <tr>\n    <td>,p</td><td>Paste from OS clipboard</td>\n  </tr>\n</tbody>\n</table>\n\n(If you prefer to restore the default screen redraw action of `C-l`\nthen add `unmap <c-l>` to your .vimrc.local)\n\n## Customizing\n\nAfter installing this configuration, your `.vimrc` and `.vim` will\nbe under version control. Don't alter these files. Instead, add your\nown settings to `~/.vimrc.local` and `~/.vim.local/bundles.vim`.\n\n## Adding Custom Bundles\n\nVundle requires all Bundle statements to be given at once. To accommodate\nthis restriction, `.vimrc` sources `~/.vim.local/bundles.vim` immediately\nafter its own Bundle statements.\n\nBundle statements made elsewhere are not recognized.\n\n### Docker image\n\nIf you are into developing with Docker, you can use the image.\n\n    docker build -t haskell-vim .\n    docker run --rm -i -t haskell-vim /bin/bash\n\nIf instead you want to extract the vim setup from the image that is easy enough\n\n    docker build -t haskell-vim .\n    mkdir ~/.haskell-vim-now\n    cd ~/.haskell-vim-now\n    docker run --rm haskell-vim tar -cz -C /root/.haskell-vim-now . > haskell-vim-now.tgz\n    tar -xzf haskell-vim-now.tgz\n\nHowever, some things (for example the hoogle database) use absolute paths and don't work correctly.\n\n### Troubleshooting\n\nSee this [wiki](https://github.com/begriffs/haskell-vim-now/wiki/Installation-Troubleshooting)\npage for tips on fixing installation problems.\n"
            }
          },
          {
            "name": "cs-conference-template",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": null,
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": []
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": false,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/cs-conference-template",
            "primaryLanguage": null,
            "object": null
          },
          {
            "name": "btcresearch",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "CABRA ‚Äî Comprehensive Academic Bitcoin Research Archive",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": []
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/btcresearch",
            "primaryLanguage": null,
            "object": {
              "text": "# CABRA &mdash; Comprehensive Academinc Bitcoin Research Archive\n\nCABRA is an attempt to collect and organize metadata about ongoing Bitcoin research.\n\n## Why?\n\nwhen researching Bitcoin and Blockchain technology it is sometimes difficult to keep up to date with the latest developments. This is my attempt to make it easier.\n\nLooking for a comprehensive list of publications I stumbled over Brett Scott's excellent [Bitcoin Academic Research](https://docs.google.com/spreadsheets/d/1VaWhbAj7hWNdiE73P-W-wrl5a0WNgzjofmZXe0Rh5sg/) list, which contains an impressive number of Bitcoin/Blockchain related publications.\nThe format of a shared Google Sheet may be well suited for quick collaboration and having many people contribute to the list, however allwing everybody write access also has its downsides. I think a source repository with a controlled process for people to contribute is better suited for such an effort.\n\nIn addition storing the publications in a well documented format allows us to better annotate, search for individual publications, and generate a number of derived formats, e.g., a bibtex file for future publications.\n\n## Contributions\n\nThis project aims to include as many academic papers as possible, but my time is limited and while I try to keep up to date with the latest publications I might miss some. If you'd like to contribute to this archive feel free to fork the repository and/or submit a [pull request](https://github.com/cdecker/btcresearch/pulls).\n\nIn order to keep the data consistent, please adhere to the [JSON-Schema](https://github.com/cdecker/btcresearch/blob/master/btcresearch-schema.json) in this repository.\n\n## Support\n\nIf you find this repository useful, please consider a small Bitcoin donation to [1AQp9kfD5hKA1mia7YnKCAT2khPfY6jTPC](https://blockchain.info/address/1AQp9kfD5hKA1mia7YnKCAT2khPfY6jTPC)"
            }
          },
          {
            "name": "thwin2icalendar",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": " Konvertiert THW-Dienstpl√§ne ins iCalendar-Format ",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 1
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": false,
            "forkCount": 1,
            "url": "https://github.com/real-or-random/thwin2icalendar",
            "primaryLanguage": {
              "name": "Python"
            },
            "object": {
              "text": "# THWin2iCalendar\nKonvertiert THW-Dienstpl√§ne ins iCalendar-Format \n\n## Voraussetzungen\n * [Python 3](https://www.python.org) (inkl. normalerweise vorinstalliertem [Tcl/Tk](https://www.tcl.tk/) und [TkInter](https://wiki.python.org/moin/TkInter))\n * [Python icalendar](https://pypi.python.org/pypi/icalendar/) (`pip install icalendar`)\n\n## Anleitung \n`thwintoicalendar.py` starten und einen Dienstplan ausw√§hlen, der im CSV-Format vorliegen muss.\n\n#### Exportieren eines CSV-Dienstplans aus THWin\n1. Modul \"Verwaltung\" -> \"Dienst\" -> \"Dienste\"\n2. nach zu exportierenden Diensten filtern\n3. Men√º \"Datei\" -> \"Drucken\"\n4. \"Dienst- / Ausbildungsplan\" -> \"CSV-Datei\"\n\n## Lizenz / Urheberrechtsverzicht\n[CC0 1.0](https://creativecommons.org/publicdomain/zero/1.0/deed.de), f√ºr den genauen Text siehe [COPYING.txt](COPYING.txt).\n\n![](https://licensebuttons.net/p/zero/1.0/88x31.png) \n\n"
            }
          },
          {
            "name": "0xconversion",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "0xConversion, web number conversion game.",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "CSS"
                },
                {
                  "name": "HTML"
                },
                {
                  "name": "JavaScript"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/0xconversion",
            "primaryLanguage": {
              "name": "JavaScript"
            },
            "object": {
              "text": "# 0xConversion\nA number conversion game inspired by [You Can't Do Binary Under Pressure](http://games.usvsth3m.com/binary/) from Us Vs Th3m. The technical architecture and structure is heavily inspired by [2048](https://github.com/gabrielecirulli/2048) from Gabriele Cirulli.\n\nYou can play the game [here](https://sheak90.github.io/0xconversion/).\n\nThis game is a byproduct of gaining technical understanding how to design an interactive web application.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/Sheak90/0xconversion/master/screnshot.png\" alt=\"Screenshot\"/>\n</p>\n\n\n## Contributing\nThis game was developed on Windows and tested in Firefox. Changes and improvements are always welcomed! Feel free to fork and open a pull request, but please make your changes in a specific branch and request to pull into `master`.\n\n## License\n2048 is licensed under the [MIT license.](https://github.com/Sheak90/0xconversion/blob/master/LICENSE.txt)\n"
            }
          },
          {
            "name": "translators",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Zotero Translators",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "JavaScript"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/translators",
            "primaryLanguage": {
              "name": "JavaScript"
            },
            "object": null
          },
          {
            "name": "python-dicemix",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Reference implementation of DiceMix P2P mixing protocol (work in progress)",
            "watchers": {
              "totalCount": 2
            },
            "languages": {
              "nodes": [
                {
                  "name": "C++"
                },
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": false,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/python-dicemix",
            "primaryLanguage": {
              "name": "Python"
            },
            "object": null
          },
          {
            "name": "python-bitcoinlib",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Bitcoin library",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Python"
                },
                {
                  "name": "Shell"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/python-bitcoinlib",
            "primaryLanguage": {
              "name": "Python"
            },
            "object": {
              "text": "# python-bitcoinlib\n\nThis Python2/3 library provides an easy interface to the bitcoin data\nstructures and protocol. The approach is low-level and \"ground up\", with a\nfocus on providing tools to manipulate the internals of how Bitcoin works.\n\n\"The Swiss Army Knife of the Bitcoin protocol.\" - Wladimir J. van der Laan\n\n\n## Requirements\n\n    sudo apt-get install libssl-dev\n\nThe RPC interface, bitcoin.rpc, is designed to work with Bitcoin Core v0.11.0\nOlder versions mostly work but there do exist some incompatibilities.\n\n\n## Structure\n\nEverything consensus critical is found in the modules under bitcoin.core. This\nrule is followed pretty strictly, for instance chain parameters are split into\nconsensus critical and non-consensus-critical.\n\nbitcoin.core            - Basic core definitions, datastructures, and\n                          (context-independent) validation\nbitcoin.core.key        - ECC pubkeys\nbitcoin.core.script     - Scripts and opcodes\nbitcoin.core.scripteval - Script evaluation/verification\nbitcoin.core.serialize  - Serialization\n\nIn the future the bitcoin.core may use the Satoshi sourcecode directly as a\nlibrary. Non-consensus critical modules include the following:\n\nbitcoin            - Chain selection\nbitcoin.base58     - Base58 encoding\nbitcoin.bloom      - Bloom filters (incomplete)\nbitcoin.net        - Network communication (in flux)\nbitcoin.messages   - Network messages (in flux)\nbitcoin.rpc        - Bitcoin Core RPC interface support\nbitcoin.wallet     - Wallet-related code, currently Bitcoin address and private\n                     key support\n\nEffort has been made to follow the Satoshi source relatively closely, for\ninstance Python code and classes that duplicate the functionality of\ncorresponding Satoshi C++ code uses the same naming conventions: CTransaction,\nCBlockHeader, nValue etc. Otherwise Python naming conventions are followed.\n\n\n## Mutable vs. Immutable objects\n\nLike the Bitcoin Core codebase CTransaction is immutable and\nCMutableTransaction is mutable; unlike the Bitcoin Core codebase this\ndistinction also applies to COutPoint, CTxIn, CTxOut, and CBlock.\n\n\n## Endianness Gotchas\n\nRather confusingly Bitcoin Core shows transaction and block hashes as\nlittle-endian hex rather than the big-endian the rest of the world uses for\nSHA256. python-bitcoinlib provides the convenience functions x() and lx() in\nbitcoin.core to convert from big-endian and little-endian hex to raw bytes to\naccomodate this. In addition see b2x() and b2lx() for conversion from bytes to\nbig/little-endian hex.\n\n\n## Module import style\n\nWhile not always good style, it's often convenient for quick scripts if import\n* can be used. To support that all the modules have __all__ defined\nappropriately.\n\n\n# Example Code\n\nSee examples/ directory. For instance this example creates a transaction\nspending a pay-to-script-hash transaction output:\n\n    $ PYTHONPATH=. examples/spend-pay-to-script-hash-txout.py\n    <hex-encoded transaction>\n\nAlso see dust-b-gone for a simple example of Bitcoin Core wallet interaction\nthrough the RPC interface: https://github.com/petertodd/dust-b-gone\n\n\n## Selecting the chain to use\n\nDo the following:\n\n    import bitcoin\n    bitcoin.SelectParams(NAME)\n\nWhere NAME is one of 'testnet', 'mainnet', or 'regtest'. The chain currently\nselected is a global variable that changes behavior everywhere, just like in\nthe Satoshi codebase.\n\n\n## Unit tests\n\nUnder bitcoin/tests using test data from Bitcoin Core. To run them:\n\n    python -m unittest discover && python3 -m unittest discover\n\nPlease run the tests on both Python2 and Python3 for your pull-reqs!\n\nAlternately, if Tox (see https://tox.readthedocs.org/) is available on your\nsystem, you can run unit tests for multiple Python versions:\n\n    ./runtests.sh\n\nCurrently, the following implementations are tried (any not installed are\nskipped):\n\n    * CPython 2.7\n    * CPython 3.3\n    * CPython 3.4\n    * CPython 3.5\n    * PyPy\n    * PyPy3\n\nHTML coverage reports can then be found in the htmlcov/ subdirectory.\n\n## Documentation\n\nSphinx documentation is in the \"doc\" subdirectory. Run \"make help\" from there\nto see how to build. You will need the Python \"sphinx\" package installed.\n\nCurrently this is just API documentation generated from the code and\ndocstrings. Higher level written docs would be useful, perhaps starting with\nmuch of this README. Pages are written in reStructuredText and linked from\nindex.rst.\n"
            }
          },
          {
            "name": "flatbencode",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Fast, safe and non-recursive implementation of Bittorrent bencoding for Python 3",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/flatbencode",
            "primaryLanguage": {
              "name": "Python"
            },
            "object": null
          },
          {
            "name": "schedule",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": null,
            "watchers": {
              "totalCount": 2
            },
            "languages": {
              "nodes": [
                {
                  "name": "Python"
                },
                {
                  "name": "Ruby"
                },
                {
                  "name": "HTML"
                },
                {
                  "name": "Shell"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/schedule",
            "primaryLanguage": {
              "name": "Python"
            },
            "object": {
              "text": "# schedule\n\nScripts to generate & validate schedule files for events \nwhich use the [frab conference system][frab-website].\n\n## Dependencies\n\n``` bash\n$ sudo apt-get install python python-pip python-lxml libxslt1-dev\n$ pip install < requirements.txt\n```\n\n\n[frab-website]: http://frab.github.io/frab/\n\n"
            }
          },
          {
            "name": "gitignore",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "A collection of useful .gitignore templates",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": []
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/gitignore",
            "primaryLanguage": null,
            "object": {
              "text": "# A collection of `.gitignore` templates\n\nThis is GitHub‚Äôs collection of [`.gitignore`][man] file templates.\nWe use this list to populate the `.gitignore` template choosers available\nin the GitHub.com interface when creating new repositories and files.\n\nFor more information about how `.gitignore` files work, and how to use them,\nthe following resources are a great place to start:\n\n- The [Ignoring Files chapter][chapter] of the [Pro Git][progit] book.\n- The [Ignoring Files article][help] on the GitHub Help site.\n- The [gitignore(5)][man] manual page.\n\n[man]: http://git-scm.com/docs/gitignore\n[help]: https://help.github.com/articles/ignoring-files\n[chapter]: http://git-scm.com/book/en/Git-Basics-Recording-Changes-to-the-Repository#Ignoring-Files\n[progit]: http://git-scm.com/book\n\n## Folder structure\n\nThe files in the root directory are for `.gitignore` templates that are\nproject specific, such as language or framework specific templates.\nGlobal (operating system or editor specific) templates should go into the\n[`Global/`](./Global) directory.\n\n## Contributing guidelines\n\nWe‚Äôd love you to help us improve this project. To help us keep this collection\nhigh quality, we request that contributions adhere to the following guidelines.\n\n- **Provide a link to the application or project‚Äôs homepage**. Unless it‚Äôs\n  extremely popular, there‚Äôs a chance the maintainers don‚Äôt know about or use\n  the language, framework, editor, app, or project your change applies to.\n\n- **Provide links to documentation** supporting the change you‚Äôre making.\n  Current, canonical documentation mentioning the files being ignored is best.\n  If documentation isn‚Äôt available to support your change, do the best you can\n  to explain what the files being ignored are for.\n\n- **Explain why you‚Äôre making a change**. Even if it seems self-evident, please\n  take a sentence or two to tell us why your change or addition should happen.\n  It‚Äôs especially helpful to articulate why this change applies to *everyone*\n  who works with the applicable technology, rather than just you or your team.\n\n- **Please consider the scope of your change**. If your change specific to a\n  certain language or framework, then make sure the change is made to the\n  template for that language or framework, rather than to the template for an\n  editor, tool, or operating system.\n\n- **Please only modify *one template* per pull request**. This helps keep pull\n  requests and feedback focused on a specific project or technology.\n\nIn general, the more you can do to help us understand the change you‚Äôre making,\nthe more likely we‚Äôll be to accept your contribution quickly.\n\nIf a template is mostly a list of files installed by a particular version of\nsome software (e.g. a PHP framework) then it's brittle and probably no more\nhelpful than a simple `ls`. If it's not possible to curate a small set of\nuseful rules, then the template might not be a good fit for this collection.\n\nPlease also understand that we can‚Äôt list every tool that ever existed.\nOur aim is to curate a collection of the *most common and helpful* templates,\nnot to make sure we cover every project possible. If we choose not to\ninclude your language, tool, or project, it‚Äôs not because it‚Äôs not awesome.\n\n## Contributing workflow\n\nHere‚Äôs how we suggest you go about proposing a change to this project:\n\n1. [Fork this project][fork] to your account.\n2. [Create a branch][branch] for the change you intend to make.\n3. Make your changes to your fork.\n4. [Send a pull request][pr] from your fork‚Äôs branch to our `master` branch.\n\nUsing the web-based interface to make changes is fine too, and will help you\nby automatically forking the project and prompting to send a pull request too.\n\n[fork]: https://help.github.com/articles/fork-a-repo/\n[branch]: https://help.github.com/articles/creating-and-deleting-branches-within-your-repository\n[pr]: https://help.github.com/articles/using-pull-requests/\n\n## License\n\n[CC0-1.0](./LICENSE).\n"
            }
          },
          {
            "name": "uuid_to_pokemon.rs",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Translate a UUID into a qualified POK√©MON name in a consistent way.",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Rust"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/uuid_to_pokemon.rs",
            "primaryLanguage": {
              "name": "Rust"
            },
            "object": {
              "text": "# UUID to POK√©MON\n\nThis simple crate allows you to translate a UUID to a pok√©mon name.\n\nThe purpose is to provide simple names to address objects, so you can easily talk with\npeople about the objects.\n\nThe function is surjective. This means several UUIDs will give the same name. We don't\nconsider it an issue since context (like owner of object) will help dedup the search.\n\n## Usage\n\n```rust\nextern crate uuid;\nextern crate uuid_to_pokemon;\n\nuse uuid::Uuid;\nuse uuid_to_pokemon::uuid_to_pokemon;\n\nfn main() {\n   let u = Uuid::new_v4();\n   println!(uuid_to_pokemon(u)); // e.g. \"Careless pidgeotto\"\n}\n```\n"
            }
          },
          {
            "name": "zcoin",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "The Zerocoin Cryptocurrency",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Shell"
                },
                {
                  "name": "Python"
                },
                {
                  "name": "Roff"
                },
                {
                  "name": "Makefile"
                },
                {
                  "name": "C++"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/zcoin",
            "primaryLanguage": {
              "name": "C++"
            },
            "object": {
              "text": "ZCoin integration/staging tree\n================================\n\nhttps://zcoin.io/\n\n Copyright (c) 2009 - 2016 Bitcoin Developers\n \n Copyright (c) 2015 - 2017 ZCoin Developers\n\nWhat is ZCoin?\n----------------\n\nZCoin is the implementation of the Zerocoin protocol ( http://zerocoin.org ) guaranteeing true financial anonymity.\n\n - 10 minute block targets\n - 21 million total coins\n - 50 coins per block\n - Retarget using BRNDF every 6 blocks\n\nFor more information, as well as an immediately useable, binary version of\nthe zcoin client sofware, see https://github.com/zcoinofficial/zcoin/releases.\n\nLicense\n-------\n\nZCoin is released under the terms of the MIT license. See `COPYING` for more\ninformation or see http://opensource.org/licenses/MIT.\n\nDevelopment process\n-------------------\n\nDevelopers work in their own trees, then submit pull requests when they think\ntheir feature or bug fix is ready.\n\nIf it is a simple/trivial/non-controversial change, then one of the zcoin\ndevelopment team members simply pulls it.\n\nIf it is a *more complicated or potentially controversial* change, then the patch\nsubmitter will be asked to start a discussion (if they haven't already) on the\n[Slack : ZCoin General Channel](https://zcoinofficial.slack.com). You can get invite from here http://invite.zcoin.io\n\nThe patch will be accepted if there is broad consensus that it is a good thing.\nDevelopers should expect to rework and resubmit patches if the code doesn't\nmatch the project's coding conventions (see `doc/coding.txt`) or are\ncontroversial.\n\nThe `master` branch is regularly built and tested, but is not guaranteed to be\ncompletely stable. [Tags](https://github.com/zcoinofficial/zcoin/tags) are created\nregularly to indicate new official, stable release versions of ZCoin.\n\nTesting\n-------\n\n### Automated Testing\n\nDevelopers are strongly encouraged to write unit tests for new code, and to\nsubmit new unit tests for old code.\n\nUnit tests for the core code are in `src/test/`. To compile and run them:\n\n    cd src; make -f makefile.unix test\n\nUnit tests for the GUI code are in `src/qt/test/`. To compile and run them:\n\n    qmake BITCOIN_QT_TEST=1 -o Makefile.test zcoin.pro\n    make -f Makefile.test\n    ./zcoin-qt_test\n\nInstallation\n-------\n\nPlease see details in Wiki section\n\n"
            }
          },
          {
            "name": "secp256k1",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Optimized C library for EC operations on curve secp256k1",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Makefile"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "M4"
                },
                {
                  "name": "C"
                },
                {
                  "name": "C++"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/secp256k1",
            "primaryLanguage": {
              "name": "C"
            },
            "object": {
              "text": "libsecp256k1\n============\n\n[![Build Status](https://travis-ci.org/bitcoin-core/secp256k1.svg?branch=master)](https://travis-ci.org/bitcoin-core/secp256k1)\n\nOptimized C library for ECDSA signatures and secret/public key operations on curve secp256k1.\n\nThis library is intended to be the highest quality publicly available library for cryptography on the secp256k1 curve. However, the primary focus of its development has been for usage in the Bitcoin system and usage unlike Bitcoin's may be less well tested, verified, or suffer from a less well thought out interface. Correct usage requires some care and consideration that the library is fit for your application's purpose.\n\nFeatures:\n* secp256k1 ECDSA signing/verification and key generation.\n* Additive and multiplicative tweaking of secret/public keys.\n* Serialization/parsing of secret keys, public keys, signatures.\n* Constant time, constant memory access signing and public key generation.\n* Derandomized ECDSA (via RFC6979 or with a caller provided function.)\n* Very efficient implementation.\n* Suitable for embedded systems.\n* Optional module for public key recovery.\n* Optional module for ECDH key exchange (experimental).\n\nExperimental features have not received enough scrutiny to satisfy the standard of quality of this library but are made available for testing and review by the community. The APIs of these features should not be considered stable.\n\nImplementation details\n----------------------\n\n* General\n  * No runtime heap allocation.\n  * Extensive testing infrastructure.\n  * Structured to facilitate review and analysis.\n  * Intended to be portable to any system with a C89 compiler and uint64_t support.\n  * No use of floating types.\n  * Expose only higher level interfaces to minimize the API surface and improve application security. (\"Be difficult to use insecurely.\")\n* Field operations\n  * Optimized implementation of arithmetic modulo the curve's field size (2^256 - 0x1000003D1).\n    * Using 5 52-bit limbs (including hand-optimized assembly for x86_64, by Diederik Huys).\n    * Using 10 26-bit limbs (including hand-optimized assembly for 32-bit ARM, by Wladimir J. van der Laan).\n  * Field inverses and square roots using a sliding window over blocks of 1s (by Peter Dettman).\n* Scalar operations\n  * Optimized implementation without data-dependent branches of arithmetic modulo the curve's order.\n    * Using 4 64-bit limbs (relying on __int128 support in the compiler).\n    * Using 8 32-bit limbs.\n* Group operations\n  * Point addition formula specifically simplified for the curve equation (y^2 = x^3 + 7).\n  * Use addition between points in Jacobian and affine coordinates where possible.\n  * Use a unified addition/doubling formula where necessary to avoid data-dependent branches.\n  * Point/x comparison without a field inversion by comparison in the Jacobian coordinate space.\n* Point multiplication for verification (a*P + b*G).\n  * Use wNAF notation for point multiplicands.\n  * Use a much larger window for multiples of G, using precomputed multiples.\n  * Use Shamir's trick to do the multiplication with the public key and the generator simultaneously.\n  * Optionally (off by default) use secp256k1's efficiently-computable endomorphism to split the P multiplicand into 2 half-sized ones.\n* Point multiplication for signing\n  * Use a precomputed table of multiples of powers of 16 multiplied with the generator, so general multiplication becomes a series of additions.\n  * Intended to be completely free of timing sidechannels for secret-key operations (on reasonable hardware/toolchains)\n    * Access the table with branch-free conditional moves so memory access is uniform.\n    * No data-dependent branches\n  * Optional runtime blinding which attempts to frustrate differential power analysis.\n  * The precomputed tables add and eventually subtract points for which no known scalar (secret key) is known, preventing even an attacker with control over the secret key used to control the data internally.\n\nBuild steps\n-----------\n\nlibsecp256k1 is built using autotools:\n\n    $ ./autogen.sh\n    $ ./configure\n    $ make\n    $ make check\n    $ sudo make install  # optional\n\nExhaustive tests\n-----------\n\n    $ ./exhaustive_tests\n\nWith valgrind, you might need to increase the max stack size:\n\n    $ valgrind --max-stackframe=2500000 ./exhaustive_tests\n\nTest coverage\n-----------\n\nThis library aims to have full coverage of the reachable lines and branches.\n\nTo create a test coverage report, configure with `--enable-coverage` (use of GCC is necessary):\n\n    $ ./configure --enable-coverage\n\nRun the tests:\n\n    $ make check\n\nTo create a report, `gcovr` is recommended, as it includes branch coverage reporting:\n\n    $ gcovr --exclude 'src/bench*' --print-summary\n\nTo create a HTML report with coloured and annotated source code:\n\n    $ gcovr --exclude 'src/bench*' --html --html-details -o coverage.html\n\nReporting a vulnerability\n------------\n\nSee [SECURITY.md](SECURITY.md)\n"
            }
          },
          {
            "name": "dicemix",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": null,
            "watchers": {
              "totalCount": 21
            },
            "languages": {
              "nodes": [
                {
                  "name": "Rust"
                },
                {
                  "name": "C++"
                },
                {
                  "name": "C"
                },
                {
                  "name": "Makefile"
                },
                {
                  "name": "Shell"
                }
              ]
            },
            "issues": {
              "totalCount": 2
            },
            "pullRequests": {
              "totalCount": 5
            },
            "isFork": false,
            "forkCount": 10,
            "url": "https://github.com/ElementsProject/dicemix",
            "primaryLanguage": {
              "name": "Rust"
            },
            "object": null
          },
          {
            "name": "rust-secp256k1",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Rust language bindings for Bitcoin secp256k1 library.",
            "watchers": {
              "totalCount": 2
            },
            "languages": {
              "nodes": [
                {
                  "name": "Makefile"
                },
                {
                  "name": "Rust"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "M4"
                },
                {
                  "name": "C"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/rust-secp256k1",
            "primaryLanguage": {
              "name": "C"
            },
            "object": {
              "text": "[![Build Status](https://travis-ci.org/apoelstra/rust-secp256k1.png?branch=master)](https://travis-ci.org/apoelstra/rust-secp256k1)\n\n### rust-secp256k1\n\n`rust-secp256k1` is a wrapper around ![libsecp256k1](https://github.com/bitcoin/secp256k1),\na C library by Peter Wuille for producing ECDSA signatures using the SECG curve\n`secp256k1`. This library\n* exposes type-safe Rust bindings for all `libsecp256k1` functions\n* implements key generation\n* implements deterministic nonce generation via RFC6979\n* implements many unit tests, adding to those already present in `libsecp256k1`\n* makes no allocations (except in unit tests) for efficiency and use in freestanding implementations\n\n[Full documentation](https://www.wpsoftware.net/rustdoc/secp256k1/)\n\n"
            }
          },
          {
            "name": "vimtex",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "A modern vim plugin for editing LaTeX files.",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Vim script"
                },
                {
                  "name": "Python"
                },
                {
                  "name": "TeX"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "Makefile"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/vimtex",
            "primaryLanguage": {
              "name": "Vim script"
            },
            "object": {
              "text": "# vimtex\n\nvimtex is a [Vim](http://www.vim.org/) plugin that provides support for writing\nLaTeX documents. It is based on\n[LaTeX-Box](https://github.com/LaTeX-Box-Team/LaTeX-Box) and it shares a\nsimilar goal: to provide a simple and lightweight LaTeX plugin. It has been\nrewritten from scratch to provide a more modern and modular code base. See\n[here](#alternatives) for some more comments on the difference between vimtex\nand other LaTeX plugins for Vim.\n\n[![Build Status](https://travis-ci.org/lervag/vimtex.svg?branch=master)](https://travis-ci.org/lervag/vimtex)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=5N4MFVXN7U8NW)\n\n## Table of contents\n\n  * [Installation](#installation)\n  * [Quick Start](#quick-start)\n  * [Features](#features)\n  * [Other relevant plugins](#other-relevant-plugins)\n  * [Alternatives](#alternatives)\n\n## Installation\n\nIf you use [vim-plug](https://github.com/junegunn/vim-plug), then add the\nfollowing line to your `vimrc` file:\n\n```vim\nPlug 'lervag/vimtex'\n```\n\nOr use some other plugin manager:\n- [vundle](https://github.com/gmarik/vundle)\n- [neobundle](https://github.com/Shougo/neobundle.vim)\n- [pathogen](https://github.com/tpope/vim-pathogen)\n\n## Quick Start\n\nThe following is a simple guide for how to use vimtex. It only displays the\nmost basic features. Users are _strongly_ encouraged to read or at least skim\nthrough the documentation to learn about the different features and\npossibilities provided by vimtex (see\n[here](https://github.com/lervag/vimtex/blob/master/doc/vimtex.txt) or `:h\nvimtex`).\n\n![Quick start gif](media/quick_start.gif?raw=true)\n\n## Features\n\nBelow is a list of features offered by vimtex.  The features are accessible as\nboth commands and mappings.  The mappings generally start with\n`<localleader>l`, but if desired one can disable default mappings to define\ncustom mappings.  All features are enabled by default, but each feature may be\ndisabled if desired.\n\n- Document compilation with\n  [latexmk](http://users.phys.psu.edu/~collins/software/latexmk-jcc/) or\n  [latexrun](https://github.com/aclements/latexrun)\n- LaTeX log parsing for quickfix entries using\n  - internal method\n  - [pplatex](https://github.com/stefanhepp/pplatex)\n- Compilation of selected part of document\n- Support for several PDF viewers with forward search\n  - [MuPDF](http://www.mupdf.com/)\n  - [Okular](https://okular.kde.org/)\n  - [qpdfview](https://launchpad.net/qpdfview)\n  - [Skim](http://skim-app.sourceforge.net/)\n  - [SumatraPDF](http://www.sumatrapdfreader.org/free-pdf-reader.html)\n  - [Zathura](https://pwmt.org/projects/zathura/)\n  - Other viewers are supported through a general interface\n- Completion of\n  - citations\n  - labels\n  - commands\n  - file names for figures, input/include, includepdf, includestandalone\n  - glossary entries\n  - package and documentclass names based on available `.sty` and `.cls` files\n- Document navigation through\n  - table of content\n  - table of labels\n  - enhanced `gf` command\n- Easy access to (online) documentation of packages\n- Word count (through `texcount`)\n- Motions\n  - Move between sections with `[[`, `[]`, `][`, `]]`\n  - Move between matching delimiters with `%`\n- Text objects\n  - `ic ac` Commands\n  - `id ad` Delimiters\n  - `ie ae` LaTeX environments\n  - `i$ a$` Inline math structures\n  - `iP aP` Sections\n- Other mappings\n  - Delete the surrounding command, environment or delimiter with\n    `dsc`/`dse`/`ds$`/`dsd`\n  - Change the surrounding command, environment or delimiter with\n    `csc`/`cse`/`cs$`/`csd`\n  - Toggle starred command or environment with `tsc`/`tse`\n  - Toggle between e.g. `()` and `\\left(\\right)` with `tsd`\n  - Close the current environment/delimiter in insert mode with `]]`\n  - Insert new command with `<F7>`\n  - Convenient insert mode mappings for faster typing of e.g. maths\n- Improved folding (`:h 'foldexpr'`)\n- Improved indentation (`:h 'indentexpr'`)\n- Improved syntax highlighting\n  - Highlight matching delimiters\n  - Support for `biblatex`/`natbib` package\n  - Support for `cleveref` package\n  - Support for `listings` package\n  - Nested syntax highlighting (`minted`, `dot2tex`, `lualatex`,\n    `gnuplottex`, `asymptote`)\n- Support for multi-file project packages\n  - [import](http://ctan.uib.no/macros/latex/contrib/import/import.pdf)\n  - [subfiles](http://ctan.uib.no/macros/latex/contrib/subfiles/subfiles.pdf)\n\nSee the documentation for a thorough introduction to vimtex (e.g. `:h vimtex`).\n\n## Other relevant plugins\n\nEven though vimtex provides a lot of nice features for working with LaTeX\ndocuments, there are several features that are better served by other,\ndedicated plugins. For a more detailed listing of these, please see [`:help\nvimtex-non-features`](doc/vimtex.txt#L156).\n\n### Linting and syntax checking\n\n  * [ale](https://github.com/w0rp/ale)\n  * [neomake](https://github.com/neomake/neomake)\n  * [syntastic](https://github.com/vim-syntastic/syntastic)\n\n### Snippets and templates\n\n  * [UltiSnips](https://github.com/SirVer/ultisnips)\n  * [neosnippet](https://github.com/Shougo/neosnippet.vim)\n\n### Tag navigation\n\n  * [vim-gutentags](https://github.com/ludovicchabant/vim-gutentags)\n\n## Alternatives\n\nThe following are some alternative LaTeX plugins for Vim:\n\n- [LaTeX-Box](https://github.com/LaTeX-Box-Team/LaTeX-Box)\n\n    vimtex currently has most of the features of LaTeX-Box, as well as\n    some additional ones. See [here](#features) for a relatively complete list\n    of features.\n\n    One particular feature that LaTeX-Box has but vimtex misses, is the ability\n    to do single-shot compilation _with callback_. This functionality was\n    removed because it adds a lot of complexity for relatively little gain\n    (IMHO).\n\n    Note: LaTeX-Box is included with\n    [vim-polyglot](https://github.com/sheerun/vim-polyglot). Some users are not\n    quite aware of this and end up trying vimtex with LaTeX-Box enabled. This\n    will not work --- please disable LaTeX-Box first!\n\n- [LaTeX-Suite](http://vim-latex.sourceforge.net)\n\n    The main difference between vimtex and LaTeX-Suite (aka vim-latex) is\n    probably that vimtex does not try to implement a full fledged IDE for LaTeX\n    inside Vim. E.g.:\n\n    - vimtex does not provide a full snippet feature, because this is better\n      handled by [UltiSnips](https://github.com/SirVer/ultisnips) or\n      [neosnippet](https://github.com/Shougo/neosnippet.vim) or similar snippet\n      engines.\n    - vimtex builds upon Vim principles: It provides text objects for\n      environments, inline math, it provides motions for sections and\n      paragraphs\n    - vimtex uses `latexrun` or `latexmk` for compilation with a callback\n      feature to get instant feedback on compilation errors\n    - vimtex is very modular: if you don't like a feature, you can turn it off.\n\n- [AutomaticTexPlugin](http://atp-vim.sourceforge.net)\n- [vim-latex-live-preview](https://github.com/xuhdev/vim-latex-live-preview)\n\nFor more alternatives and more information and discussions regarding LaTeX\nplugins for Vim, see:\n\n- [What are the differences between LaTeX\n  plugins](http://vi.stackexchange.com/questions/2047/what-are-the-differences-between-latex-plugins)\n- [List of LaTeX editors (not only\n  Vim)](https://tex.stackexchange.com/questions/339/latex-editors-ides)\n\n"
            }
          },
          {
            "name": "trezor-core",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": ":lock: TREZOR Core",
            "watchers": {
              "totalCount": 2
            },
            "languages": {
              "nodes": [
                {
                  "name": "Makefile"
                },
                {
                  "name": "Python"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "C"
                },
                {
                  "name": "Assembly"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 1
            },
            "isFork": true,
            "forkCount": 1,
            "url": "https://github.com/romanz/trezor-core",
            "primaryLanguage": {
              "name": "Python"
            },
            "object": {
              "text": "# TREZOR Core\n\n![TREZOR Logo](docs/logo.png)\n\n[![Build Status](https://travis-ci.org/trezor/trezor-core.svg?branch=master)](https://travis-ci.org/trezor/trezor-core)\n[![Gitter](https://badges.gitter.im/trezor/community.svg)](https://gitter.im/trezor/community)\n\nThis is the source code for 2nd generation of TREZOR called TREZOR model T.\n\nIt runs both inside of the device and also in the TREZOR Emulator.\n\n![emulator](docs/emulator.jpg)\n\n## Documentation\n\n* [API](docs/api.md)\n* [Build instructions](docs/build.md)\n* [Emulator](docs/emulator.md)\n* [Testing](docs/testing.md)\n* [Bootloader](docs/bootloader.md)\n* [Hardware](docs/hardware.md)\n* [Memory Layout](docs/memory.md)\n* [TOIF Image Format](docs/toif.md)\n"
            }
          },
          {
            "name": "multi-account-containers",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Firefox Multi-Account Containers adds new features to Containers.",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "JavaScript"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "CSS"
                },
                {
                  "name": "HTML"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/multi-account-containers",
            "primaryLanguage": {
              "name": "JavaScript"
            },
            "object": {
              "text": "# Multi-Account Containers\n\nThe Firefox Multi-Account Containers extension lets you carve out a separate box for each of your online lives ‚Äì no more opening a different browser just to check your work email! [Learn More Here](https://blog.mozilla.org/firefox/introducing-firefox-multi-account-containers/)\n\n[Available on addons.mozilla.org](https://addons.mozilla.org/en-GB/firefox/addon/multi-account-containers/)\n\nFor more info, see: \n\n* [Test Pilot Product Hypothesis Document](https://docs.google.com/document/d/1WQdHTVXROk7dYkSFluc6_hS44tqZjIrG9I-uPyzevE8/edit#)\n* [Shield Product Hypothesis Document](https://docs.google.com/document/d/1vMD-fH_5hGDDqNvpRZk12_RhCN2WAe4_yaBamaNdtik/edit#)\n\n\n## Requirements\n\n* node 7+ (for jpm)\n* Firefox 57+\n\n\n## Development\n\n1. `npm install`\n2. `./node_modules/.bin/web-ext run -s src/`\n\n### Testing\nTBD\n\n### Distributing\n#### Make the new version\n\n1. Bump the version number in `package.json` and `manifest.json`\n2. Commit the version number bump\n3. Create a git tag for the version: `git tag <version>`\n4. Push the tag up to GitHub: `git push --tags`\n\n#### Publish to AMO\n\n1. `npm run-script build`\n2. [Upload the `.zip` to AMO](https://addons.mozilla.org/en-US/developers/addon/multi-account-containers/versions/submit/)\n\n#### Publish to GitHub\nFinally, we also publish the release to GitHub for those followers.\n\n1. Download the signed `.xpi` from [the addon versions page](https://addons.mozilla.org/en-US/developers/addon/multi-account-containers/versions)\n2. [Make the new release on\n   GitHub](https://github.com/mozilla/multi-account-containers/releases/new)\n   * Use the version number for \"Tag version\" and \"Release title\"\n   * Release notes: copy the output of `git log --no-merges --pretty=format:\"%h %s\" <previous-version>..<new-version>`\n   * Attach binaries: select the signed `.xpi` file\n\n### Links\n\nFacebook & Twitter icons CC-Attrib https://fairheadcreative.com.\n\n- [Licence](./LICENSE.txt)\n- [Contributing](./CONTRIBUTING.md)\n- [Code Of Conduct](./CODE_OF_CONDUCT.md)\n"
            }
          },
          {
            "name": "bitcoin",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Bitcoin Core integration/staging tree",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Makefile"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "M4"
                },
                {
                  "name": "QMake"
                },
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/bitcoin",
            "primaryLanguage": {
              "name": "C++"
            },
            "object": {
              "text": "Bitcoin Core integration/staging tree\n=====================================\n\n[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n\nhttps://bitcoincore.org\n\nWhat is Bitcoin?\n----------------\n\nBitcoin is an experimental digital currency that enables instant payments to\nanyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\nwith no central authority: managing transactions and issuing money are carried\nout collectively by the network. Bitcoin Core is the name of open source\nsoftware which enables the use of this currency.\n\nFor more information, as well as an immediately useable, binary version of\nthe Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n\nLicense\n-------\n\nBitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\ninformation or see https://opensource.org/licenses/MIT.\n\nDevelopment Process\n-------------------\n\nThe `master` branch is regularly built and tested, but is not guaranteed to be\ncompletely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\nregularly to indicate new official, stable release versions of Bitcoin Core.\n\nThe contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n\nTesting\n-------\n\nTesting and code review is the bottleneck for development; we get more pull\nrequests than we can review and test on short notice. Please be patient and help out by testing\nother people's pull requests, and remember this is a security-critical project where any mistake might cost people\nlots of money.\n\n### Automated Testing\n\nDevelopers are strongly encouraged to write [unit tests](src/test/README.md) for new code, and to\nsubmit new unit tests for old code. Unit tests can be compiled and run\n(assuming they weren't disabled in configure) with: `make check`. Further details on running\nand extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n\nThere are also [regression and integration tests](/test), written\nin Python, that are run automatically on the build server.\nThese tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n\nThe Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.\n\n### Manual Quality Assurance (QA) Testing\n\nChanges should be tested by somebody other than the developer who wrote the\ncode. This is especially important for large or high-risk changes. It is useful\nto add a test plan to the pull request description if testing the changes is\nnot straightforward.\n\nTranslations\n------------\n\nChanges to translations as well as new translations can be submitted to\n[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n\nTranslations are periodically pulled from Transifex and merged into the git repository. See the\n[translation process](doc/translation_process.md) for details on how this works.\n\n**Important**: We do not accept translation changes as GitHub pull requests because the next\npull from Transifex would automatically overwrite them again.\n\nTranslators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators).\n"
            }
          },
          {
            "name": "DyeVim",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "C++ semantic highlighting for Vim",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Vim script"
                },
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/DyeVim",
            "primaryLanguage": {
              "name": "Python"
            },
            "object": {
              "text": "DyeVim: C++ semantic highlighting for Vim\n=========================================\n[![Gitter Room](https://img.shields.io/gitter/room/davits/DyeVim.svg)](https://gitter.im/DyeVim/master)\n[![Build Status](https://travis-ci.org/davits/DyeVim.svg?branch=master)](https://travis-ci.org/davits/DyeVim)\n[![codecov](https://codecov.io/gh/davits/DyeVim/branch/master/graph/badge.svg)](https://codecov.io/gh/davits/DyeVim)\n\n\nPictures worth a thousand words:\n![DyeVim Demo](http://i.imgur.com/ASQnHS0.png?1)\n![DyeVim Demo Token](http://i.imgur.com/kGhMXab.png?1)\n\nFeatures\n-------------\n\nCurrently it can differentiate and higlight the following C++ idioms:\n\n    Namespace\n    Class, Struct, Union, TypeAlias\n    Variable, GlobalVariable, MemberVariable, StaticMemberVariable\n    Function, MemberFunction, StaticMemberFunction\n    FunctionParameter\n    Enumeration, Enumerator\n    TemplateParameter, TemplateNonTypeParameter\n    Macro, PreprocessingDirective\n\nIt also greys out the skipped ranges between #ifdef...#endif preprocessing directives.\n![Skipped Ranges](http://i.imgur.com/049354Y.png?1)\n\nHow it works\n------------\n\nSemantic tokens are provided by the [clang](http://clang.llvm.org/),\nextracted by the [ycmd](https://github.com/davits/ycmd) and obtained via\n[YouCompleteMe](https://github.com/davits/YouCompleteMe) plugin's frontend API,\nso in order to work DyeVim requires YouCompleteMe plugin to be installed.\n\nCurrently I am maintaining my own forks for\n[ycmd](https://github.com/davits/ycmd) and\n[YouCompleteMe](https://github.com/davits/YouCompleteMe) with changes required\nfor the semantic tokens to work, but I hope that in time these changes will be\nmerged back.\n\nSetup\n-----\n\nDyeVim works out of box and does not require any special configuration\n(assuming that YouCompleteMe is up and working normal), the only requirement\nis that it should be added to the Vim's runtimepath after YouCompleteMe.\n\nIf you are using Vundle:\n\n    Plugin davits/YouCompleteMe\n    Plugin davits/DyeVim\n\nCurrently only 2 colorschemes are supported: solarized and wombat256mod.\nIf your colorscheme is not supported DyeVim will try its best to highlight\nyour code by adding bold and italic modifiers to the existing colors.\n\nYou can also place your own coloring scheme in the autoload/dyevim/ft/cpp\ndirectory, named your_colorscheme.vim (see existing ones as an example).\n\nOptions\n-------\n\n### The `g:dyevim_timeout` option\n\nThis option sets query timeout in milliseconds for the tokens and\nskipped ranges. Note that request is a blocking operation and for worst case\nscenario Vim will be blocked by the specified amount, so it is not recomended to\nset timeout to >50 values.\n\nDefault: `10`\n\n```viml\nlet g:dyevim_timeout = 10\n```\n\nCaveats\n-------\n\nSince I mainly use gvim in my workflow, there is no terminal support... yet,\nsorry for that.\n\n\nAcknowledgements\n----------------\n\nThanks to the [YouCompleteMe](https://github.com/Valloric/YouCompleteMe)\nmaintainers team for the inspiration, help and support.\n\nI walked the path prepared by the\n[color_coded](https://github.com/jeaye/color_coded) plugin.\n"
            }
          },
          {
            "name": "secp256k1-zkp",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Makefile"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "M4"
                },
                {
                  "name": "C"
                },
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/secp256k1-zkp",
            "primaryLanguage": {
              "name": "C"
            },
            "object": null
          },
          {
            "name": "elements",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Open Source implementation of advanced blockchain features extending the Bitcoin protocol",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Makefile"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "M4"
                },
                {
                  "name": "Python"
                },
                {
                  "name": "QMake"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/elements",
            "primaryLanguage": {
              "name": "C++"
            },
            "object": null
          },
          {
            "name": "rust-www",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "The Rust website",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Ruby"
                },
                {
                  "name": "JavaScript"
                },
                {
                  "name": "Rust"
                },
                {
                  "name": "HTML"
                },
                {
                  "name": "CSS"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/rust-www",
            "primaryLanguage": {
              "name": "HTML"
            },
            "object": {
              "text": "# rust-www\n\nThis repository contains the source files for rust-lang.org.\n\n## Deployment\n\n[![Build Status](https://travis-ci.org/rust-lang/rust-www.svg?branch=master)](https://travis-ci.org/rust-lang/rust-www)\n\nThe site is built with TravisCI and automatically deployed to S3.\n\n## Testing Locally\n\nTo install jekyll (and any other dependencies, if we get any):\n\n```\nbundle install\n```\n\nTo run this website as a developer:\n\n```\njekyll serve\n```\n\nThis will serve the site at `localhost:4000`.\n"
            }
          },
          {
            "name": "borgbackup_on_android",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "project to make borgbackup run on Android",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Shell"
                },
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/borgbackup_on_android",
            "primaryLanguage": {
              "name": "Shell"
            },
            "object": {
              "text": "# borgbackup on android\nThis project provides build scripts to compile borgbackup (https://github.com/borgbackup/borg) and its dependencies on Android. It uses termux (https://termux.com/) as a lightweight environment. \n\nYoou don't root permission on your phone to use it. However without root permissions the access to data of other apps or system data is not possible, but you can still access your photos, videos,...\n\nIf you have root permission on your device, you can use tsu (https://github.com/cswl/tsu) to conveniently gain root permissions in termux and backup you complete device.\n\nHow to use:\n - install termux from F-Droid or Google Play (https://termux.com/)\n - open app\n - run \"apt update; apt install git\"\n - run \"git clone https://github.com/ravenschade/borgbackup_on_android.git\"\n - run \"cd borgbackup_on_android; bash build.sh\"\n - (if virtualenv for python does not work properly you have to set selinux to permissive (do \"/system/bin/setenforce 0\" with root permissions))\n\nKnown issues:\n - borg starting at 1.1 requires the system call sync_file_range (see https://github.com/borgbackup/borg/pull/985 and https://github.com/borgbackup/borg/issues/1961). The linux subsystem in Windows 10 and some older Android versions (for example Lineage including 14.1) do not yet have this. Lineage 15.0 has this call and should work. I have added a test to the build script that checks if sync_file_range is available. If it is not, then I apply a patch (borg_sync_file_range.patch) that replaces this sync with convential file syncs.\n\nTested with:\n- termux 0.56\n- borg 1.0.12, 1.1.3\n\nTested and working so far is:\n- creation of repositories \n- backup to repositories on the device\n- backup up to remote repositories via ssh\n\nTested and working on devices:\n- Huawei Nexus6p with stock Android 8.1.0 (angler, aarch64)\n- Samsung Galaxy Note 2 with Lineage 14.1 (n7100, armv7l, Android 7.1.1)\n\nFeedback on tests with other devices and android versions is very welcome.\n\nWarning messages like \n````\nWARNING: linker: /data/data/com.termux/files/usr/lib/libacl.so.1.1.0: unused DT entry: type 0xf arg 0x449\n````\nare due to the Android linker. More details can be found at https://stackoverflow.com/questions/33206409/unused-dt-entry-type-0x1d-arg.\n\n\nSo all in all my Android backup setup looks like:\n- borg, termux and tasker\n- termux: Task (https://f-droid.org/packages/com.termux.tasker/) for tasker integration\n- tsu (modified so that it takes commands with -c): https://github.com/ravenschade/tsu\n- .termux/tasker/backup.sh:\n``` bash\n#!/data/data/com.termux/files/usr/bin/bash\ndate\ntsu -e -c \"~/borgbackup_on_android/borg.sh\"\ndate\nread\n```\n- ~/borgbackup_on_android/borg.sh:\n```bash\n#!/data/data/com.termux/files/usr/bin/bash\nt=`date +%d_%m_%Y`\nexport BORG_UNKNOWN_UNENCRYPTED_REPO_ACCESS_IS_OK=yes\nexport BORG_RELOCATED_REPO_ACCESS_IS_OK=yes\nhost=angler\ndirs=\"/ /system /vendor /cache /persist /firmware /storage /data\"\nexport BORG_RSH=borg_ssh_wrapper\nsource /data/data/com.termux/files/home/borgbackup_on_android/borg-env/bin/activate\nborg create -C lz4 -p -v --stats --one-file-system backup:/backup/borg/$host::$t $dirs # 2> ~/borg_backup_${t}.err\n```\n"
            }
          },
          {
            "name": "rand",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "A Rust library for random number generation.",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Rust"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/rand",
            "primaryLanguage": {
              "name": "Rust"
            },
            "object": {
              "text": "# Rand\n\n[![Build Status](https://travis-ci.org/rust-lang-nursery/rand.svg?branch=master)](https://travis-ci.org/rust-lang-nursery/rand)\n[![Build Status](https://ci.appveyor.com/api/projects/status/github/rust-lang-nursery/rand?svg=true)](https://ci.appveyor.com/project/alexcrichton/rand)\n[![Latest version](https://img.shields.io/crates/v/rand.svg)](https://crates.io/crates/rand)\n[![Documentation](https://docs.rs/rand/badge.svg)](https://docs.rs/rand)\n[![Minimum rustc version](https://img.shields.io/badge/rustc-1.22+-yellow.svg)](https://github.com/rust-lang-nursery/rand#rust-version-requirements)\n[![License](https://img.shields.io/crates/l/rand.svg)](https://github.com/rust-lang-nursery/rand#license)\n\nA Rust library for random number generation.\n\nRand provides utilities to generate random numbers, to convert them to useful\ntypes and distributions, and some randomness-related algorithms.\n\nThe core random number generation traits of Rand live in the [rand_core](\nhttps://crates.io/crates/rand_core) crate; this crate is most useful when\nimplementing RNGs.\n\nDocumentation:\n-   [API reference for latest release](https://docs.rs/rand/0.5)\n-   [API reference for master branch](https://rust-lang-nursery.github.io/rand/rand/index.html)\n-   [Additional documentation (subdir)](doc/README.md)\n\n\n## Usage\n\nAdd this to your `Cargo.toml`:\n\n```toml\n[dependencies]\nrand = \"0.5\"\n```\n\nand this to your crate root:\n\n```rust\nextern crate rand;\n\nuse rand::prelude::*;\n\nfn main() {\n  // basic usage with random():\n  let x: u8 = random();\n  println!(\"{}\", x);\n\n  let y = random::<f64>();\n  println!(\"{}\", y);\n\n  if random() { // generates a boolean\n      println!(\"Heads!\");\n  }\n\n  // normal usage needs both an RNG and a function to generate the appropriate\n  // type, range, distribution, etc.\n  let mut rng = thread_rng();\n  if rng.gen() { // random bool\n      let x: f64 = rng.gen(); // random number in range [0, 1)\n      println!(\"x is: {}\", x);\n      let ch = rng.gen::<char>(); // Sometimes you need type annotation\n      println!(\"char is: {}\", ch);\n      println!(\"Number from 0 to 9: {}\", rng.gen_range(0, 10));\n  }\n}\n```\n\n## Functionality\n\nThe Rand crate provides:\n\n- A convenient to use default RNG, `thread_rng`: an automatically seeded,\n  crypto-grade generator stored in thread-local memory.\n- Pseudo-random number generators: `StdRng`, `SmallRng`, `prng` module.\n- Functionality for seeding PRNGs: the `FromEntropy` trait, and as sources of\n  external randomness `EntropyRng`, `OsRng` and `JitterRng`.\n- Most content from [`rand_core`](https://crates.io/crates/rand_core)\n  (re-exported): base random number generator traits and error-reporting types.\n- 'Distributions' producing many different types of random values:\n  - A `Standard` distribution for integers, floats, and derived types including\n    tuples, arrays and `Option`\n  - Unbiased sampling from specified `Uniform` ranges.\n  - Sampling from exponential/normal/gamma distributions.\n  - Sampling from binomial/poisson distributions.\n  - `gen_bool` aka Bernoulli distribution.\n- `seq`-uence related functionality:\n  - Sampling a subset of elements.\n  - Randomly shuffling a list.\n\n\n## Versions\n\nVersion 0.5 is the latest version and contains many breaking changes.\nSee [the Upgrade Guide](UPDATING.md) for guidance on updating from previous\nversions.\n\nVersion 0.4 was released in December 2017. It contains almost no breaking\nchanges since the 0.3 series.\n\nFor more details, see the [changelog](CHANGELOG.md).\n\n### Rust version requirements\n\nThe 0.5 release of Rand requires **Rustc version 1.22 or greater**.\nRand 0.4 and 0.3 (since approx. June 2017) require Rustc version 1.15 or\ngreater. Subsets of the Rand code may work with older Rust versions, but this\nis not supported.\n\nTravis CI always has a build with a pinned version of Rustc matching the oldest\nsupported Rust release. The current policy is that this can be updated in any\nRand release if required, but the change must be noted in the changelog.\n\n\n## Crate Features\n\nRand is built with only the `std` feature enabled by default. The following\noptional features are available:\n\n- `alloc` can be used instead of `std` to provide `Vec` and `Box`.\n- `log` enables some logging via the `log` crate.\n- `nightly` enables all unstable features (`simd_support`).\n- `serde1` enables serialization for some types, via Serde version 1.\n- `simd_support` enables uniform sampling of SIMD types (integers and floats).\n- `stdweb` enables support for `OsRng` on `wasm32-unknown-unknown` via `stdweb`\n  combined with `cargo-web`.\n- `wasm-bindgen` enables support for `OsRng` on `wasm32-unknown-unknown` via\n  [`wasm-bindgen`]\n\n[`wasm-bindgen`]: https://github.com/rustwasm/wasm-bindgen\n\n`no_std` mode is activated by setting `default-features = false`; this removes\nfunctionality depending on `std`:\n\n- `thread_rng()`, and `random()` are not available, as they require thread-local\n  storage and an entropy source.\n- `OsRng` and `EntropyRng` are unavailable.\n- `JitterRng` code is still present, but a nanosecond timer must be provided via\n  `JitterRng::new_with_timer`\n- Since no external entropy is available, it is not possible to create\n  generators with fresh seeds using the `FromEntropy` trait (user must provide\n  a seed).\n- Exponential, normal and gamma type distributions are unavailable since `exp`\n  and `log` functions are not provided in `core`.\n- The `seq`-uence module is unavailable, as it requires `Vec`.\n\n\n# License\n\nRand is distributed under the terms of both the MIT license and the\nApache License (Version 2.0).\n\nSee [LICENSE-APACHE](LICENSE-APACHE) and [LICENSE-MIT](LICENSE-MIT) for details.\n"
            }
          },
          {
            "name": "travis-build",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": ".travis.yml => build.sh converter",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Ruby"
                },
                {
                  "name": "Dockerfile"
                },
                {
                  "name": "HTML"
                },
                {
                  "name": "Shell"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/travis-build",
            "primaryLanguage": {
              "name": "Ruby"
            },
            "object": {
              "text": "# Travis Build [![Build Status](https://travis-ci.org/travis-ci/travis-build.svg?branch=master)](https://travis-ci.org/travis-ci/travis-build)\n\nTravis Build exposes an API that [Travis\nWorkers](https://github.com/travis-ci/worker) and [Job\nBoard](https://github.com/travis-ci/job-board) use to generate a bash script\nwhich is then copied to the job execution environment and executed, with the\nresulting output streamed back to Travis.\n\nThis code base has gone through several iterations of development, and was\noriginally extracted from [the legacy Travis\nWorker](https://github.com/travis-ci/travis-worker), before taking its current\nform.\n\n## Running test suites\n\nRun\n\n``` bash\nbundle exec rake spec\n```\n\n## Use as addon for CLI\n\nYou can set travis-build up as a plugin for the [command line\nclient](https://github.com/travis-ci/travis.rb):\n\n``` bash\nln -s PATH_TO_TRAVIS_BUILD ~/.travis/travis-build\ngem install bundler\nbundle install --gemfile ~/.travis/travis-build/Gemfile\nbundler binstubs travis\n```\n\nYou will now be able to run `travis compile`, which produces the bash script\nthat runs the specified job, except that the secure environment variables are\nnot defined, and that the build matrix expansion is not considered, e.g:\n\n``` bash\n~/.travis/travis-build/bin/travis compile\n```\n\n### _Important_\n\nThe resulting script contains commands that make changes to the system on which\nit is executed (e.g., edit `/etc/resolv.conf`, install software).  Some require\n`sudo` privileges and they are not easily undone.\n\nIt is highly recommended that you run this in a container or other virtualized\nenvironment.\n\n### Invocation\n\nThe command can be invoked in 3 ways:\n\nWithout an argument, it produces the bash script for the local `.travis.yml`\nwithout considering `env` and `matrix` values (`travis-build` is unable to\nexpand these keys correctly).\n\n``` bash\n~/.travis/travis-build/bin/travis compile\n```\n\nWith a single integer, it produces the script for the given build (or the first\njob of that build matrix).\n\n``` bash\n~/.travis/travis-build/bin/travis compile 8\n```\n\nWith an argument of the form `M.N`, it produces the bash script for the job\n`M.N`.\n\n``` bash\n~/.travis/travis-build/bin/travis compile 351.2\n```\n\nThe generated script can be used in a container or virtualized environment that\nclosely mimics Travis CI's build environment to aid you in debugging the build\nfailures.  Instructions for running such a container are available\n[in the Travis CI docs](https://docs.travis-ci.com/user/common-build-problems/#running-a-container-based-docker-image-locally).\n\n## Raw CLI script\n\nIn addition to the travis CLI plugin you can also run the standalone CLI script:\n\n``` bash\nbundle exec script/compile < payload.json > build.sh\n```\n\n## Docker container\n\nIf you want to run travis-build locally on your machine (e.g. to interact with\n[worker](https://github.com/travis-ci/worker)), you can also run it as a docker\ncontainer with docker-compose:\n\nFirst, build the image:\n\n``` bash\ndocker-compose build web\n```\n\nSecond, run the image:\n\n```bash\ndocker-compose run web\n```\n\nYou may wish to run with a different setup for local development.\nThe following shows running `travis-build` in the `development`\nenvironment, forwarding the Docker image's port 4000 to the host's\nport 4000:\n\n```bash\ndocker-compose run -e RACK_ENV=development -p 4000:4000 web\n```\n\nSee [`docker-compose` documentation](https://docs.docker.com/compose/reference/run/)\nfor more information.\n\n## License & copyright information\n\nSee [LICENSE](./LICENSE) file.\n\nCopyright (c) 2011-2016 [Travis CI development\nteam](https://github.com/travis-ci).\n"
            }
          },
          {
            "name": "docs-travis-ci-com",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "The Travis CI Documentation",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "HTML"
                },
                {
                  "name": "Ruby"
                },
                {
                  "name": "JavaScript"
                },
                {
                  "name": "CSS"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/docs-travis-ci-com",
            "primaryLanguage": {
              "name": "CSS"
            },
            "object": {
              "text": "# About this repository [![Build Status](https://travis-ci.org/travis-ci/docs-travis-ci-com.svg?branch=master)](https://travis-ci.org/travis-ci/docs-travis-ci-com)\n\nThis is the documentation site for Travis CI! (<http://docs.travis-ci.com/>)\n\n## How to contribute\n\nFork the repository, read the rest of this README file and make some changes.\nOnce you're done with your changes send a pull request. Thanks!\n\n## How to check your edit before sending PR\n\nYou can inspect how your edits will be reflected by the documentation site.\n\n### Install dependencies\n\n1. Make sure you have Ruby and RubyGems installed.\n\n1. Install [bundler](http://bundler.io/):\n\n    ```sh-session\n    $ gem install bundler\n    ```\n\n1. Install application dependencies:\n\n    ```sh-session\n    $ bundle install --binstubs\n    ```\n\n### Generate documentation\n\nRun\n\n```sh-session\n$ ./bin/jekyll build\n```\n\n\n### Run application server\n\nYou are now ready to start your documentation site, using Jekyll or Puma.\nFor documentation edits, Jekyll is sufficient.\n\n#### Starting and inspecting edits with Jekyll\n\n1. Run Jekyll server:\n\n    ```sh-session\n    $ ./bin/jekyll serve\n    ```\n\n1. Open [localhost:4000](http://localhost:4000/) in your browser.\n\n#### Starting and inspecting edits with Puma\n\nFor more programmatical PRs (such as handling webhooks notification\nvia POST), Puma is necessary.\n\n1. Run Puma server:\n\n    ```sh-session\n    $ ./bin/puma\n    ```\n\n1. Open [localhost:9292](http://localhost:9292/) in your browser.\n\n### API V2 documentation\n\nAPI V2 (and 2.1) documentation is maintained in `slate/source` and updated is now generated at build time from source.\n\n## License\n\nDistributed under the [MIT license](https://opensource.org/licenses/MIT); the same as other Travis CI projects.\n"
            }
          },
          {
            "name": "secp256k1-zkp",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
            "watchers": {
              "totalCount": 2
            },
            "languages": {
              "nodes": [
                {
                  "name": "Makefile"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "M4"
                },
                {
                  "name": "C"
                },
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/romanz/secp256k1-zkp",
            "primaryLanguage": {
              "name": "C"
            },
            "object": {
              "text": "libsecp256k1\n============\n\n[![Build Status](https://travis-ci.org/bitcoin-core/secp256k1.svg?branch=master)](https://travis-ci.org/bitcoin-core/secp256k1)\n\nOptimized C library for EC operations on curve secp256k1.\n\nThis library is a work in progress and is being used to research best practices. Use at your own risk.\n\nFeatures:\n* secp256k1 ECDSA signing/verification and key generation.\n* Adding/multiplying private/public keys.\n* Serialization/parsing of private keys, public keys, signatures.\n* Constant time, constant memory access signing and pubkey generation.\n* Derandomized DSA (via RFC6979 or with a caller provided function.)\n* Very efficient implementation.\n\nImplementation details\n----------------------\n\n* General\n  * No runtime heap allocation.\n  * Extensive testing infrastructure.\n  * Structured to facilitate review and analysis.\n  * Intended to be portable to any system with a C89 compiler and uint64_t support.\n  * Expose only higher level interfaces to minimize the API surface and improve application security. (\"Be difficult to use insecurely.\")\n* Field operations\n  * Optimized implementation of arithmetic modulo the curve's field size (2^256 - 0x1000003D1).\n    * Using 5 52-bit limbs (including hand-optimized assembly for x86_64, by Diederik Huys).\n    * Using 10 26-bit limbs.\n  * Field inverses and square roots using a sliding window over blocks of 1s (by Peter Dettman).\n* Scalar operations\n  * Optimized implementation without data-dependent branches of arithmetic modulo the curve's order.\n    * Using 4 64-bit limbs (relying on __int128 support in the compiler).\n    * Using 8 32-bit limbs.\n* Group operations\n  * Point addition formula specifically simplified for the curve equation (y^2 = x^3 + 7).\n  * Use addition between points in Jacobian and affine coordinates where possible.\n  * Use a unified addition/doubling formula where necessary to avoid data-dependent branches.\n  * Point/x comparison without a field inversion by comparison in the Jacobian coordinate space.\n* Point multiplication for verification (a*P + b*G).\n  * Use wNAF notation for point multiplicands.\n  * Use a much larger window for multiples of G, using precomputed multiples.\n  * Use Shamir's trick to do the multiplication with the public key and the generator simultaneously.\n  * Optionally (off by default) use secp256k1's efficiently-computable endomorphism to split the P multiplicand into 2 half-sized ones.\n* Point multiplication for signing\n  * Use a precomputed table of multiples of powers of 16 multiplied with the generator, so general multiplication becomes a series of additions.\n  * Access the table with branch-free conditional moves so memory access is uniform.\n  * No data-dependent branches\n  * The precomputed tables add and eventually subtract points for which no known scalar (private key) is known, preventing even an attacker with control over the private key used to control the data internally.\n\nBuild steps\n-----------\n\nlibsecp256k1 is built using autotools:\n\n    $ ./autogen.sh\n    $ ./configure\n    $ make\n    $ ./tests\n    $ sudo make install  # optional\n"
            }
          },
          {
            "name": "systemd",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "The systemd System and Service Manager ",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Emacs Lisp"
                },
                {
                  "name": "Vim script"
                },
                {
                  "name": "Python"
                },
                {
                  "name": "Makefile"
                },
                {
                  "name": "Meson"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/systemd",
            "primaryLanguage": {
              "name": "C"
            },
            "object": {
              "text": "# systemd - System and Service Manager\n\n<a href=\"https://in.waw.pl/systemd-github-state/systemd-systemd-issues.svg\"><img align=\"right\" src=\"https://in.waw.pl/systemd-github-state/systemd-systemd-issues-small.svg\" alt=\"Count of open issues over time\"></a>\n<a href=\"https://in.waw.pl/systemd-github-state/systemd-systemd-pull-requests.svg\"><img align=\"right\" src=\"https://in.waw.pl/systemd-github-state/systemd-systemd-pull-requests-small.svg\" alt=\"Count of open pull requests over time\"></a>\n[![Build Status](https://semaphoreci.com/api/v1/projects/28a5a3ca-3c56-4078-8b5e-7ed6ef912e14/443470/shields_badge.svg)](https://semaphoreci.com/systemd/systemd)<br/>\n[![Coverity Scan Status](https://scan.coverity.com/projects/350/badge.svg)](https://scan.coverity.com/projects/350)<br/>\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1369/badge)](https://bestpractices.coreinfrastructure.org/projects/1369)<br/>\n[![Build Status](https://travis-ci.org/systemd/systemd.svg?branch=master)](https://travis-ci.org/systemd/systemd)<br/>\n[![Language Grade: C/C++](https://img.shields.io/lgtm/grade/cpp/g/systemd/systemd.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/systemd/systemd/context:cpp)\n\n## Details\n\nGeneral information about systemd can be found in the [systemd Wiki](https://www.freedesktop.org/wiki/Software/systemd).\n\nInformation about build requirements is provided in the [README file](README).\n\nConsult our [NEWS file](NEWS) for information about what's new in the most recent systemd versions.\n\nPlease see the [Hacking guide](docs/HACKING.md) for information on how to hack on systemd and test your modifications.\n\nPlease see our [Contribution Guidelines](docs/CONTRIBUTING.md) for more information about filing GitHub Issues and posting GitHub Pull Requests.\n\nWhen preparing patches for systemd, please follow our [Coding Style Guidelines](docs/CODING_STYLE.md).\n\nIf you are looking for support, please contact our [mailing list](https://lists.freedesktop.org/mailman/listinfo/systemd-devel) or join our [IRC channel](irc://irc.freenode.org/%23systemd).\n\nStable branches with backported patches are available in the [stable repo](https://github.com/systemd/systemd-stable).\n"
            }
          },
          {
            "name": "minisketch",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Minisketch: an optimized library for BCH-based set reconciliation",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "C"
                },
                {
                  "name": "Makefile"
                },
                {
                  "name": "C++"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/minisketch",
            "primaryLanguage": {
              "name": "C++"
            },
            "object": {
              "text": "# Minisketch: a library for [BCH](https://en.wikipedia.org/wiki/BCH_code)-based set reconciliation\n<img align=\"right\" src=\"https://people.xiph.org/~greg/minisketch-vs.png\" />\n\n`libminisketch` is an optimized standalone MIT-licensed library with C API for constructing and decoding *set sketches*, which can be used for compact set reconciliation and other applications.\nIt is an implementation of the PinSketch<sup>[[1]](#myfootnote1)</sup> algorithm. An explanation of the algorithm can be found [here](doc/math.md).\n\n## Sketches for set reconciliation\n\nSketches, as produced by this library, can be seen as \"set checksums\" with two peculiar properties:\n* Sketches have a predetermined capacity, and when the number of elements in the set is not higher than the capacity, `libminisketch` will always recover the entire set from the sketch. A sketch of *b*-bit elements with capacity *c* can be stored in *bc* bits.\n* The sketches of two sets can be combined by adding them (XOR) to obtain a sketch of the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference) between the two sets (*i.e.*, all elements that occur in one but not both input sets).\n\nThis makes them appropriate for a very bandwidth-efficient set reconciliation protocol. If Alice and Bob each have a set of elements, and they suspect that the sets largely but not entirely overlap,\nthey can use the following protocol to let both parties learn all the elements:\n* Alice and Bob both compute a sketch of their set elements.\n* Alice sends her sketch to Bob.\n* Bob combines the two sketches, and obtains a sketch of the symmetric difference.\n* Bob tries to recover the elements from the difference sketch.\n* Bob sends every element in the difference that he has to Alice.\n\nThis will always succeed when the size of the difference (elements that Alice has but Bob doesn't plus elements that Bob has but Alice doesn't) does not exceed the\ncapacity of the sketch that Alice sent. The interesting part is that this works regardless of the actual set sizes‚Äîonly the difference matters.\n\nIf the elements are large, it may be preferable to compute the sketches over *hashes* of the set elements. In that case an additional step is added to the protocol, where Bob also sends the hash\nof every element he does not have to Alice, who responds with the requested elements.\n\nThe doc/ directory has additional [tips for designing reconciliation protocols using libminisketch](doc/protocoltips.md).\n\n## Evaluation\n\n<img src=\"doc/plot_capacity.png\" width=\"432\" height=\"324\" /> <img src=\"doc/plot_diff.png\" width=\"432\" height=\"324\" />\n\n<img src=\"doc/plot_size.png\" width=\"432\" height=\"324\" /> <img src=\"doc/plot_bits.png\" width=\"432\" height=\"324\" />\n\n**The first graph** above shows a benchmark of `libminisketch` against three other set reconciliation algorithms/implementations. The benchmarks were performed using a single core on a system with an Intel Core i7-7820HQ CPU with clock speed locked at 2.4 GHz. The diagram shows the time needed for merging of two sketches and decoding the result. The creation of a sketch on the same machine takes around 5 ns per capacity and per set element. The other implementations are:\n* [`pinsketch`](https://www.cs.bu.edu/~reyzin/code/fuzzy.html), the original PinSketch implementation.\n* [`cpisync`](https://github.com/trachten/cpisync), a software project which implements a number of set reconciliation algorithms and protocols. The included benchmark analyzes the non-probabilistic version of the original CPISync algorithm<sup>[[5]](#myfootnote5)</sup> only.\n* A high-performance custom IBLT implementation using 4 hash functions and 32-bit checksums.\n\nFor the largest sizes currently of interest to the authors, such as a set of capacity 4096 with 1024 differences, `libminisketch` is forty-nine times faster than `pinsketch` and over eight thousand times faster than `cpisync`. `libminisketch` is fast enough on realistic set sizes for use on high-traffic network servers where computational resources are limited.\n\nEven where performance is latency-limited, small minisketches can be fast enough to improve performance. On the above i7-7820HQ, a set of 2500 30-bit entries with a difference of 20 elements can be communicated in less time with a minisketch than sending the raw set so long as the communications bandwidth is 1 gigabit per second or less; an eight-element difference can be communicated in better than one-fifth the time on a gigabit link.\n\n**The second graph** above shows the performance of the same algorithms on the same system, but this time keeping the capacity constant at 128, while varying the number of differences to reconcile between 1 and 128. It shows how `cpisync`'s reconciliation speed is mostly dependent on capacity, while `pinsketch`/`libminisketch` are more dependent on number of differences.\n\n**The third graph** above shows the size overhead of a typical IBLT scheme over the other algorithms (which are near-optimal bandwidth), for various levels of failure probability. IBLT takes tens of times the bandwidth of `libminisketch` sketches when the set difference size is small and the required failure rate is low.\n\n**The fourth graph** above shows the effect of the field size on speed in `libminisketch`. The three lines correspond to:\n* CLMUL 64-bit: Intel Core i7-7820HQ system at 2.4 GHz\n* Generic 64-bit: POWER9 CP9M06 system at 2.8 GHz (Talos II)\n* Generic 32-bit: Cortex-A53 at 1.2 GHz (Raspberry Pi 3B)\n\nIt shows how CLMUL implementations are faster for certain fields (specifically, field sizes for which an irreducible polynomial of the form *x<sup>b</sup> + x + 1* over *GF(2)* exists, and to a lesser extent, fields which are a multiple of 8 bits). It also shows how (for now) a significant performance drop exists for fields larger than 32 bits on 32-bit platforms. Note that the three lines are not at the same scale (the Raspberry Pi 3B is around 10x slower for 32-bit fields than the Core i7; the POWER9 is around 1.3x slower).\n\nBelow we compare the PinSketch algorithm (which `libminisketch` is an implementation of) with other set reconciliation algorithms:\n\n| Algorithm                                             | Sketch size               | Decode success | Decoding complexity | Difference type | Secure sketch |\n| ----------------------------------------------------- | ------------------------- | ---------------| ------------------- | --------------- | ------------- |\n| CPISync<sup>[[2]](#myfootnote2)</sup>                 | *(b+1)c*                  | Always         | *O(n<sup>3</sup>)*  | Both            | Yes           |\n| PinSketch<sup>[[1]](#myfootnote1)</sup>               | *bc*                      | Always         | *O(n<sup>2</sup>)*  | Symmetric only  | Yes           |\n| IBLT<sup>[[6]](#myfootnote1)[[7]](#myfootnote1)</sup> | *&alpha;bc* (see graph 3) | Probabilistic  | *O(n)*              | Depends         | No            |\n\n* **Sketch size:** This column shows the size in bits of a sketch designed for reconciling *c* different *b*-bit elements. PinSketch and CPISync have a near-optimal<sup>[[11]](#myfootnote11)</sup> communication overhead, which in practice means the sketch size is very close (or equal to) *bc* bits. That is the same size as would be needed to transfer the elements of the difference naively (which is remarkable, as the difference isn't even known by the sender). For IBLT there is an overhead factor *&alpha;*, which depends on various design parameters, but is often between *2* and *10*.\n* **Decode success:** Whenever a sketch is designed with a capacity not lower than the actual difference size, CPISync and PinSketch guarantee that decoding of the difference will always succeed. IBLT always has a chance of failure, though that chance can be made arbitrarily small by increasing the communication overhead.\n* **Decoding complexity:** The space savings achieved by near-optimal algorithms come at a cost in performance, as their asymptotic decode complexity is quadratic or cubic, while IBLT is linear. This means that using near-optimal algorithms can be too expensive for applications where the difference is sufficiently large.\n* **Difference type:** PinSketch can only compute the symmetric difference from a merged sketch, while CPISync and IBLT can distinguish which side certain elements were missing on. When the decoder has access to one of the sets, this generally doesn't matter, as he can look up each of the elements in the symmetric difference with one of the sets.\n* **Secure sketch:** Whether the sketch satisfies the definition of a secure sketch<sup>[[1]](#myfootnote1)</sup>, which implies a minimal amount about a set can be extracted from a sketch by anyone who does not know most of the elements already. This makes the algorithm appropriate for applications like fingerprint authentication.\n\n## Building\n\nThe build system is very rudimentary for now, and [improvements](https://github.com/sipa/minisketch/pulls) are welcome.\n\nThe following may work and produce a `libminisketch.a` file you can link against:\n\n```bash\ngit clone https://github.com/sipa/minisketch\ncd minisketch/src\nmake\n```\n\n## Usage\n\nIn this section Alice and Bob are trying to find the difference between their sets.\nAlice has the set *[3000 ... 3009]*, while Bob has *[3002 ... 3011]*.\n\nFirst, Alice creates a sketch:\n\n```c\n#include <stdio.h>\n#include <assert.h>\n#include \"../include/minisketch.h\"\nint main(void) {\n\n  minisketch *sketch_a = minisketch_create(12, 0, 4);\n```\n\nThe arguments are:\n* The field size *b*, which specifies the size of the elements being reconciled. With a field size *b*, the supported range of set elements is the integers from *1* to *2<sup>b</sub>* *- 1*, inclusive. Note that elements cannot be zero.\n* The implementation number. Implementation *0* is always supported, but more efficient algorithms may be available on some hardware. The serialized form of a sketch is independent of the implementation, so different implementations can interoperate.\n* The capacity *c*, which specifies how many differences the resulting sketch can reconcile.\n\nThen Alice adds her elements to her sketch. Note that adding the same element a second time removes it again, as sketches have set semantics, not multiset semantics.\n\n```c\n  for (int i = 3000; i < 3010; ++i) {\n    minisketch_add_uint64(sketch_a, i);\n  }\n```\n\nThe next step is serializing the sketch into a byte array:\n\n```c\n  size_t sersize = minisketch_serialized_size(sketch_a);\n  assert(sersize == 12 * 4 / 8); // 4 12-bit values is 6 bytes.\n  unsigned char *buffer_a = malloc(sersize);\n  minisketch_serialize(sketch_a, buffer_a);\n  minisketch_destroy(sketch_a);\n```\n\nThe contents of the buffer can then be submitted to Bob, who can create his own sketch:\n\n```c\n  minisketch *sketch_b = minisketch_create(12, 0, 4); // Bob's own sketch\n  for (int i = 3002; i < 3012; ++i) {\n    minisketch_add_uint64(sketch_b, i);\n  }\n```\n\nAfter Bob receives Alice's serialized sketch, he can reconcile:\n\n```c\n  sketch_a = minisketch_create(12, 0, 4);     // Alice's sketch\n  minisketch_deserialize(sketch_a, buffer_a); // Load Alice's sketch\n  free(buffer_a);\n\n  // Merge the elements from sketch_a into sketch_b. The result is a sketch_b\n  // which contains all elements that occurred in Alice's or Bob's sets, but not\n  // in both.\n  minisketch_merge(sketch_b, sketch_a);\n\n  uint64_t differences[4];\n  ssize_t num_differences = minisketch_decode(sketch_b, 4, differences);\n  minisketch_destroy(sketch_a);\n  minisketch_destroy(sketch_b);\n  if (num_differences < 0) {\n    printf(\"More than 4 differences!\\n\");\n  } else {\n    ssize_t i;\n    for (i = 0; i < num_differences; ++i) {\n      printf(\"%u is in only one of the two sets\\n\", (unsigned)differences[i]);\n    }\n  }\n}\n```\n\nIn this example Bob would see output such as:\n\n```\n$ gcc -std=c99 -Wall -Wextra -o example ./doc/example.c -Lsrc/ -lminisketch -lstdc++ && ./example\n3000 is in only one of the two sets\n3011 is in only one of the two sets\n3001 is in only one of the two sets\n3010 is in only one of the two sets\n```\n\nThe order of the output is arbitrary and will differ on different runs of minisketch_decode().\n\n## Applications\n\nCommunications efficient set reconciliation has been proposed to optimize Bitcoin transaction distribution<sup>[[8]](#myfootnote8)</sup>, which would allow Bitcoin nodes to have many more peers while reducing bandwidth usage. It could also be used for Bitcoin block distribution<sup>[[9]](#myfootnote9)</sup>, particularly for very low bandwidth links such as satellite.  A similar approach (CPISync) is used by PGP SKS keyservers to synchronize their databases efficiently. Secure sketches can also be used as helper data to reliably extract a consistent cryptographic key from fuzzy biometric data while leaking minimal information<sup>[[1]](#myfootnote1)</sup>. They can be combined with [dcnets](https://en.wikipedia.org/wiki/Dining_cryptographers_problem) to create cryptographic multiparty anonymous communication<sup>[[10]](#myfootnote10)</sup>. \n\n## Implementation notes\n\n`libminisketch` is written in C++11, but has a [C API](include/minisketch.h) for compatibility reasons.\n\nSpecific algorithms and optimizations used:\n* Finite field implementations:\n  * A generic implementation using C unsigned integer bit operations, and one using the [CLMUL instruction](https://en.wikipedia.org/wiki/CLMUL_instruction_set) where available. The latter has specializations for different classes of fields that permit optimizations (those with trinomial irreducible polynomials, and those whose size is a multiple of 8 bits).\n  * Precomputed tables for (repeated) squaring, and for solving equations of the form *x<sup>2</sup> + x = a*<sup>[[2]](#myfootnote2)</sup>.\n  * Inverses are computed using an [exponentiation ladder](https://en.wikipedia.org/w/index.php?title=Exponentiation_by_squaring&oldid=868883860) on systems where multiplications are relatively fast, and using an [extended GCD algorithm](https://en.wikipedia.org/w/index.php?title=Extended_Euclidean_algorithm&oldid=865802511#Computing_multiplicative_inverses_in_modular_structures) otherwise.\n  * Repeated multiplications are accelerated using runtime precomputations on systems where multiplications are relatively slow.\n  * The serialization of field elements always represents them as bits that are coefficients of the lowest-weight (using lexicographic order as tie breaker) irreducible polynomials over *GF(2)* (see [this list](doc/moduli.md)), but for some implementations they are converted to a different representation internally.\n* The sketch algorithms are specialized for each separate field implementation, permitting inlining and specific optimizations while avoiding dynamic allocations and branching costs.\n* Decoding of sketches uses the [Berlekamp-Massey algorithm](https://en.wikipedia.org/w/index.php?title=Berlekamp%E2%80%93Massey_algorithm&oldid=870768940)<sup>[[3]](#myfootnote3)</sup> to compute the characteristic polynomial.\n* Finding the roots of polynomials is done using the Berlekamp trace algorithm with explicit formula for quadratic polynomials<sup>[[4]](#myfootnote4)</sup>. The root finding is randomized to prevent adversarial inputs that intentionally trigger worst-case decode time.\n* A (possibly) novel optimization combines a test for unique roots with the Berlekamp trace algorithm.\n\nSome improvements that are still TODO:\n* Explicit formulas for the roots of polynomials of higher degree than 2\n* Subquadratic multiplication and modulus algorithms\n* The [Half-GCD algorithm](http://mathworld.wolfram.com/Half-GCD.html) for faster GCDs\n* An interface for incremental decoding: most of the computation in most failed decodes can be reused when attempting to decode a longer sketch of the same set\n* Platform specific optimizations for platforms other than x86\n* Avoid using slow uint64_t for calculations on 32-bit hosts\n* Optional IBLT / Hybrid and set entropy coder under the same interface\n\n## References\n\n* <a name=\"myfootnote1\">[1]</a> Dodis, Ostrovsky, Reyzin and Smith. *Fuzzy Extractors: How to Generate Strong Keys from Biometrics and Other Noisy Data.* SIAM Journal on Computing, volume 38, number 1, pages 97-139, 2008). [[URL]](http://eprint.iacr.org/2003/235) [[PDF]](https://eprint.iacr.org/2003/235.pdf)\n* <a name=\"myfootnote5\">[5]</a> A. Trachtenberg, D. Starobinski and S. Agarwal. *Fast PDA synchronization using characteristic polynomial interpolation.* Proceedings, Twenty-First Annual Joint Conference of the IEEE Computer and Communications Societies, New York, NY, USA, 2002, pp. 1510-1519 vol.3. [[PDF]](https://pdfs.semanticscholar.org/43da/2070b6b7b2320a1fed2fd5e70e87332c9c5e.pdf)\n* <a name=\"myfootnote2\">[2]</a> Cherly, J√∏rgen, Luis Gallardo, Leonid Vaserstein, and Ethel Wheland. *Solving quadratic equations over polynomial rings of characteristic two.* Publicacions Matem√†tiques (1998): 131-142. [[PDF]](https://www.raco.cat/index.php/PublicacionsMatematiques/article/viewFile/37927/40412)\n* <a name=\"myfootnote3\">[3]</a> J. Massey. *Shift-register synthesis and BCH decoding.* IEEE Transactions on Information Theory, vol. 15, no. 1, pp. 122-127, January 1969. [[PDF]](http://crypto.stanford.edu/~mironov/cs359/massey.pdf)\n* <a name=\"myfootnote4\">[4]</a> Bhaskar Biswas, Vincent Herbert. *Efficient Root Finding of Polynomials over Fields of Characteristic 2.* 2009. hal-00626997. [[URL]](https://hal.archives-ouvertes.fr/hal-00626997) [[PDF]](https://hal.archives-ouvertes.fr/hal-00626997/document)\n* <a name=\"myfootnote6\">[6]</a> Eppstein, David, Michael T. Goodrich, Frank Uyeda, and George Varghese. *What's the difference?: efficient set reconciliation without prior context.* ACM SIGCOMM Computer Communication Review, vol. 41, no. 4, pp. 218-229. ACM, 2011. [[PDF]](https://www.ics.uci.edu/~eppstein/pubs/EppGooUye-SIGCOMM-11.pdf)\n* <a name=\"myfootnote7\">[7]</a> Goodrich, Michael T. and Michael Mitzenmacher. *Invertible bloom lookup tables.* 2011 49th Annual Allerton Conference on Communication, Control, and Computing (Allerton) (2011): 792-799. [[PDF]](https://arxiv.org/pdf/1101.2245.pdf)\n* <a name=\"myfootnote8\">[8]</a> Maxwell, Gregory F. *[Blocksonly mode BW savings, the limits of efficient block xfer, and better relay](https://bitcointalk.org/index.php?topic=1377345.0)* Bitcointalk 2016, *[Technical notes on mempool synchronizing relay](https://people.xiph.org/~greg/mempool_sync_relay.txt)* #bitcoin-wizards 2016.\n* <a name=\"myfootnote9\">[9]</a> Maxwell, Gregory F. *[Block network coding](https://en.bitcoin.it/wiki/User:Gmaxwell/block_network_coding)* Bitcoin Wiki 2014, *[Technical notes on efficient block xfer](https://people.xiph.org/~greg/efficient.block.xfer.txt)* #bitcoin-wizards 2015.\n* <a name=\"myfootnote10\">[10]</a> Ruffing, Tim, Moreno-Sanchez, Pedro, Aniket, Kate, *P2P Mixing and Unlinkable Bitcoin Transactions* NDSS Symposium 2017 [[URL]](https://eprint.iacr.org/2016/824) [[PDF]](https://eprint.iacr.org/2016/824.pdf)\n* <a name=\"myfootnote11\">[11]</a> Y. Misky, A. Trachtenberg, R. Zippel. *Set Reconciliation with Nearly Optimal Communication Complexity.* Cornell University, 2000. [[URL]](https://ecommons.cornell.edu/handle/1813/5803) [[PDF]](https://ecommons.cornell.edu/bitstream/handle/1813/5803/2000-1813.pdf)\n"
            }
          },
          {
            "name": "trezor-core",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": ":lock: TREZOR Core",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "Dockerfile"
                },
                {
                  "name": "Makefile"
                },
                {
                  "name": "Python"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "C"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/trezor-core",
            "primaryLanguage": {
              "name": "C"
            },
            "object": {
              "text": "# TREZOR Core\n\n![TREZOR Logo](docs/logo.png)\n\n[![Build Status](https://travis-ci.org/trezor/trezor-core.svg?branch=master)](https://travis-ci.org/trezor/trezor-core)\n[![Gitter](https://badges.gitter.im/trezor/community.svg)](https://gitter.im/trezor/community)\n\nThis is the source code for 2nd generation of TREZOR called TREZOR model T.\n\nIt runs both inside of the device and also in the TREZOR Emulator.\n\n![emulator](docs/emulator.jpg)\n\n## Documentation\n\n* [API](docs/api.md)\n* [Build instructions](docs/build.md)\n* [Bootloader](docs/bootloader.md)\n* [Hardware](docs/hardware.md)\n* [Memory Layout](docs/memory.md)\n* [TOIF Image Format](docs/toif.md)\n"
            }
          },
          {
            "name": "monero",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Monero: the secure, private, untraceable cryptocurrency",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "CMake"
                },
                {
                  "name": "Dockerfile"
                },
                {
                  "name": "Makefile"
                },
                {
                  "name": "C"
                },
                {
                  "name": "C++"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/monero",
            "primaryLanguage": {
              "name": "C++"
            },
            "object": {
              "text": "# Monero\n\nCopyright (c) 2014-2018 The Monero Project.   \nPortions Copyright (c) 2012-2013 The Cryptonote developers.\n\n## Development resources\n\n- Web: [getmonero.org](https://getmonero.org)\n- Forum: [forum.getmonero.org](https://forum.getmonero.org)\n- Mail: [dev@getmonero.org](mailto:dev@getmonero.org)\n- GitHub: [https://github.com/monero-project/monero](https://github.com/monero-project/monero)\n- IRC: [#monero-dev on Freenode](https://webchat.freenode.net/?randomnick=1&channels=%23monero-dev&prompt=1&uio=d4)\n\n## Vulnerability response\n\n- Our [Vulnerability Response Process](https://github.com/monero-project/meta/blob/master/VULNERABILITY_RESPONSE_PROCESS.md) encourages responsible disclosure\n- We are also available via [HackerOne](https://hackerone.com/monero)\n\n## Research\n\nThe [Monero Research Lab](https://src.getmonero.org/resources/research-lab/) is an open forum where the community coordinates research into Monero cryptography, protocols, fungibility, analysis, and more. We welcome collaboration and contributions from outside researchers! Because not all Lab work and publications are distributed as traditional preprints or articles, they may be easy to miss if you are conducting literature reviews for your own Monero research. You are encouraged to get in touch with our researchers if you have questions, wish to collaborate, or would like guidance to help avoid unnecessarily duplicating earlier or known work.\n\nOur researchers are available on IRC in [#monero-research-lab on Freenode](https://webchat.freenode.net/?randomnick=1&channels=%23monero-research-lab&prompt=1&uio=d4) or by email:\n\n- Sarang Noether, Ph.D.: [sarang@getmonero.org](mailto:sarang@getmonero.org) or [sarang.noether@protonmail.com](mailto:sarang.noether@protonmail.com); [research repository](https://github.com/SarangNoether/research-lab)\n- Surae Noether (Brandon Goodell), Ph.D.: [surae@getmonero.org](mailto:surae@getmonero.org) or [surae.noether@protonmail.com](mailto:surae.noether@protonmail.com); [research repository](https://github.com/b-g-goodell/research-lab)\n\n## Announcements\n\n- You can subscribe to an [announcement listserv](https://lists.getmonero.org) to get critical announcements from the Monero core team. The announcement list can be very helpful for knowing when software updates are needed.\n\n## Build\n\n### IMPORTANT\n\nThese builds are of the master branch, which is used for active development and can be either unstable or incompatible with release software. Please compile release branches.\n\n| Operating System      | Processor | Status |\n| --------------------- | -------- |--------|\n| Ubuntu 16.04          |  i686    | [![Ubuntu 16.04 i686](https://build.getmonero.org/png?builder=monero-static-ubuntu-i686)](https://build.getmonero.org/builders/monero-static-ubuntu-i686)\n| Ubuntu 16.04          |  amd64   | [![Ubuntu 16.04 amd64](https://build.getmonero.org/png?builder=monero-static-ubuntu-amd64)](https://build.getmonero.org/builders/monero-static-ubuntu-amd64)\n| Ubuntu 16.04          |  armv7   | [![Ubuntu 16.04 armv7](https://build.getmonero.org/png?builder=monero-static-ubuntu-arm7)](https://build.getmonero.org/builders/monero-static-ubuntu-arm7)\n| Debian Stable         |  armv8   | [![Debian armv8](https://build.getmonero.org/png?builder=monero-static-debian-armv8)](https://build.getmonero.org/builders/monero-static-debian-armv8)\n| OSX 10.11             |  amd64   | [![OSX 10.11 amd64](https://build.getmonero.org/png?builder=monero-static-osx-10.11)](https://build.getmonero.org/builders/monero-static-osx-10.11)\n| OSX 10.12             |  amd64   | [![OSX 10.12 amd64](https://build.getmonero.org/png?builder=monero-static-osx-10.12)](https://build.getmonero.org/builders/monero-static-osx-10.12)\n| OSX 10.13             |  amd64   | [![OSX 10.13 amd64](https://build.getmonero.org/png?builder=monero-static-osx-10.13)](https://build.getmonero.org/builders/monero-static-osx-10.13)\n| FreeBSD 11            |  amd64   | [![FreeBSD 11 amd64](https://build.getmonero.org/png?builder=monero-static-freebsd64)](https://build.getmonero.org/builders/monero-static-freebsd64)\n| DragonFly BSD 4.6     |  amd64   | [![DragonFly BSD amd64](https://build.getmonero.org/png?builder=monero-static-dragonflybsd-amd64)](https://build.getmonero.org/builders/monero-static-dragonflybsd-amd64)\n| Windows (MSYS2/MinGW) |  i686    | [![Windows (MSYS2/MinGW) i686](https://build.getmonero.org/png?builder=monero-static-win32)](https://build.getmonero.org/builders/monero-static-win32)\n| Windows (MSYS2/MinGW) |  amd64   | [![Windows (MSYS2/MinGW) amd64](https://build.getmonero.org/png?builder=monero-static-win64)](https://build.getmonero.org/builders/monero-static-win64)\n\n## Coverage\n\n| Type      | Status |\n|-----------|--------|\n| Coverity  | [![Coverity Status](https://scan.coverity.com/projects/9657/badge.svg)](https://scan.coverity.com/projects/9657/)\n| Coveralls | [![Coveralls Status](https://coveralls.io/repos/github/monero-project/monero/badge.svg?branch=master)](https://coveralls.io/github/monero-project/monero?branch=master)\n| License   | [![License](https://img.shields.io/badge/license-BSD3-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n\n## Introduction\n\nMonero is a private, secure, untraceable, decentralised digital currency. You are your bank, you control your funds, and nobody can trace your transfers unless you allow them to do so.\n\n**Privacy:** Monero uses a cryptographically sound system to allow you to send and receive funds without your transactions being easily revealed on the blockchain (the ledger of transactions that everyone has). This ensures that your purchases, receipts, and all transfers remain absolutely private by default.\n\n**Security:** Using the power of a distributed peer-to-peer consensus network, every transaction on the network is cryptographically secured. Individual wallets have a 25 word mnemonic seed that is only displayed once, and can be written down to backup the wallet. Wallet files are encrypted with a passphrase to ensure they are useless if stolen.\n\n**Untraceability:** By taking advantage of ring signatures, a special property of a certain type of cryptography, Monero is able to ensure that transactions are not only untraceable, but have an optional measure of ambiguity that ensures that transactions cannot easily be tied back to an individual user or computer.\n\n## About this project\n\nThis is the core implementation of Monero. It is open source and completely free to use without restrictions, except for those specified in the license agreement below. There are no restrictions on anyone creating an alternative implementation of Monero that uses the protocol and network in a compatible manner.\n\nAs with many development projects, the repository on Github is considered to be the \"staging\" area for the latest changes. Before changes are merged into that branch on the main repository, they are tested by individual developers in their own branches, submitted as a pull request, and then subsequently tested by contributors who focus on testing and code reviews. That having been said, the repository should be carefully considered before using it in a production environment, unless there is a patch in the repository for a particular show-stopping issue you are experiencing. It is generally a better idea to use a tagged release for stability.\n\n**Anyone is welcome to contribute to Monero's codebase!** If you have a fix or code change, feel free to submit it as a pull request directly to the \"master\" branch. In cases where the change is relatively small or does not affect other parts of the codebase it may be merged in immediately by any one of the collaborators. On the other hand, if the change is particularly large or complex, it is expected that it will be discussed at length either well in advance of the pull request being submitted, or even directly on the pull request.\n\n## Supporting the project\n\nMonero is a 100% community-sponsored endeavor. If you want to join our efforts, the easiest thing you can do is support the project financially. Both Monero and Bitcoin donations can be made to **donate.getmonero.org** if using a client that supports the [OpenAlias](https://openalias.org) standard. Alternatively you can send XMR to the Monero donation address via the `donate` command (type `help` in the command-line wallet for details).\n\nThe Monero donation address is: `44AFFq5kSiGBoZ4NMDwYtN18obc8AemS33DBLWs3H7otXft3XjrpDtQGv7SqSsaBYBb98uNbr2VBBEt7f2wfn3RVGQBEP3A` (viewkey: `f359631075708155cc3d92a32b75a7d02a5dcf27756707b47a2b31b21c389501`)\n\nThe Bitcoin donation address is: `1KTexdemPdxSBcG55heUuTjDRYqbC5ZL8H`\n\nCore development funding and/or some supporting services are also graciously provided by sponsors:\n\n[<img width=\"80\" src=\"https://static.getmonero.org/images/sponsors/mymonero.png\"/>](https://mymonero.com)\n[<img width=\"150\" src=\"https://static.getmonero.org/images/sponsors/kitware.png?1\"/>](https://kitware.com)\n[<img width=\"100\" src=\"https://static.getmonero.org/images/sponsors/dome9.png\"/>](https://dome9.com)\n[<img width=\"150\" src=\"https://static.getmonero.org/images/sponsors/araxis.png\"/>](https://araxis.com)\n[<img width=\"150\" src=\"https://static.getmonero.org/images/sponsors/jetbrains.png\"/>](https://www.jetbrains.com/)\n[<img width=\"150\" src=\"https://static.getmonero.org/images/sponsors/navicat.png\"/>](https://www.navicat.com/)\n[<img width=\"150\" src=\"https://static.getmonero.org/images/sponsors/symas.png\"/>](https://www.symas.com/)\n\nThere are also several mining pools that kindly donate a portion of their fees, [a list of them can be found on our Bitcointalk post](https://bitcointalk.org/index.php?topic=583449.0).\n\n## License\n\nSee [LICENSE](LICENSE).\n\n## Contributing\n\nIf you want to help out, see [CONTRIBUTING](CONTRIBUTING.md) for a set of guidelines.\n\n## Scheduled software upgrades\n\nMonero uses a fixed-schedule software upgrade (hard fork) mechanism to implement new features. This means that users of Monero (end users and service providers) should run current versions and upgrade their software on a regular schedule. Software upgrades occur during the months of April and October. The required software for these upgrades will be available prior to the scheduled date. Please check the repository prior to this date for the proper Monero software version. Below is the historical schedule and the projected schedule for the next upgrade.\nDates are provided in the format YYYY-MM-DD.\n\n\n| Software upgrade block height | Date       | Fork version | Minimum Monero version | Recommended Monero version | Details                                                                            |  \n| ------------------------------ | -----------| ----------------- | ---------------------- | -------------------------- | ---------------------------------------------------------------------------------- |\n| 1009827                        | 2016-03-22 | v2                | v0.9.4                 | v0.9.4                     | Allow only >= ringsize 3, blocktime = 120 seconds, fee-free blocksize 60 kb       |\n| 1141317                        | 2016-09-21 | v3                | v0.9.4                 | v0.10.0                    | Splits coinbase into denominations  |\n| 1220516                        | 2017-01-05 | v4                | v0.10.1                | v0.10.2.1                  | Allow normal and RingCT transactions |\n| 1288616                        | 2017-04-15 | v5                | v0.10.3.0              | v0.10.3.1                  | Adjusted minimum blocksize and fee algorithm      |\n| 1400000                        | 2017-09-16 | v6                | v0.11.0.0              | v0.11.0.0                  | Allow only RingCT transactions, allow only >= ringsize 5      |\n| 1546000                        | 2018-04-06 | v7                | v0.12.0.0              | v0.12.3.0                  | Cryptonight variant 1, ringsize >= 7, sorted inputs\n| 1685555                        | 2018-10-18 | v8                | v0.13.0.0              | v0.13.0.4                  | max transaction size at half the penalty free block size, bulletproofs enabled, cryptonight variant 2, fixed ringsize [11](https://youtu.be/KOO5S4vxi0o)\n| 1686275                        | 2018-10-19 | v9                | v0.13.0.0              | v0.13.0.4                  | bulletproofs required\n| XXXXXXX                        | 2019-04-XX | XX                | XXXXXXXXX              | XXXXXXXXX                  | X\n\nX's indicate that these details have not been determined as of commit date.\n\n## Release staging schedule and protocol\n\nApproximately three months prior to a scheduled software upgrade, a branch from Master will be created with the new release version tag. Pull requests that address bugs should then be made to both Master and the new release branch. Pull requests that require extensive review and testing (generally, optimizations and new features) should *not* be made to the release branch.\n\n## Compiling Monero from source\n\n### Dependencies\n\nThe following table summarizes the tools and libraries required to build. A\nfew of the libraries are also included in this repository (marked as\n\"Vendored\"). By default, the build uses the library installed on the system,\nand ignores the vendored sources. However, if no library is found installed on\nthe system, then the vendored source will be built and used. The vendored\nsources are also used for statically-linked builds because distribution\npackages often include only shared library binaries (`.so`) but not static\nlibrary archives (`.a`).\n\n| Dep          | Min. version  | Vendored | Debian/Ubuntu pkg  | Arch pkg     | Fedora            | Optional | Purpose        |\n| ------------ | ------------- | -------- | ------------------ | ------------ | ----------------- | -------- | -------------- |\n| GCC          | 4.7.3         | NO       | `build-essential`  | `base-devel` | `gcc`             | NO       |                |\n| CMake        | 3.5           | NO       | `cmake`            | `cmake`      | `cmake`           | NO       |                |\n| pkg-config   | any           | NO       | `pkg-config`       | `base-devel` | `pkgconf`         | NO       |                |\n| Boost        | 1.58          | NO       | `libboost-all-dev` | `boost`      | `boost-devel`     | NO       | C++ libraries  |\n| OpenSSL      | basically any | NO       | `libssl-dev`       | `openssl`    | `openssl-devel`   | NO       | sha256 sum     |\n| libzmq       | 3.0.0         | NO       | `libzmq3-dev`      | `zeromq`     | `cppzmq-devel`    | NO       | ZeroMQ library |\n| OpenPGM      | ?             | NO       | `libpgm-dev`       | `libpgm`     | `openpgm-devel`   | NO       | For ZeroMQ     |\n| libnorm[2]   | ?             | NO       | `libnorm-dev`      |              |               `   | YES      | For ZeroMQ     |\n| libunbound   | 1.4.16        | YES      | `libunbound-dev`   | `unbound`    | `unbound-devel`   | NO       | DNS resolver   |\n| libsodium    | ?             | NO       | `libsodium-dev`    | `libsodium`  | `libsodium-devel` | NO       | cryptography   |\n| libunwind    | any           | NO       | `libunwind8-dev`   | `libunwind`  | `libunwind-devel` | YES      | Stack traces   |\n| liblzma      | any           | NO       | `liblzma-dev`      | `xz`         | `xz-devel`        | YES      | For libunwind  |\n| libreadline  | 6.3.0         | NO       | `libreadline6-dev` | `readline`   | `readline-devel`  | YES      | Input editing  |\n| ldns         | 1.6.17        | NO       | `libldns-dev`      | `ldns`       | `ldns-devel`      | YES      | SSL toolkit    |\n| expat        | 1.1           | NO       | `libexpat1-dev`    | `expat`      | `expat-devel`     | YES      | XML parsing    |\n| GTest        | 1.5           | YES      | `libgtest-dev`[1]  | `gtest`      | `gtest-devel`     | YES      | Test suite     |\n| Doxygen      | any           | NO       | `doxygen`          | `doxygen`    | `doxygen`         | YES      | Documentation  |\n| Graphviz     | any           | NO       | `graphviz`         | `graphviz`   | `graphviz`        | YES      | Documentation  |\n\n\n[1] On Debian/Ubuntu `libgtest-dev` only includes sources and headers. You must\nbuild the library binary manually. This can be done with the following command ```sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake . && sudo make && sudo mv libg* /usr/lib/ ```\n[2] libnorm-dev is needed if your zmq library was built with libnorm, and not needed otherwise\n\nDebian / Ubuntu one liner for all dependencies  \n``` sudo apt update && sudo apt install build-essential cmake pkg-config libboost-all-dev libssl-dev libzmq3-dev libunbound-dev libsodium-dev libunwind8-dev liblzma-dev libreadline6-dev libldns-dev libexpat1-dev doxygen graphviz libpgm-dev```\n\n### Cloning the repository\n\nClone recursively to pull-in needed submodule(s):\n\n`$ git clone --recursive https://github.com/monero-project/monero`\n\nIf you already have a repo cloned, initialize and update:\n\n`$ cd monero && git submodule init && git submodule update`\n\n### Build instructions\n\nMonero uses the CMake build system and a top-level [Makefile](Makefile) that\ninvokes cmake commands as needed.\n\n#### On Linux and OS X\n\n* Install the dependencies\n* Change to the root of the source code directory, change to the most recent release branch, and build:\n\n        cd monero\n        git checkout v0.13.0.4\n        make\n\n    *Optional*: If your machine has several cores and enough memory, enable\n    parallel build by running `make -j<number of threads>` instead of `make`. For\n    this to be worthwhile, the machine should have one core and about 2GB of RAM\n    available per thread.\n\n    *Note*: If cmake can not find zmq.hpp file on OS X, installing `zmq.hpp` from\n    https://github.com/zeromq/cppzmq to `/usr/local/include` should fix that error.\n\n    *Note*: The instructions above will compile the most stable release of the\n    Monero software. If you would like to use and test the most recent software,\n    use ```git checkout master```. The master branch may contain updates that are\n    both unstable and incompatible with release software, though testing is always\n    encouraged.\n\n* The resulting executables can be found in `build/release/bin`\n\n* Add `PATH=\"$PATH:$HOME/monero/build/release/bin\"` to `.profile`\n\n* Run Monero with `monerod --detach`\n\n* **Optional**: build and run the test suite to verify the binaries:\n\n        make release-test\n\n    *NOTE*: `core_tests` test may take a few hours to complete.\n\n* **Optional**: to build binaries suitable for debugging:\n\n         make debug\n\n* **Optional**: to build statically-linked binaries:\n\n         make release-static\n\nDependencies need to be built with -fPIC. Static libraries usually aren't, so you may have to build them yourself with -fPIC. Refer to their documentation for how to build them.\n\n* **Optional**: build documentation in `doc/html` (omit `HAVE_DOT=YES` if `graphviz` is not installed):\n\n        HAVE_DOT=YES doxygen Doxyfile\n\n#### On the Raspberry Pi\n\nTested on a Raspberry Pi Zero with a clean install of minimal Raspbian Stretch (2017-09-07 or later) from https://www.raspberrypi.org/downloads/raspbian/. If you are using Raspian Jessie, [please see note in the following section](#note-for-raspbian-jessie-users).\n\n* `apt-get update && apt-get upgrade` to install all of the latest software\n\n* Install the dependencies for Monero from the 'Debian' column in the table above.\n\n* Increase the system swap size:\n```\n\tsudo /etc/init.d/dphys-swapfile stop  \n\tsudo nano /etc/dphys-swapfile  \n\tCONF_SWAPSIZE=2048\n\tsudo /etc/init.d/dphys-swapfile start  \n```\n* If using an external hard disk without an external power supply, ensure it gets enough power to avoid hardware issues when syncing, by adding the line \"max_usb_current=1\" to /boot/config.txt\n\n* Clone monero and checkout most recent release version:\n```\n        git clone https://github.com/monero-project/monero.git\n\tcd monero\n\tgit checkout tags/v0.13.0.4\n```\n* Build:\n```\n        make release\n```\n* Wait 4-6 hours\n\n* The resulting executables can be found in `build/release/bin`\n\n* Add `PATH=\"$PATH:$HOME/monero/build/release/bin\"` to `.profile`\n\n* Run Monero with `monerod --detach`\n\n* You may wish to reduce the size of the swap file after the build has finished, and delete the boost directory from your home directory\n\n#### *Note for Raspbian Jessie users:*\n\nIf you are using the older Raspbian Jessie image, compiling Monero is a bit more complicated. The version of Boost available in the Debian Jessie repositories is too old to use with Monero, and thus you must compile a newer version yourself. The following explains the extra steps, and has been tested on a Raspberry Pi 2 with a clean install of minimal Raspbian Jessie.\n\n* As before, `apt-get update && apt-get upgrade` to install all of the latest software, and increase the system swap size\n\n```\n\tsudo /etc/init.d/dphys-swapfile stop  \n\tsudo nano /etc/dphys-swapfile  \n\tCONF_SWAPSIZE=2048  \n\tsudo /etc/init.d/dphys-swapfile start  \n```\n\n* Then, install the dependencies for Monero except `libunwind` and `libboost-all-dev`\n\n* Install the latest version of boost (this may first require invoking `apt-get remove --purge libboost*` to remove a previous version if you're not using a clean install):\n```\n\tcd  \n\twget https://sourceforge.net/projects/boost/files/boost/1.64.0/boost_1_64_0.tar.bz2  \n\ttar xvfo boost_1_64_0.tar.bz2  \n\tcd boost_1_64_0  \n\t./bootstrap.sh  \n\tsudo ./b2  \n```\n* Wait ~8 hours\n```\n\tsudo ./bjam cxxflags=-fPIC cflags=-fPIC -a install\n```\n* Wait ~4 hours\n\n* From here, follow the [general Raspberry Pi instructions](#on-the-raspberry-pi) from the \"Clone monero and checkout most recent release version\" step.\n\n#### On Windows:\n\nBinaries for Windows are built on Windows using the MinGW toolchain within\n[MSYS2 environment](https://www.msys2.org). The MSYS2 environment emulates a\nPOSIX system. The toolchain runs within the environment and *cross-compiles*\nbinaries that can run outside of the environment as a regular Windows\napplication.\n\n**Preparing the build environment**\n\n* Download and install the [MSYS2 installer](https://www.msys2.org), either the 64-bit or the 32-bit package, depending on your system.\n* Open the MSYS shell via the `MSYS2 Shell` shortcut\n* Update packages using pacman:  \n\n        pacman -Syu  \n\n* Exit the MSYS shell using Alt+F4  \n* Edit the properties for the `MSYS2 Shell` shortcut changing \"msys2_shell.bat\" to \"msys2_shell.cmd -mingw64\" for 64-bit builds or \"msys2_shell.cmd -mingw32\" for 32-bit builds\n* Restart MSYS shell via modified shortcut and update packages again using pacman:  \n\n        pacman -Syu  \n\n\n* Install dependencies:\n\n    To build for 64-bit Windows:\n\n        pacman -S mingw-w64-x86_64-toolchain make mingw-w64-x86_64-cmake mingw-w64-x86_64-boost mingw-w64-x86_64-openssl mingw-w64-x86_64-zeromq mingw-w64-x86_64-libsodium mingw-w64-x86_64-hidapi\n\n    To build for 32-bit Windows:\n\n        pacman -S mingw-w64-i686-toolchain make mingw-w64-i686-cmake mingw-w64-i686-boost mingw-w64-i686-openssl mingw-w64-i686-zeromq mingw-w64-i686-libsodium mingw-w64-i686-hidapi\n\n* Open the MingW shell via `MinGW-w64-Win64 Shell` shortcut on 64-bit Windows\n  or `MinGW-w64-Win64 Shell` shortcut on 32-bit Windows. Note that if you are\n  running 64-bit Windows, you will have both 64-bit and 32-bit MinGW shells.\n\n**Cloning**\n\n* To git clone, run:\n\n        git clone --recursive https://github.com/monero-project/monero.git\n\n**Building**\n\n* Change to the cloned directory, run:\n\n        cd monero\n\n* If you would like a specific [version/tag](https://github.com/monero-project/monero/tags), do a git checkout for that version. eg. 'v0.13.0.0'. If you dont care about the version and just want binaries from master, skip this step:\n\n        git checkout v0.13.0.4\n\n* If you are on a 64-bit system, run:\n\n        make release-static-win64\n\n* If you are on a 32-bit system, run:\n\n        make release-static-win32\n\n* The resulting executables can be found in `build/release/bin`\n\n* **Optional**: to build Windows binaries suitable for debugging on a 64-bit system, run:\n\n        make debug-static-win64\n\n* **Optional**: to build Windows binaries suitable for debugging on a 32-bit system, run:\n\n        make debug-static-win32\n\n* The resulting executables can be found in `build/debug/bin`\n\n### On FreeBSD:\n\nThe project can be built from scratch by following instructions for Linux above. If you are running monero in a jail you need to add the flag: `allow.sysvipc=1` to your jail configuration, otherwise lmdb will throw the error message: `Failed to open lmdb environment: Function not implemented`.\n\nWe expect to add Monero into the ports tree in the near future, which will aid in managing installations using ports or packages.\n\n### On OpenBSD:\n\n#### OpenBSD < 6.2\n\nThis has been tested on OpenBSD 5.8.\n\nYou will need to add a few packages to your system. `pkg_add db cmake gcc gcc-libs g++ gtest`.\n\nThe doxygen and graphviz packages are optional and require the xbase set.\n\nThe Boost package has a bug that will prevent librpc.a from building correctly. In order to fix this, you will have to Build boost yourself from scratch. Follow the directions here (under \"Building Boost\"):\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/build-openbsd.md\n\nYou will have to add the serialization, date_time, and regex modules to Boost when building as they are needed by Monero.\n\nTo build: `env CC=egcc CXX=eg++ CPP=ecpp DEVELOPER_LOCAL_TOOLS=1 BOOST_ROOT=/path/to/the/boost/you/built make release-static-64`\n\n#### OpenBSD 6.2 and 6.3\n\nYou will need to add a few packages to your system. `pkg_add cmake zeromq libiconv`.\n\nThe doxygen and graphviz packages are optional and require the xbase set.\n\n\nBuild the Boost library using clang. This guide is derived from: https://github.com/bitcoin/bitcoin/blob/master/doc/build-openbsd.md\n\nWe assume you are compiling with a non-root user and you have `doas` enabled.\n\nNote: do not use the boost package provided by OpenBSD, as we are installing boost to `/usr/local`.\n\n```\n# Create boost building directory\nmkdir ~/boost\ncd ~/boost\n\n# Fetch boost source\nftp -o boost_1_64_0.tar.bz2 https://netcologne.dl.sourceforge.net/project/boost/boost/1.64.0/boost_1_64_0.tar.bz2\n\n# MUST output: (SHA256) boost_1_64_0.tar.bz2: OK\necho \"7bcc5caace97baa948931d712ea5f37038dbb1c5d89b43ad4def4ed7cb683332 boost_1_64_0.tar.bz2\" | sha256 -c\ntar xfj boost_1_64_0.tar.bz2\n\n# Fetch and apply boost patches, required for OpenBSD\nftp -o boost_test_impl_execution_monitor_ipp.patch https://raw.githubusercontent.com/openbsd/ports/bee9e6df517077a7269ff0dfd57995f5c6a10379/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp\nftp -o boost_config_platform_bsd_hpp.patch https://raw.githubusercontent.com/openbsd/ports/90658284fb786f5a60dd9d6e8d14500c167bdaa0/devel/boost/patches/patch-boost_config_platform_bsd_hpp\n\n# MUST output: (SHA256) boost_config_platform_bsd_hpp.patch: OK\necho \"1f5e59d1154f16ee1e0cc169395f30d5e7d22a5bd9f86358f738b0ccaea5e51d boost_config_platform_bsd_hpp.patch\" | sha256 -c\n# MUST output: (SHA256) boost_test_impl_execution_monitor_ipp.patch: OK\necho \"30cec182a1437d40c3e0bd9a866ab5ddc1400a56185b7e671bb3782634ed0206 boost_test_impl_execution_monitor_ipp.patch\" | sha256 -c\n\ncd boost_1_64_0\npatch -p0 < ../boost_test_impl_execution_monitor_ipp.patch\npatch -p0 < ../boost_config_platform_bsd_hpp.patch\n\n# Start building boost\necho 'using clang : : c++ : <cxxflags>\"-fvisibility=hidden -fPIC\" <linkflags>\"\" <archiver>\"ar\" <striper>\"strip\"  <ranlib>\"ranlib\" <rc>\"\" : ;' > user-config.jam\n./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test,date_time,regex,serialization,locale --with-toolset=clang\n./b2 toolset=clang cxxflags=\"-stdlib=libc++\" linkflags=\"-stdlib=libc++\" -sICONV_PATH=/usr/local\ndoas ./b2 -d0 runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1 -sICONV_PATH=/usr/local --prefix=/usr/local install\n```\n\nBuild the cppzmq bindings.\n\nWe assume you are compiling with a non-root user and you have `doas` enabled.\n\n```\n# Create cppzmq building directory\nmkdir ~/cppzmq\ncd ~/cppzmq\n\n# Fetch cppzmq source\nftp -o cppzmq-4.2.3.tar.gz https://github.com/zeromq/cppzmq/archive/v4.2.3.tar.gz\n\n# MUST output: (SHA256) cppzmq-4.2.3.tar.gz: OK\necho \"3e6b57bf49115f4ae893b1ff7848ead7267013087dc7be1ab27636a97144d373 cppzmq-4.2.3.tar.gz\" | sha256 -c\ntar xfz cppzmq-4.2.3.tar.gz\n\n# Start building cppzmq\ncd cppzmq-4.2.3\nmkdir build\ncd build\ncmake ..\ndoas make install\n```\n\nBuild monero: `env DEVELOPER_LOCAL_TOOLS=1 BOOST_ROOT=/usr/local make release-static`\n\n#### OpenBSD >= 6.4\n\nYou will need to add a few packages to your system. `pkg_add cmake gmake zeromq cppzmq libiconv boost`.\n\nThe doxygen and graphviz packages are optional and require the xbase set.\n\nBuild monero: `env DEVELOPER_LOCAL_TOOLS=1 BOOST_ROOT=/usr/local gmake release-static`\n\nNote: you may encounter the following error, when compiling the latest version of monero as a normal user:\n\n```\nLLVM ERROR: out of memory\nc++: error: unable to execute command: Abort trap (core dumped)\n```\n\nThen you need to increase the data ulimit size to 2GB and try again: `ulimit -d 2000000`\n\n### On Solaris:\n\nThe default Solaris linker can't be used, you have to install GNU ld, then run cmake manually with the path to your copy of GNU ld:\n\n        mkdir -p build/release\n        cd build/release\n        cmake -DCMAKE_LINKER=/path/to/ld -D CMAKE_BUILD_TYPE=Release ../..\n        cd ../..\n\nThen you can run make as usual.\n\n### On Linux for Android (using docker):\n\n        # Build image (for ARM 32-bit)\n        docker build -f utils/build_scripts/android32.Dockerfile -t monero-android .\n        # Build image (for ARM 64-bit)\n        docker build -f utils/build_scripts/android64.Dockerfile -t monero-android .\n        # Create container\n        docker create -it --name monero-android monero-android bash\n        # Get binaries\n        docker cp monero-android:/src/build/release/bin .\n\n### Building portable statically linked binaries\n\nBy default, in either dynamically or statically linked builds, binaries target the specific host processor on which the build happens and are not portable to other processors. Portable binaries can be built using the following targets:\n\n* ```make release-static-linux-x86_64``` builds binaries on Linux on x86_64 portable across POSIX systems on x86_64 processors\n* ```make release-static-linux-i686``` builds binaries on Linux on x86_64 or i686 portable across POSIX systems on i686 processors\n* ```make release-static-linux-armv8``` builds binaries on Linux portable across POSIX systems on armv8 processors\n* ```make release-static-linux-armv7``` builds binaries on Linux portable across POSIX systems on armv7 processors\n* ```make release-static-linux-armv6``` builds binaries on Linux portable across POSIX systems on armv6 processors\n* ```make release-static-win64``` builds binaries on 64-bit Windows portable across 64-bit Windows systems\n* ```make release-static-win32``` builds binaries on 64-bit or 32-bit Windows portable across 32-bit Windows systems\n\n### Cross Compiling\n\nYou can also cross-compile static binaries on Linux for Windows and macOS with the `depends` system.\n\n* ```make depends target=x86_64-linux-gnu``` for 64-bit linux binaries.\n* ```make depends target=x86_64-w64-mingw32``` for 64-bit windows binaries. Requires: python3 g++-mingw-w64-x86-64 wine1.6 bc\n* ```make depends target=x86_64-apple-darwin11``` for macOS binaries. Requires: cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\n* ```make depends target=i686-linux-gnu``` for 32-bit linux binaries. Requires: g++-multilib bc\n* ```make depends target=i686-w64-mingw32``` for 32-bit windows binaries. Requires: python3 g++-mingw-w64-i686\n* ```make depends target=arm-linux-gnueabihf``` for armv7 binaries. Requires: g++-arm-linux-gnueabihf\n* ```make depends target=aarch64-linux-gnu``` for armv8 binaries. Requires: g++-aarch64-linux-gnu\n\nThe required packages are the names for each toolchain on apt. Depending on your distro, they may have different names.\n\nUsing `depends` might also be easier to compile Monero on Windows than using MSYS. Activate Windows Subsystem for Linux (WSL) with a distro (for example Ubuntu), install the apt build-essentials and follow the `depends` steps as depicted above.\n\nThe produced binaries still link libc dynamically. If the binary is compiled on a current distribution, it might not run on an older distribution with an older installation of libc. Passing `-DBACKCOMPAT=ON` to cmake will make sure that the binary will run on systems having at least libc version 2.17.\n\n## Installing Monero from a package\n\n**DISCLAIMER: These packages are not part of this repository or maintained by this project's contributors, and as such, do not go through the same review process to ensure their trustworthiness and security.**\n\nPackages are available for\n\n* Ubuntu and [snap supported](https://snapcraft.io/docs/core/install) systems, via a community contributed build.\n\n\tsnap install monero --beta\n\nInstalling a snap is very quick. Snaps are secure. They are isolated with all of their dependencies. Snaps also auto update when a new version is released.\n\n* Arch Linux (via [AUR](https://aur.archlinux.org/)):\n  - Stable release: [`monero`](https://aur.archlinux.org/packages/monero)\n  - Bleeding edge: [`monero-git`](https://aur.archlinux.org/packages/monero-git)\n\n* Void Linux:\n\n        xbps-install -S monero\n\n* GuixSD\n\n        guix package -i monero\n\n* Docker\n\n        # Build using all available cores\n        docker build -t monero .\n\n        # or build using a specific number of cores (reduce RAM requirement)\n        docker build --build-arg NPROC=1 -t monero .\n\n        # either run in foreground\n        docker run -it -v /monero/chain:/root/.bitmonero -v /monero/wallet:/wallet -p 18080:18080 monero\n\n        # or in background\n        docker run -it -d -v /monero/chain:/root/.bitmonero -v /monero/wallet:/wallet -p 18080:18080 monero\n\n* The build needs 3 GB space.\n* Wait one  hour or more\n\nPackaging for your favorite distribution would be a welcome contribution!\n\n## Running monerod\n\nThe build places the binary in `bin/` sub-directory within the build directory\nfrom which cmake was invoked (repository root by default). To run in\nforeground:\n\n    ./bin/monerod\n\nTo list all available options, run `./bin/monerod --help`.  Options can be\nspecified either on the command line or in a configuration file passed by the\n`--config-file` argument.  To specify an option in the configuration file, add\na line with the syntax `argumentname=value`, where `argumentname` is the name\nof the argument without the leading dashes, for example `log-level=1`.\n\nTo run in background:\n\n    ./bin/monerod --log-file monerod.log --detach\n\nTo run as a systemd service, copy\n[monerod.service](utils/systemd/monerod.service) to `/etc/systemd/system/` and\n[monerod.conf](utils/conf/monerod.conf) to `/etc/`. The [example\nservice](utils/systemd/monerod.service) assumes that the user `monero` exists\nand its home is the data directory specified in the [example\nconfig](utils/conf/monerod.conf).\n\nIf you're on Mac, you may need to add the `--max-concurrency 1` option to\nmonero-wallet-cli, and possibly monerod, if you get crashes refreshing.\n\n## Internationalization\n\nSee [README.i18n.md](README.i18n.md).\n\n## Using Tor\n\n> There is a new, still experimental, [integration with Tor](ANONYMITY_NETWORKS.md). The\n> feature allows connecting over IPv4 and Tor simulatenously - IPv4 is used for\n> relaying blocks and relaying transactions received by peers whereas Tor is\n> used solely for relaying transactions received over local RPC. This provides\n> privacy and better protection against surrounding node (sybil) attacks.\n\nWhile Monero isn't made to integrate with Tor, it can be used wrapped with torsocks, by\nsetting the following configuration parameters and environment variables:\n\n* `--p2p-bind-ip 127.0.0.1` on the command line or `p2p-bind-ip=127.0.0.1` in\n  monerod.conf to disable listening for connections on external interfaces.\n* `--no-igd` on the command line or `no-igd=1` in monerod.conf to disable IGD\n  (UPnP port forwarding negotiation), which is pointless with Tor.\n* `DNS_PUBLIC=tcp` or `DNS_PUBLIC=tcp://x.x.x.x` where x.x.x.x is the IP of the\n  desired DNS server, for DNS requests to go over TCP, so that they are routed\n  through Tor. When IP is not specified, monerod uses the default list of\n  servers defined in [src/common/dns_utils.cpp](src/common/dns_utils.cpp).\n* `TORSOCKS_ALLOW_INBOUND=1` to tell torsocks to allow monerod to bind to interfaces\n   to accept connections from the wallet. On some Linux systems, torsocks\n   allows binding to localhost by default, so setting this variable is only\n   necessary to allow binding to local LAN/VPN interfaces to allow wallets to\n   connect from remote hosts. On other systems, it may be needed for local wallets\n   as well.\n* Do NOT pass `--detach` when running through torsocks with systemd, (see\n  [utils/systemd/monerod.service](utils/systemd/monerod.service) for details).\n* If you use the wallet with a Tor daemon via the loopback IP (eg, 127.0.0.1:9050),\n  then use `--untrusted-daemon` unless it is your own hidden service.\n\nExample command line to start monerod through Tor:\n\n    DNS_PUBLIC=tcp torsocks monerod --p2p-bind-ip 127.0.0.1 --no-igd\n\n### Using Tor on Tails\n\nTAILS ships with a very restrictive set of firewall rules. Therefore, you need\nto add a rule to allow this connection too, in addition to telling torsocks to\nallow inbound connections. Full example:\n\n    sudo iptables -I OUTPUT 2 -p tcp -d 127.0.0.1 -m tcp --dport 18081 -j ACCEPT\n    DNS_PUBLIC=tcp torsocks ./monerod --p2p-bind-ip 127.0.0.1 --no-igd --rpc-bind-ip 127.0.0.1 \\\n        --data-dir /home/amnesia/Persistent/your/directory/to/the/blockchain\n\n## Debugging\n\nThis section contains general instructions for debugging failed installs or problems encountered with Monero. First ensure you are running the latest version built from the Github repo.\n\n### Obtaining stack traces and core dumps on Unix systems\n\nWe generally use the tool `gdb` (GNU debugger) to provide stack trace functionality, and `ulimit` to provide core dumps in builds which crash or segfault.\n\n* To use gdb in order to obtain a stack trace for a build that has stalled:\n\nRun the build.\n\nOnce it stalls, enter the following command:\n\n```\ngdb /path/to/monerod `pidof monerod`\n```\n\nType `thread apply all bt` within gdb in order to obtain the stack trace\n\n* If however the core dumps or segfaults:\n\nEnter `ulimit -c unlimited` on the command line to enable unlimited filesizes for core dumps\n\nEnter `echo core | sudo tee /proc/sys/kernel/core_pattern` to stop cores from being hijacked by other tools\n\nRun the build.\n\nWhen it terminates with an output along the lines of \"Segmentation fault (core dumped)\", there should be a core dump file in the same directory as monerod. It may be named just `core`, or `core.xxxx` with numbers appended.\n\nYou can now analyse this core dump with `gdb` as follows:\n\n`gdb /path/to/monerod /path/to/dumpfile`\n\nPrint the stack trace with `bt`\n\n* To run monero within gdb:\n\nType `gdb /path/to/monerod`\n\nPass command-line options with `--args` followed by the relevant arguments\n\nType `run` to run monerod\n\n### Analysing memory corruption\n\nThere are two tools available:\n\n* ASAN\n\nConfigure Monero with the -D SANITIZE=ON cmake flag, eg:\n\n    cd build/debug && cmake -D SANITIZE=ON -D CMAKE_BUILD_TYPE=Debug ../..\n\nYou can then run the monero tools normally. Performance will typically halve.\n\n* valgrind\n\nInstall valgrind and run as `valgrind /path/to/monerod`. It will be very slow.\n\n### LMDB\n\nInstructions for debugging suspected blockchain corruption as per @HYC\n\nThere is an `mdb_stat` command in the LMDB source that can print statistics about the database but it's not routinely built. This can be built with the following command:\n\n`cd ~/monero/external/db_drivers/liblmdb && make`\n\nThe output of `mdb_stat -ea <path to blockchain dir>` will indicate inconsistencies in the blocks, block_heights and block_info table.\n\nThe output of `mdb_dump -s blocks <path to blockchain dir>` and `mdb_dump -s block_info <path to blockchain dir>` is useful for indicating whether blocks and block_info contain the same keys.\n\nThese records are dumped as hex data, where the first line is the key and the second line is the data.\n"
            }
          },
          {
            "name": "ghetto-skype",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Web Skype + Tray Icon + Notifications",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "JavaScript"
                },
                {
                  "name": "CSS"
                },
                {
                  "name": "HTML"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/ghetto-skype",
            "primaryLanguage": {
              "name": "JavaScript"
            },
            "object": {
              "text": "# Ghetto Skype\n\nGhetto Skype is an electron client that uses Web Skype to better integrate with desktop environments found on Linux.\n\nCredit to [skype-unofficial-client](https://github.com/haskellcamargo/skype-unofficial-client) for coming up with this idea. His version uses node webkit whereas mine uses Electron. This means you get a few extra goodies like notifications from Electron.\n\n![Screenshot](src/assets/screenshot.png)\n\n## Why it's better than Web Skype\n- Spell Check\n- Tray Icon shows how many messages are unread (if your desktop environment supports)\n- Electron will send notifications to libnotify\n- Use your default image viewer (writes to /tmp)\n- Start minimized when you start your computer\n- Run Skype through a proxy\n- Alternative themes\n\n### Cons\n- Doesn't support video calls\n\n## Installing\n\nYou can download the RPM or DEB package on the [releases page](https://github.com/stanfieldr/ghetto-skype/releases)\nor you can build from source with the instructions below.\n\nIf you run Arch Linux, you can use the [AUR package](https://aur.archlinux.org/packages/ghetto-skype) [nlowe](https://github.com/nlowe)\ncreated. Please send any issues with the AUR package to [his repository](https://github.com/nlowe/aur-ghetto-skype/issues).\n\n#### Dependencies\n\nIf building from source:\n- Node 6.3.1 or higher (Debian/Ubuntu/Mint users need nodejs-legacy package)\n- Debian based distros need the following packages: `sudo apt-get install build-essential icnsutils graphicsmagick xz-utils libxkbfile-dev libx11-dev libcairo2-dev libjpeg-dev libgif-dev`\n- If you're creating deb package: `sudo apt-get install fakeroot dpkg`\n- Fedora users need the following packages: `sudo dnf install gcc{,-c++} libicns-utils GraphicsMagick libX11-devel libxkbfile-devel libjpeg-turbo-devel cairo-devel giflib-devel`\n- If you're creating rpm package: `sudo dnf install rpm-build`\n\n#### Try it out\n\nSkip packaging and run this:\n```bash\n[u@h ghetto-skype]$ npm install && npm start\n```\n\n#### Install from source via package manager\n\nWe use [electron-builder](https://github.com/electron-userland/electron-builder) to package Ghetto Skype. Change the target to the\nformat you prefer. By default, it uses \"deb\". For a full list of supported formats,\nrefer to the [wiki](https://www.electron.build/configuration/linux) for electron-builder.\nThe target should be set in `ghetto-skype/package.json`\n\n```bash\n[u@h ghetto-skype]$ npm install\n[u@h ghetto-skype]$ npm run dist\n[u@h ghetto-skype]$ cd dist && ls # package placed here\n```\n\n## Tips\n\nThere's a separate settings window located in the context menu of the tray icon.\n\n## Using a Proxy\n\nThere currently isn't a way to edit this with the settings window right now. You can open `~/.config/Ghetto\\ Skype/settings.json` with your favorite text editor and add your proxy to the ProxyRule setting, save, and restart\nGhetto Skype. For a better understanding of the format please refer to Electron's [wiki](https://github.com/electron/electron/blob/master/docs/api/session.md#instance-methods) (specifically ses.setProxy)\n\nExample:\n```bash\n{\n\t\"StartMinimized\": false,\n\t\"MicrosoftAccount\": false,\n\t\"NativeImageViewer\": false,\n\t\"ProxyRules\": \"socks5://46.105.6.191:5050\"\n}\n```\n\n## Setting Zoom Level\n\nIf the font/photos are not big enough for you, you can use the zoom factor in the `~/.config/Ghetto\\ Skype/settings.json`.\nThis will be added to the settings screen soon.\n\nExample 150%:\n```bash\n{\n\t\"StartMinimized\": false,\n\t\"MicrosoftAccount\": false,\n\t\"NativeImageViewer\": false,\n\t\"ProxyRules\": \"socks5://46.105.6.191:5050\",\n\t\"ZoomFactor\": 1.5\n}\n```\n\n## Disclaimer\nThe Skype name, associated trade marks and logos and the \"S\" logo are trade marks of Skype or related entities. This project is merely a browser :)\n"
            }
          },
          {
            "name": "bitcoincash.org",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Repository for all the assets for bitcoincash.org",
            "watchers": {
              "totalCount": 1
            },
            "languages": {
              "nodes": [
                {
                  "name": "HTML"
                },
                {
                  "name": "Dockerfile"
                },
                {
                  "name": "Ruby"
                },
                {
                  "name": "Makefile"
                },
                {
                  "name": "CSS"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/bitcoincash.org",
            "primaryLanguage": {
              "name": "CSS"
            },
            "object": {
              "text": "# bitcoincash\n\nThis is the repository for [bitcoincash.org](https://bitcoincash.org). As the Bitcoin Cash community expands, we hope that many will participate and improve this project over time.\n\nBuild & Run the Docker Image\n----------------------------\n\nIn order to build and run the site you need ruby and docker. Then run:\n\n1. `gem install bundler`\n2. `bundle install`\n3. `make serve` to run in the incremental development server or `make run` to test the container.\n4. Open a browser to `localhost:4000` or `localhost:8080` respectively.\n\nContributions\n-------------\n\nThis site is based on `jekyll` and `jekyll-multiple-languages-plugin`.\nPlease see their documentation to obtain an understanding of how the components of this website work together.\n\nAdding Translations\n-------------------\n\nTo add translations to the project, use `_i18n/en.yml` as a template and create a new file for your locale. Then translate all the content inside of the yaml file and send us a pull request.\n\nAbout Bitcoin Cash\n------------------\n\nBitcoin Cash brings sound money to the world.  Merchants and users are empowered with low fees and reliable confirmations. The future shines brightly with unrestricted growth, global adoption, permissionless innovation, and decentralized development.\n\nAll Bitcoin holders as of block 478558 are now owners of Bitcoin Cash. All Bitcoiners are welcome to join the Bitcoin Cash community as we move forward in creating sound money accessible to the whole world.\n\nListing Policy for Exchanges, Wallets, and Projects\n---------------------------------------------------\n\nAlthough many exchanges, wallets, and other projects would like to be listed on our website, BitcoinCash.org is not meant to be an exhaustive directory.\nThere is limited space and quite simply, we only want to showcase the best of the best.\n\nOnly the top several exchanges by trading volume in each country will be considered.\n\nFor wallets, we only want to list those that have the highest trust and best reputation within the community.\nRelevant factors include the brand, the age of the wallet, as well as the track record of the company, developers, and/or other individuals involved.\n\nWe apologize in advance if we're unable to provide a listing for you on BitcoinCash.org.\nWe acknowledge the criteria for wallet listings are somewhat subjective.\nPlease understand our decisions are not personal, but rather based on a conservative approach and our responsbility to safeguard the community against questionable projects.\nLastly, no listing should be interpreted as our explicit endorsement.\n\nLicense\n-------\n\nbitcoincash.org is released under the terms of the MIT license. See [COPYING](COPYING) for more\ninformation or see https://opensource.org/licenses/MIT.\n"
            }
          },
          {
            "name": "Signal-Desktop",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Signal ‚Äî Private Messenger for Windows, Mac, and Linux",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "JavaScript"
                },
                {
                  "name": "HTML"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "CSS"
                },
                {
                  "name": "TypeScript"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/Signal-Desktop",
            "primaryLanguage": {
              "name": "JavaScript"
            },
            "object": {
              "text": "[![Build Status](https://travis-ci.org/signalapp/Signal-Desktop.svg?branch=master)](https://travis-ci.org/signalapp/Signal-Desktop)\n[![Build Status](https://ci.appveyor.com/api/projects/status/github/signalapp/Signal-Desktop?branch=master&svg=true)](https://ci.appveyor.com/project/Signal-Desktop/signal-desktop)\n\n# Signal Desktop\n\nSignal Desktop is an Electron application that links with Signal\non [Android](https://github.com/signalapp/Signal-Android)\nor [iOS](https://github.com/signalapp/Signal-iOS).\n\n## Install the production version: https://signal.org/download/\n\n## Install the beta\n\nYou can install the beta version of Signal Desktop alongside the production version. The beta uses different data and install locations.\n\n* _Windows:_ First, download [this file](https://updates.signal.org/desktop/beta.yml) and look for the `url` property that specifies the location for the latest beta installer. Download the installer by constructing a final URL that looks like this: `https://updates.signal.org/desktop/<installer location>`. Then run the installer.\n* _macOS:_ First, download [this file](https://updates.signal.org/desktop/beta-mac.yml) and look for the `url` property that specifies the location for the latest beta installer. Download the installer by constructing a final URL that looks like this: `https://updates.signal.org/desktop/<package location>`. Then unzip that package and copy the `.app` file into the `/Applications` folder using Finder.\n* _Linux:_ Follow the production instructions to set up the APT repository and run `apt install signal-desktop-beta`.\n\n## Got a question?\n\nYou can find answers to a number of frequently asked questions on our [support site](https://support.signal.org/).\nThe [community forum](https://community.signalusers.org/) is another good place for questions.\n\n## Found a Bug? Have a feature request?\n\nPlease search for any [existing issues](https://github.com/signalapp/Signal-Desktop/issues) that describe your bug in order to avoid duplicate submissions.\n\n## Contributing Translations\n\nInterested in helping to translate Signal? Contribute here:\n\nhttps://www.transifex.com/projects/p/signal-desktop\n\n## Contributing Code\n\nPlease see [CONTRIBUTING.md](https://github.com/signalapp/Signal-Desktop/blob/master/CONTRIBUTING.md)\nfor setup instructions and guidelines for new contributors. Don't forget to sign the [CLA](https://signal.org/cla/).\n\n## Contributing Funds\n\nYou can donate to Signal development through the [Freedom of the Press Foundation](https://freedom.press/crowdfunding/signal/).\n\n## Cryptography Notice\n\nThis distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software.\nBEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted.\nSee <http://www.wassenaar.org/> for more information.\n\nThe U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms.\nThe form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.\n\n## License\n\nCopyright 2014-2019 Open Whisper Systems\n\nLicensed under the GPLv3: http://www.gnu.org/licenses/gpl-3.0.html\n"
            }
          },
          {
            "name": "rust-bitcoin",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Rust Bitcoin library",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "Rust"
                },
                {
                  "name": "Shell"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/rust-bitcoin",
            "primaryLanguage": {
              "name": "Rust"
            },
            "object": {
              "text": "[![Status](https://travis-ci.org/rust-bitcoin/rust-bitcoin.png?branch=master)](https://travis-ci.org/rust-bitcoin/rust-bitcoin)\n[![Safety Dance](https://img.shields.io/badge/unsafe-forbidden-success.svg)](https://github.com/rust-secure-code/safety-dance/)\n\n# Rust Bitcoin Library\n\nLibrary with support for de/serialization, parsing and executing on data\nstructures and network messages related to Bitcoin.\n\n[Documentation](https://docs.rs/bitcoin/)\n\nSupports (or should support)\n\n* De/serialization of Bitcoin protocol network messages\n* De/serialization of blocks and transactions\n* Script de/serialization\n* Private keys and address creation, de/serialization and validation (including full BIP32 support)\n* PSBT creation, manipulation, merging and finalization\n* Pay-to-contract support as in Appendix A of the [Blockstream sidechains whitepaper](https://www.blockstream.com/sidechains.pdf)\n\nFor JSONRPC interaction with Bitcoin Core, it is recommended to use\n[rust-bitcoincore-rpc](https://github.com/rust-bitcoin/rust-bitcoincore-rpc).\n\n# Known limitations\n\n## Consensus\n\nThis library **must not** be used for consensus code (i.e. fully validating\nblockchain data). It technically supports doing this, but doing so is very\nill-advised because there are many deviations, known and unknown, between\nthis library and the Bitcoin Core reference implementation. In a consensus\nbased cryptocurrency such as Bitcoin it is critical that all parties are\nusing the same rules to validate data, and this library is simply unable\nto implement the same rules as Core.\n\nGiven the complexity of both C++ and Rust, it is unlikely that this will\never be fixed, and there are no plans to do so. Of course, patches to\nfix specific consensus incompatibilities are welcome.\n\n## Documentation\n\nCurrently can be found on [docs.rs/bitcoin](https://docs.rs/bitcoin/).\nPatches to add usage examples and to expand on existing docs would be extremely\nappreciated.\n\n# Contributing\nContributions are generally welcome. If you intend to make larger changes please\ndiscuss them in an issue before PRing them to avoid duplicate work and\narchitectural mismatches. If you have any questions or ideas you want to discuss\nplease join us in\n[#rust-bitcoin](http://webchat.freenode.net/?channels=%23rust-bitcoin) on\nfreenode.\n\n## Installing Rust\nRust can be installed using your package manager of choice or\n[rustup.rs](https://rustup.rs). The former way is considered more secure since\nit typically doesn't involve trust in the CA system. But you should be aware\nthat the version of Rust shipped by your distribution might be out of date.\nGenerally this isn't a problem for `rust-bitcoin` since we support much older\nversions (>=1.22) than the current stable one.\n\n## Building\nThe library can be built and tested using [`cargo`](https://github.com/rust-lang/cargo/):\n\n```\ngit clone git@github.com:rust-bitcoin/rust-bitcoin.git\ncd rust-bitcoin\ncargo build\n```\n\nYou can run tests with:\n\n```\ncargo test\n```\n\nPlease refer to the [`cargo` documentation](https://doc.rust-lang.org/stable/cargo/) for more detailed instructions. \n\n## Pull Requests\nEvery PR needs at least two reviews to get merged. During the review phase\nmaintainers and contributors are likely to leave comments and request changes.\nPlease try to address them, otherwise your PR might get closed without merging\nafter a longer time of inactivity. If your PR isn't ready for review yet please\nmark it by prefixing the title with `WIP: `.\n\n## Policy on Altcoins/Altchains\n\nPatches which add support for non-Bitcoin cryptocurrencies by adding constants\nto existing enums (e.g. to set the network message magic-byte sequence) are\nwelcome. Anything more involved will be considered on a case-by-case basis,\nas the altcoin landscape includes projects which [frequently appear and\ndisappear, and are poorly designed anyway](https://download.wpsoftware.net/bitcoin/alts.pdf)\nand keeping the codebase maintainable is a large priority.\n\nIn general, things that improve cross-chain compatibility (e.g. support for\ncross-chain atomic swaps) are more likely to be accepted than things which\nsupport only a single blockchain.\n\n\n# Release Notes\n\nSee CHANGELOG.md\n\n\n# Licensing\n\nThe code in this project is licensed under the Creative Commons CC0 1.0\nUniversal license.\n"
            }
          },
          {
            "name": "lightning-rfc",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Lightning Network Specifications",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "Shell"
                },
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/lightning-rfc",
            "primaryLanguage": {
              "name": "Python"
            },
            "object": {
              "text": "# [Lightning Network](https://lightning.network) In-Progress Specifications\n\nThe specifications are currently a work-in-progress and currently being\ndrafted.\n\nPull requests and comments welcome, seeking input from community stakeholders.\n\nDiscussion available on the [lighting-dev mailing list](https://lists.linuxfoundation.org/mailman/listinfo/lightning-dev).\n\n### [Start here for Table of Contents](00-introduction.md)\n\n![Creative Commons License](https://i.creativecommons.org/l/by/4.0/88x31.png \"License CC-BY\")\n<br>\nThis work is licensed under a [Creative Commons Attribution 4.0 International License](http://creativecommons.org/licenses/by/4.0/).\n"
            }
          },
          {
            "name": "purify",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "A PRF with low multiplicative complexity",
            "watchers": {
              "totalCount": 6
            },
            "languages": {
              "nodes": [
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 3
            },
            "isFork": false,
            "forkCount": 3,
            "url": "https://github.com/sipa/purify",
            "primaryLanguage": {
              "name": "Python"
            },
            "object": {
              "text": "# Purify: A provably-secure PRF with low multiplicative complexity\n\nA [pseudorandom function](https://en.wikipedia.org/wiki/Pseudorandom_function_family) is a function that\ntakes as input a key and a message, and to anyone who does not know the key, the function is indistinguishable\nfrom random.\n\nFor certain applications a PRF is needed that can cheaply be verified in an arithmetic circuit.\nOne example is when a zero-knowledge proof for the correct evaluation of the function is wanted.\nIn such circuits, cost is typically dominated by the number of multiplications in\nthe circuit. This leads to an unusual cost metric for various algorithms.\nAs a result, schemes that are optimized for execution on real hardware\nare often far from optimal inside proofs.\n\nPurify is a PRF onto the inputs modulo an *L*-bit prime *P* that is optimized for low multiplicative complexity. It has the following properties:\n* Purify is **provably** indistinguishable from random at a security level of approximately *L/2* bits, assuming elliptic curves with certain properties over *GF(P)* can be found.\n* For a given message, an arithmetic circuit over *GF(P)* can verify a Purify evaluation using less than *16L/3* multiplication gates.\n* If in addition to evaluation of the PRF also verification of a (publicly known) commitment to the key is needed, a combined circuit with less than *8L* gates is possible. It can be shown that Purify remains indistinguishable from random to an attacker who knows this commitment to the key.\n\nThe last property is useful in the context of proving that deterministic nonces in multiparty Schnorr schemes were correctly evaluated. In an upcoming paper,\nwe will show that this construction is secure in that context.\n\nHash functions are typically expensive inside arithmetic circuits. While Purify does rely on a hash function, it only hashes the messages, not the key.\nThis means that proofs in which the message is public, the hash function can be evaluated outside of the circuit.\nBecause of this the multiplicative complexity can be kept relatively low without giving up provable security.\n\nOur proofs model the hash functions as random oracles, and assume elliptic curves are used in which the decisional Diffie-Hellman problem is hard.\n\n## Parameters\n\n* Let *P* be an *L*-bit prime.\n* Let *D* be a non-square in *GF(P)*.\n* Let *A* and *B* be elements of *GF(P)* such that:\n  * The elliptic curve *E<sub>1</sub>* over *GF(P)* with equation *y<sup>2</sup> = x<sup>3</sup> + Ax + B* has prime order *N<sub>1</sub>*.\n  * The elliptic curve *E<sub>2</sub>* over *GF(P)* with equation *y<sup>2</sup> = x<sup>3</sup> + AD<sup>2</sup>x + D<sup>3</sup>B* has prime order *N<sub>2</sub>*.\n  * The ECDDH problem is assumed to be hard in both *E<sub>1</sub>* and *E<sub>2</sub>*.\n* Let *H<sub>1</sub>* be a hash function onto *E<sub>1</sub>* excluding the point at infinity.\n* Let *H<sub>2</sub>* be a hash function onto *E<sub>2</sub>* excluding the point at infinity.\n* Let *G<sub>1</sub>* be a generator for *E<sub>1</sub>*.\n* Let *G<sub>2</sub>* be a generator for *E<sub>2</sub>*.\n\nThe tool <code>gen_params.sage</code> can be used to find appropriate values for *A*, *B*, *D*, *N<sub>1</sub>*, and *N<sub>2</sub>* for a given *P*, for example:\n\n    $ sage gen_params.sage 1000000007\n    P = 1000000007 # Field size\n    A = 17 # curve equation parameter A\n    B = 13 # curve equation parameter B\n    D = 5 # non-square in GF(P)\n    N1 = 999956519 # Order of E1: y^2 = x^3 + A*x + B over GF(P)\n    N2 = 1000043497 # Order of E2: y^2 = x^3 + A*D^2*x + B*D^3 over GF(P)\n    # E1 = (N1 - 1) / 1 # Embedding degree of E1\n    # E2 = (N2 - 1) / 3 # Embedding degree of E2\n\nFor values of P that are sufficiently large for cryptographic purposes (256 bits and larger), this\nmay take several days. For primes equal to common group orders, see the Example Parameters section below.\n\n## Keys\n\n(Private) keys for Purify are tuples *(z<sub>1</sub>, z<sub>2</sub>)*, where *z<sub>1</sub>* is a non-zero integer below *(N<sub>1</sub> + 1) / 2* and\n*z<sub>2</sub>* is a non-zero integer below *(N<sub>2</sub> + 1) / 2*. They can be represented as a single integer *z = z<sub>1</sub> - 1 + (z<sub>2</sub> - 1)(N<sub>1</sub> - 1) / 2*.\n\nThe corresponding public keys (if desired) are tuples *(x<sub>1</sub>, x<sub>2</sub>)*, where *x<sub>1</sub>* is the X coordinate of *z<sub>1</sub>G<sub>1</sub>* and\n*x<sub>2</sub>* is the X coordinate of *z<sub>2</sub>G<sub>2</sub>*. They can be represented as a single integer *x = x<sub>1</sub> + P x<sub>2</sub>*.\n\nThe <code>purify.py</code> tool can be used to compute these. **Note that this code is purely for demonstration purposes.**\n\n    $ ./purify.py gen\n    z=11427c7268288dddf0cd24af3d30524fd817a91e103e7e02eb28b78db81cb350b3d2562f45fa8ecd711d1becc02fa348cf2187429228e7aac6644a3da2824e93 # private key\n    x=9343f981e9c40546061e63f9f4e6f61541c483c8aae8fe27180c490f0faf584d5036a5952b01200d8b0fdb49c83d5f8dcc8ae434e77785c576720d18897bbea5 # public key\n\n## Formula\n\nFor a message *m* and key *(z<sub>1</sub>, z<sub>2</sub>)*, *Purify((z<sub>1</sub>, z<sub>2</sub>), m)* can be computed as follows:\n* Let *u* be the X coordinate of *z<sub>1</sub>H<sub>1</sub>(m)*.\n* Let *v* be the X coordinate of *z<sub>2</sub>H<sub>2</sub>(m)*.\n* Return *((u + v / D)(A + u v / D) + 2B) / (u - v / D)<sup>2</sup>*.\n\nThe <code>purify.py</code> tool implements this:\n\n    $ ./purify.py eval 11427c7268288dddf0cd24af3d30524fd817a91e103e7e02eb28b78db81cb350b3d2562f45fa8ecd711d1becc02fa348cf2187429228e7aac6644a3da2824e93 01234567\n    eval: afae82108c66397451ce376bc95751c398e40eaf8c768d1b18cc9dd4161cee35\n\n## Verification using arithmetic circuits\n\nThe <code>purify.py</code> can also construct arithmetic circuits that verify the Purify evaluation as well as correctness of public keys. Specifically:\n\n    $ ./purify.py verifier 01234567 >verifier.py\n\nThis generates a Python function <code>verifier(pubkey, output, v)</code> that takes as input the *x* value from above, the output from the evaluation, and\nan assignment for all of the circuit's secret variables. It is specific for the message <code>01234567</code> in this case.\nThe function simply contains a number of assert statements that each verify a relation that must hold between these values.\n\nInput for the verifier can be generated using:\n\n    $ ./purify.py prove 01234567 11427c7268288dddf0cd24af3d30524fd817a91e103e7e02eb28b78db81cb350b3d2562f45fa8ecd711d1becc02fa348cf2187429228e7aac6644a3da2824e93 >proof.py\n\nIt invokes the verifier with expected values:\n\n    $ cat proof.py | cut -d , -f 1-2\n    verify(0x9343f981e9c40546061e63f9f4e6f61541c483c8aae8fe27180c490f0faf584d5036a5952b01200d8b0fdb49c83d5f8dcc8ae434e77785c576720d18897bbea5, 0xafae82108c66397451ce376bc95751c398e40eaf8c768d1b18cc9dd4161cee35\n\nThese are indeed the public key and the evaluation. The third argument to <code>verifier</code> is a long list of secret variables. The proof can be verified too:\n\n    $ cat verifier.py proof.py | python3\n\n**Note that this does not actually implement any zero-knowledge proofs. It only derives the relations that would need to be proven, and the secret values they're over in specific instances.**\n\n## Example parameters\n\nThe code in this repository has parameters that correspond to the order of the secp256k1 group:\n\n    P = 115792089237316195423570985008687907852837564279074904382605163141518161494337\n    A = 118\n    B = 339\n    D = 5\n    N1 = 115792089237316195423570985008687907853146579067639158218940405176378157516777\n    N2 = 115792089237316195423570985008687907852528549490510650546269921106658165471899\n\nUsing this 256-bit prime results in verification circuits that have 2030 multiplication gates.\n\nOther target groups can be configured by modifying purify.py. Other parameters are available in comments:\n\n    # Parameters generated using gen_params.sage for Curve25519 (253 bits)\n    P = 0x1000000000000000000000000000000014DEF9DEA2F79CD65812631A5CF5D3ED\n    A = 95\n    B = 78\n    D = 2\n    N1 = 0x100000000000000000000000000000004E9C306B81CF1C611587B3ED91288DAD\n    N2 = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDB21C351C4201D4B9A9D124728C31A2F\n\n    # Parameters generated using gen_params.sage for BLS12-381 (255 bits)\n    P = 0x73EDA753299D7D483339D80809A1D80553BDA402FFFE5BFEFFFFFFFF00000001\n    A = 245\n    B = 46\n    D = 5\n    N1 = 0x73EDA753299D7D483339D80809A1D804942105BA15136AAC92458EF0CDB43949\n    N2 = 0x73EDA753299D7D483339D80809A1D806135A424BEAE94D516DBA710D324BC6BB\n\n    # Parameters generated using gen_params.sage for BN(2,254) (254 bits)\n    P = 0x2523648240000001BA344D8000000007FF9F800000000010A10000000000000D\n    A = 209\n    B = 140\n    D = 2\n    N1 = 0x2523648240000001BA344D80000000089C9DDF8B4198211E1005BEF4E673BA39\n    N2 = 0x2523648240000001BA344D800000000762A12074BE67DF0331FA410B198C45E3\n\n    # Parameters generated using gen_params.sage for Ed448-Goldilocks (446 bits)\n    P = 0x3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7CCA23E9C44EDB49AED63690216CC2728DC58F552378C292AB5844F3\n    A = 155\n    B = 199\n    D = 2\n    N1 = 0x3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF61E19CF8AE93A7F6204DD85972E93B7A4C4733D057799E70F578D05B\n    N2 = 0x3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF97B2AADADA0A0E9D3D5E94C6CFF0496ACF43EAD9EF77E6B46137B98D\n"
            }
          },
          {
            "name": "argos",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Create GNOME Shell extensions in seconds",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "JavaScript"
                },
                {
                  "name": "CSS"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/argos",
            "primaryLanguage": {
              "name": "JavaScript"
            },
            "object": {
              "text": "<h1 align=\"center\">Argos</h1>\n<h3 align=\"center\">Create GNOME Shell extensions in seconds</h3>\n<br>\n\n![Screencast](https://cloud.githubusercontent.com/assets/2702526/21953508/7463004c-da5f-11e6-99e1-b8db1167c071.gif)\n\n[Most GNOME Shell extensions](https://extensions.gnome.org) do one thing: Add a button with a dropdown menu to the panel, displaying information and exposing functionality. Even in its simplest form, creating such an extension is a nontrivial task involving a poorly documented and ever-changing JavaScript API.\n\n**Argos lets you write GNOME Shell extensions in a language that every Linux user is already intimately familiar with: Bash scripts.**\n\nMore precisely, Argos is a GNOME Shell extension that turns executables' standard output into panel dropdown menus. It is inspired by, and fully compatible with, the [BitBar](https://github.com/matryer/bitbar) app for macOS. Argos supports many [BitBar plugins](https://github.com/matryer/bitbar-plugins) without modifications, giving you access to a large library of well-tested scripts in addition to being able to write your own.\n\n### Key features\n\n- **100% API [compatible](#bitbar-plugins-with-argos) with BitBar 1.9.2:** All BitBar plugins that run on Linux (i.e. do not contain macOS-specific code) work with Argos (else it's a bug).\n- **Beyond BitBar:** Argos can do everything that BitBar can do, but also some things that BitBar can't do (yet). See the documentation for details.\n- **Sophisticated asynchronous execution engine:** No matter how long your scripts take to run, Argos will schedule them intelligently and prevent blocking.\n- **Unicode support:** Just print your text to stdout. It will be rendered the way you expect.\n- **Optimized for minimum resource consumption:** Even with multiple plugins refreshing every second, Argos typically uses less than 1% of the CPU.\n- **Fully [documented](#usage).**\n\n\n## Installation\n\n### From the GNOME Shell Extensions website (recommended)\n\n[<img src=\"https://img.shields.io/badge/extensions.gnome.org-Argos-9999ff.svg\" height=\"30\">](https://extensions.gnome.org/extension/1176/argos/)\n\nIf you have a recent version of GNOME Software, you can also install Argos directly from there by simply searching for it. Note that this method may not always get you the latest release of Argos.\n\n### Manually\n\nClone the repository, then copy or symlink the directory `argos@pew.worldwidemann.com` into `~/.local/share/gnome-shell/extensions`. Restart GNOME Shell by pressing <kbd>Alt+F2</kbd>, then entering `r`. On some systems, you may additionally have to enable the Argos extension using GNOME Tweak Tool.\n\n\n## Examples\n\n### GNOME Shell log viewer\n\nArgos plugins are great for monitoring your system, displaying anything that a command line script can output in a convenient, unobtrusive place.\n\nExtension developers often rely on the central GNOME Shell log for debugging. That log may be viewed in a terminal with `journalctl /usr/bin/gnome-shell -f` ‚Äì but it is also an excellent target for our first sample plugin:\n\n#### `shell_log.1s.sh`\n\n```bash\n#!/usr/bin/env bash\n\nLOG_ENTRY=$(journalctl /usr/bin/gnome-shell -n 1 --output=cat --no-pager)\necho \"<span color='#9BF' weight='normal'><small><tt>$LOG_ENTRY</tt></small></span> | length=40\"\n\necho \"---\"\necho \"View GNOME Shell Log | bash='journalctl /usr/bin/gnome-shell -f'\"\n```\n\nMake it executable and drop it into `~/.config/argos`, and you should see something like this:\n\n![Shell Log](https://cloud.githubusercontent.com/assets/2702526/21953515/8d79c9b2-da5f-11e6-97eb-658a5e10854b.png)\n\nAs the plugin updates every second, new log entries are shown almost without delay.\n\n\n### Simple launcher\n\nPlugins are not limited to displaying information ‚Äì they can also perform actions when the user clicks on a menu item. This allows you to rapidly create launchers that look and act exactly like you want.\n\n#### `launcher.sh`\n\n```bash\n#!/usr/bin/env bash\n\necho \"Launcher | iconName=starred\"\necho \"---\"\n\nWIKIPEDIA_ICON=$(curl -s \"https://en.wikipedia.org/static/favicon/wikipedia.ico\" | base64 -w 0)\necho \"Wikipedia | image='$WIKIPEDIA_ICON' imageWidth=20 font=serif href='https://en.wikipedia.org'\"\n\necho \"---\"\necho \"Gedit | iconName=gedit bash=gedit terminal=false\"\necho \"Nautilus | iconName=system-file-manager bash=nautilus terminal=false\"\necho \"Process list (<span color='yellow'><tt>top</tt></span>) | iconName=utilities-terminal-symbolic bash=top\"\necho \"---\"\necho \"Looking Glass | eval='imports.ui.main.createLookingGlass(); imports.ui.main.lookingGlass.toggle();'\"\n```\n\n![Simple Launcher](https://cloud.githubusercontent.com/assets/2702526/21953517/9e5c08e4-da5f-11e6-8ae8-f9edc57aa83e.png)\n\nNote how the Wikipedia icon is downloaded from the web and serialized into the menu item without ever needing to be saved to disk. All of this comes from a file smaller than the configuration files of most dedicated \"launcher\" extensions, while providing *much* more flexibility. Argos plugins blur the line between configuration and code.\n\n\n### Advanced launcher\n\nAn Argos plugin is just an executable file that writes to stdout. As such, any language can be used to create plugins. Switching from Bash to Python gives you easy access to the GNOME platform APIs, enabling even more powerful launchers.\n\n#### `launcher.py`\n\n```python\n#!/usr/bin/env python3\n\nimport re\nfrom gi.repository import Gio\n\napplications = {}\n\nfor app_info in Gio.AppInfo.get_all():\n  icon, categories = app_info.get_icon(), app_info.get_categories()\n  if icon is None or categories is None:\n    continue\n  # Remove \"%U\" and \"%F\" placeholders\n  command_line = re.sub(\"%\\\\w\", \"\", app_info.get_commandline()).strip()\n  app = (app_info.get_name(), icon.to_string(), command_line)\n  for category in categories.split(\";\"):\n    if category not in [\"GNOME\", \"GTK\", \"\"]:\n      if category not in applications:\n        applications[category] = []\n      applications[category].append(app)\n      break\n\nprint(\"Applications\\n---\")\n\nfor category, apps in sorted(applications.items()):\n  print(category)\n  for app in sorted(apps):\n    print(\"--%s | useMarkup=false iconName=%s bash='%s' terminal=false\" % app)\n```\n\n![Advanced Launcher](https://cloud.githubusercontent.com/assets/2702526/21953520/b6112244-da5f-11e6-88b0-1d8cd61e5198.png)\n\nAnd there you have it: A working clone of [a full-blown GNOME Shell extension](https://extensions.gnome.org/extension/6/applications-menu/) ‚Äì implemented using a fraction of the code.\n\n\n### `top` viewer\n\nArgos basically pipes standard output into a panel menu. This makes for some very cool plugins like this `top` output viewer:\n\n#### `top.3s+.sh`\n\n```bash\n#!/usr/bin/env bash\n\necho \"top\"\necho \"---\"\n\nif [ \"$ARGOS_MENU_OPEN\" == \"true\" ]; then\n  # http://stackoverflow.com/a/14853319\n  TOP_OUTPUT=$(top -b -n 1 | head -n 20 | awk 1 ORS=\"\\\\\\\\n\")\n  echo \"$TOP_OUTPUT | font=monospace bash=top\"\nelse\n  echo \"Loading...\"\nfi\n```\n\n![top Viewer](https://cloud.githubusercontent.com/assets/2702526/21953525/e30d340e-da5f-11e6-9ed3-cc10a067d515.gif)\n\nIt's `top` at your fingertips! Of course, this approach works with any other terminal program as well.\n\nNote that the plugin checks the [`ARGOS_MENU_OPEN` environment variable](#environment-variables) to ensure `top` is run only if the dropdown menu is visible, while the [`+` in the filename](#filename-format) forces a re-run whenever the user opens the menu. This pattern makes output available immediately when it is needed, but keeps idle resource consumption of the plugin near zero.\n\n\n## Usage\n\nArgos monitors the directory `~/.config/argos` for changes. Any executable file found in this directory is considered a plugin. Files whose name starts with a dot (`.`) and files in subdirectories are ignored.\n\nPlugins are run and their standard output is interpreted as described below. For each plugin, a panel button with a dropdown menu is created. The arrangement of buttons from left to right follows the alphabetical order of the files they are generated from (except when a `POSITION` is explicitly specified in the filename). New plugins and edits to existing plugins are automatically detected and reflected in the panel.\n\n### Filename format\n\nA plugin file may be named anything (it only needs to be executable), but if its name has the special form\n\n```\nNAME.POSITION.INTERVAL[+].EXTENSION\n```\n\nwhere\n\n* `POSITION` consists of an integer (optional) + one of `l` (left), `c` (center) or `r` (right), and\n* `INTERVAL` consists of an integer + one of `s` (seconds), `m` (minutes), `h` (hours) or `d` (days)\n\nthen\n\n* the dropdown menu button is placed in the panel at `POSITION`, and\n* the plugin is re-run and its output re-rendered every `INTERVAL`, and\n* if `INTERVAL` is followed by `+`, the plugin is additionally re-run each time the dropdown menu is opened.\n\n`POSITION` may be omitted entirely (in which case the button is placed before all other buttons on the right-hand side of the panel) while `INTERVAL` can be left empty. For example, a script named `plugin.10s.sh` is updated every 10 seconds, the button belonging to `plugin.1c..sh` is positioned just right of the GNOME Shell clock, and `plugin.l.1m.sh` is displayed left of the \"Activities\" button and updated every minute.\n\n### Output format\n\nArgos plugins are executables (such as shell scripts) that print to standard output lines of the following form:\n\n```\nTEXT | ATTRIBUTE_1=VALUE ATTRIBUTE_2=VALUE ...\n```\n\nAll attributes are optional, so the most basic plugins simply print lines consisting of text to be displayed. To include whitespace, attribute values may be quoted using the same convention employed by most command line shells.\n\n### Rendering\n\nLines containing only dashes (`---`) are *separators*.\n\nLines above the first separator belong to the button itself. If there are multiple such lines, they are displayed in succession, each of them for 3 seconds before switching to the next. Additionally, all button lines get a dropdown menu item, except if their `dropdown` attribute is set to `false`.\n\nLines below the first separator are rendered as dropdown menu items. Further separators create graphical separator menu items.\n\nLines beginning with `--` are rendered in a submenu associated with the preceding unindented line. While Argos supports nested submenus *in principle*, GNOME Shell does not render them correctly.\n\n[Emoji codes](http://www.emoji-cheat-sheet.com) like `:horse:` :horse: and `:smile:` :smile: in the line text are replaced with their corresponding Unicode characters (unless the `emojize` attribute is set to `false`). Note that multicolor emoji rendering requires GNOME 3.26 or later.\n\n[ANSI SGR escape sequences](https://en.wikipedia.org/wiki/ANSI_escape_code#graphics) and [Pango markup](https://developer.gnome.org/pango/stable/PangoMarkupFormat.html) tags may be used for styling. This can be disabled by setting the `ansi` and `useMarkup` attributes, respectively, to `false`.\n\nBackslash escapes such as `\\n` and `\\t` in the line text are converted to their corresponding characters (newline and tab in this case), which can be prevented by setting the `unescape` attribute to `false`. Newline escapes can be used to create multi-line menu items.\n\n### Line attributes\n\n#### Display\n\nControl how the line is rendered.\n\n| Attribute | Value | Description |\n| --- | --- | --- |\n| `color` | Hex RGB/RGBA or color name | Sets the text color for the item. |\n| `font` | Font name | Sets the font for the item. |\n| `size` | Font size in points | Sets the font size for the item. |\n| `iconName` | Icon name | Sets a menu icon for the item. See the [freedesktop.org icon naming specification](https://specifications.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html) for a list of names that should work anywhere, or run [gtk3-icon-browser](https://developer.gnome.org/gtk3/unstable/gtk3-icon-browser.html) to see the names of all icons in your current icon theme. **Argos only.** |\n| `image`, `templateImage` | Base64-encoded image file | Renders an image inside the item. The image is positioned to the left of the text and to the right of the icon. GNOME Shell does not have a concept of \"template images\", so `image` and `templateImage` are interchangeable in Argos. |\n| `imageWidth`, `imageHeight` | Width/height in pixels | Sets the dimensions of the image. If only one dimension is specified, the image's original aspect ratio is maintained. **Argos only.** |\n| `length` | Length in characters | Truncate the line text to the specified number of characters, ellipsizing the truncated part. |\n| `trim` | `true` or `false` | If `false`, preserve leading and trailing whitespace of the line text. |\n| `dropdown` | `true` or `false` | If `false` and the line is a button line (see above), exclude it from being displayed in the dropdown menu. |\n| `alternate` | `true` or `false` | If `true`, the item is hidden by default, and shown in place of the preceding item when the <kbd>Alt</kbd> key is pressed. |\n| `emojize` | `true` or `false` | If `false`, disable substitution of `:emoji_name:` with emoji characters in the line text. |\n| `ansi` | `true` or `false` | If `false`, disable interpretation of ANSI escape sequences in the line text. |\n| `useMarkup` | `true` or `false` | If `false`, disable interpretation of Pango markup in the line text. **Argos only.** |\n| `unescape` | `true` or `false` | If `false`, disable interpretation of backslash escapes such as `\\n` in the line text. **Argos only.** |\n\n#### Actions\n\nDefine actions to be performed when the user clicks on the line's menu item.\n\nAction attributes are *not* mutually exclusive. Any combination of them may be associated with the same item, and all actions are executed when the item is clicked.\n\n| Attribute | Value | Description |\n| --- | --- | --- |\n| `bash` | Bash command | Runs a command using `bash` inside a GNOME Terminal window. |\n| `terminal` | `true` or `false` | If `false`, runs the Bash command in the background (i.e. without opening a terminal window). |\n| `param1`, `param2`, ... | Command line arguments | Arguments to be passed to the Bash command. *Note: Provided for compatibility with BitBar only. Argos allows placing arguments directly in the command string.* |\n| `href` | URI | Opens a URI in the application registered to handle it. URIs starting with `http://` launch the web browser, while `file://` URIs open the file in its associated default application. |\n| `eval` | JavaScript code | Passes the code to JavaScript's `eval` function. **Argos only.** |\n| `refresh` | `true` or `false` | If `true`, re-runs the plugin, updating its output. |\n\n### Environment variables\n\nPlugin executables are run with the following special environment variables set:\n\n| Name | Value |\n| --- | --- |\n| `ARGOS_VERSION` | Version number of the Argos extension. The presence of this environment variable can also be used to determine that the plugin is actually running in Argos, rather than BitBar or [kargos](https://github.com/lipido/kargos). |\n| `ARGOS_MENU_OPEN` | `true` if the dropdown menu was open at the time the plugin was run, and `false` otherwise. |\n\n\n## BitBar plugins with Argos\n\nThese screenshots show how some scripts from the BitBar plugin repository look when rendered by Argos compared to the \"canonical\" BitBar rendering (macOS screenshots taken from https://getbitbar.com).\n\n| Plugin | BitBar on macOS | Argos on GNOME Shell |\n| --- | --- | --- |\n| [**Ping**](https://getbitbar.com/plugins/Network/ping.10s.sh) | ![Ping/BitBar](https://cloud.githubusercontent.com/assets/2702526/21953532/0b7956de-da60-11e6-9e73-067755cb326d.png) | ![Ping/Argos](https://cloud.githubusercontent.com/assets/2702526/21953530/fe8ac58e-da5f-11e6-8571-f0bc722d30a1.png) |\n| [**Stock Ticker**](https://getbitbar.com/plugins/Finance/gfinance.5m.py) | ![Stock Ticker/BitBar](https://cloud.githubusercontent.com/assets/2702526/21953537/29818494-da60-11e6-9df0-becf03a42553.png) | ![Stock Ticker/Argos](https://cloud.githubusercontent.com/assets/2702526/21953535/1b93fc0e-da60-11e6-8bb0-7eb349045230.png) |\n| [**World Clock**](https://getbitbar.com/plugins/Time/worldclock.1s.sh) | ![World Clock/BitBar](https://cloud.githubusercontent.com/assets/2702526/21953545/4d946c3e-da60-11e6-863c-552ee2ab9282.png) | ![World Clock/Argos](https://cloud.githubusercontent.com/assets/2702526/21953541/41388042-da60-11e6-99dc-770d0b6a668a.png) |\n| [**Unicorn**](https://getbitbar.com/plugins/Web/Cornify/cornify.1m.sh) | ![Unicorn/BitBar](https://cloud.githubusercontent.com/assets/2702526/21953552/75dc46f8-da60-11e6-9f61-53464281876c.png) | ![Unicorn/Argos](https://cloud.githubusercontent.com/assets/2702526/21953550/68297b98-da60-11e6-9823-c76340527330.png) |\n| [**ANSI**](https://getbitbar.com/plugins/Tutorial/ansi.sh) | ![ANSI/BitBar](https://cloud.githubusercontent.com/assets/2702526/21953559/a2c26b52-da60-11e6-9e0e-1be3550a2116.png) | ![ANSI/Argos](https://cloud.githubusercontent.com/assets/2702526/21953553/911d790a-da60-11e6-92a1-b6e20d423f72.png) |\n\n\n## Acknowledgments\n\nGNOME Shell is a difficult platform to develop for. At the time this project was started, the Gjs documentation hadn't been updated in three years and was missing important classes (new documentation has [since appeared](https://ptomato.wordpress.com/2017/05/22/the-gjs-documentation-is-back/)). Once again, [**Valadoc**](https://valadoc.org) saved the day for me. While not fully identical to the Gjs API, Valadoc is the best manual for GNOME on the web today.\n\nArgos includes [**emojilib**](https://github.com/muan/emojilib)'s emoji name/character mappings. It's wonderful that such a comprehensive and well-maintained library is so easily available.\n\nWithout [**BitBar**](https://github.com/matryer/bitbar), Argos wouldn't be what it is today, or, more likely, wouldn't exist at all. There have been many attempts on many platforms to simplify panel menu creation, but BitBar was the first to get it right by finding the balance between text-only configuration and dynamic output. Thank you for showing the way!\n\n\n## Contributing\n\nContributors are always welcome. However, **please file an issue describing what you intend to add before opening a pull request,** *especially* for new features! I have a clear vision of what I want (and do not want) Argos to be, so discussing potential additions might help you avoid duplication and wasted work.\n\nBy contributing, you agree to release your changes under the same license as the rest of the project (see below).\n\n\n## License\n\nCopyright &copy; 2016-2018 Philipp Emanuel Weidmann (<pew@worldwidemann.com>)\n\nReleased under the terms of the [GNU General Public License, version 3](https://gnu.org/licenses/gpl.html)\n"
            }
          },
          {
            "name": "ieeesb20",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": null,
            "watchers": {
              "totalCount": 2
            },
            "languages": {
              "nodes": [
                {
                  "name": "HTML"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": false,
            "forkCount": 0,
            "url": "https://github.com/tschorsch/ieeesb20",
            "primaryLanguage": {
              "name": "HTML"
            },
            "object": null
          },
          {
            "name": "WalletWasabi",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Open-source, non-custodial, privacy focused Bitcoin wallet for Windows, Linux, and Mac. Built-in Tor, CoinJoin, and coin control features.",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "C#"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "CSS"
                },
                {
                  "name": "HTML"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/WalletWasabi",
            "primaryLanguage": {
              "name": "C#"
            },
            "object": {
              "text": "![](https://i.imgur.com/4GO7nnY.png)\n\n| Code Quality           | Windows Tests           | Linux Tests             | macOS Tests             | License                   |\n| :----------------------| :-----------------------| :-----------------------| :-----------------------| :-------------------------|\n| [![CodeFactor][9]][10] | [![Build Status][1]][2] | [![Build Status][3]][4] | [![Build Status][5]][6] | [![GitHub license][7]][8] |\n\n[1]: https://dev.azure.com/zkSNACKs/Wasabi/_apis/build/status/Wasabi.Windows?branchName=master\n[2]: https://dev.azure.com/zkSNACKs/Wasabi/_build?definitionId=3\n[3]: https://dev.azure.com/zkSNACKs/Wasabi/_apis/build/status/Wasabi.Linux?branchName=master\n[4]: https://dev.azure.com/zkSNACKs/Wasabi/_build?definitionId=1\n[5]: https://dev.azure.com/zkSNACKs/Wasabi/_apis/build/status/Wasabi.Osx?branchName=master\n[6]: https://dev.azure.com/zkSNACKs/Wasabi/_build?definitionId=2\n[7]: https://img.shields.io/github/license/zkSNACKs/WalletWasabi.svg\n[8]: https://github.com/zkSNACKs/WalletWasabi/blob/master/LICENSE.md\n[9]: https://www.codefactor.io/repository/github/zksnacks/walletwasabi/badge\n[10]: https://www.codefactor.io/repository/github/zksnacks/walletwasabi\n\n[Wasabi Wallet](https://wasabiwallet.io) is an open-source, non-custodial, privacy-focused Bitcoin wallet for desktop, that implements [Chaumian CoinJoin](https://github.com/nopara73/ZeroLink/#ii-chaumian-coinjoin).\n\nThe main privacy features on the network level:\n- Tor-only by default.\n- BIP 158 block filters for private light client.\n- Opt-in connection to user full node.\n\nand on the blockchain level:\n- Intuitive ZeroLink CoinJoin integration.\n- Superb coin selection and labeling.\n- Dust attack protections.\n\nFor more information, please check out the [Wasabi Documentation](https://docs.wasabiwallet.io), an archive of knowledge about the nuances of Bitcoin privacy and how to properly use Wasabi.\n\n\n# [Download Wasabi](https://github.com/zkSNACKs/WalletWasabi/releases)\n\n![](https://i.imgur.com/kpjT9ZV.png)\n\nFor step by step instructions of PGP verification and package installation, see the [documentation](https://docs.wasabiwallet.io/using-wasabi/InstallPackage.html)\n\n# Build From Source Code\n\n## Get The Requirements\n\n1. Get Git: https://git-scm.com/downloads\n2. Get .NET Core 3.1 SDK: https://www.microsoft.com/net/download\n3. Optionally disable .NET's telemetry by typing `export DOTNET_CLI_TELEMETRY_OPTOUT=1` on Linux and macOS or `setx DOTNET_CLI_TELEMETRY_OPTOUT 1` on Windows.\n\n## Get Wasabi\n\nClone & Restore & Build\n\n```sh\ngit clone https://github.com/zkSNACKs/WalletWasabi.git\ncd WalletWasabi/WalletWasabi.Gui\ndotnet build\n```\n\n## Run Wasabi\n\nRun Wasabi with `dotnet run` from the `WalletWasabi.Gui` folder.\n\n## Update Wasabi\n\n```sh\ngit pull\n```\n"
            }
          },
          {
            "name": "sha256",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "This is a SHA-256 implementation that allows for setting and getting the mid-state information.",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/sha256",
            "primaryLanguage": {
              "name": "Python"
            },
            "object": null
          },
          {
            "name": "docker-jitsi-meet",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Jitsi Meet on Docker",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "Makefile"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "Lua"
                },
                {
                  "name": "Dockerfile"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/docker-jitsi-meet",
            "primaryLanguage": {
              "name": "Lua"
            },
            "object": {
              "text": "# Jitsi Meet on Docker\n\n![](resources/jitsi-docker.png)\n\n[Jitsi] is a set of Open Source projects that allows you to easily build and deploy secure\nvideoconferencing solutions.\n\n[Jitsi Meet] is a fully encrypted, 100% Open Source video conferencing solution that you can use\nall day, every day, for free ‚Äî with no account needed.\n\nThis repository contains the necessary tools to run a Jitsi Meet stack on [Docker] using\n[Docker Compose].\n\n## Table of contents\n\n* [Quick start](#quick-start)\n* [Architecture](#architecture)\n  - [Images](#images)\n  - [Design considerations](#design-considerations)\n* [Configurations](#configuration)\n  - [Advanced configuration](#advanced-configuration)\n  - [Running behind NAT or on a LAN environment](#running-behind-nat-or-on-a-lan-environment)\n* [Build Instructions](#build-instructions)\n* [ToDo](#todo)\n\n<hr />\n\n## Quick start\n\nIn order to quickly run Jitsi Meet on a machine running Docker and Docker Compose,\nfollow these steps:\n\n* Clone this repository to your computer.\n  * `git clone https://github.com/jitsi/docker-jitsi-meet && cd docker-jitsi-meet`\n* Create a ``.env`` file by copying and adjusting ``env.example``, and create required `CONFIG` directories\n  * `cp env.example .env`\n  * `mkdir -p ~/.jitsi-meet-cfg/{web/letsencrypt,transcripts,prosody,jicofo,jvb}`\n* Run ``docker-compose up -d``.\n* Access the web UI at [``https://localhost:8443``](https://localhost:8443) (or a different port, in case you edited the compose file).\n\nNote that HTTP (not HTTPS) is also available (on port 8000, by default), but that's e.g. for a reverse proxy setup;\ndirect access via HTTP instead HTTPS leads to WebRTC errors such as _Failed to access your microphone/camera: Cannot use microphone/camera for an unknown reason. Cannot read property 'getUserMedia' of undefined_ or _navigator.mediaDevices is undefined_.\n\nIf you want to use jigasi too, first configure your env file with SIP credentials\nand then run Docker Compose as follows: ``docker-compose -f docker-compose.yml -f jigasi.yml up``\n\nIf you want to enable document sharing via [Etherpad], configure it and run Docker Compose as\nfollows: ``docker-compose -f docker-compose.yml -f etherpad.yml up``\n\nIf you want to use jibri too, first configure a host as described in JItsi BRoadcasting Infrastructure configuration section\nand then run Docker Compose as follows: ``docker-compose -f docker-compose.yml -f jibri.yml up -d``\nor to use jigasi too: ``docker-compose -f docker-compose.yml -f jigasi.yml -f jibri.yml up -d``\n\n## Architecture\n\nA Jitsi Meet installation can be broken down into the following components:\n\n* A web interface\n* An XMPP server\n* A conference focus component\n* A video router (could be more than one)\n* A SIP gateway for audio calls\n* A Broadcasting Infrastructure for recording or streaming a conference.\n\n![](resources/docker-jitsi-meet.png)\n\nThe diagram shows a typical deployment in a host running Docker. This project\nseparates each of the components above into interlinked containers. To this end,\nseveral container images are provided.\n\n### External Ports\n\nThe following external ports must be opened on a firewall:\n\n* 80/tcp for Web UI HTTP (really just to redirect, after uncommenting ENABLE_HTTP_REDIRECT=1 in .env)\n* 443/tcp for Web UI HTTPS\n* 4443/tcp for RTP media over TCP\n* 10000/udp for RTP media over UDP\n\nAlso 20000-20050/udp for jigasi, in case you choose to deploy that to facilitate SIP access.\n\nE.g. on a CentOS/Fedora server this would be done like this (without SIP access):\n\n```shell\n    $ sudo firewall-cmd --permanent --add-port=80/tcp\n    $ sudo firewall-cmd --permanent --add-port=443/tcp\n    $ sudo firewall-cmd --permanent --add-port=4443/tcp\n    $ sudo firewall-cmd --permanent --add-port=10000/udp\n    $ sudo firewall-cmd --reload\n```\n\n### Images\n\n* **base**: Debian stable base image with the [S6 Overlay] for process control and the\n  [Jitsi repositories] enabled. All other images are based on this one.\n* **base-java**: Same as the above, plus Java (OpenJDK).\n* **web**: Jitsi Meet web UI, served with nginx.\n* **prosody**: [Prosody], the XMPP server.\n* **jicofo**: [Jicofo], the XMPP focus component.\n* **jvb**: [Jitsi Videobridge], the video router.\n* **jigasi**: [Jigasi], the SIP (audio only) gateway.\n* **etherpad**: [Etherpad], shared document editing addon.\n* **jibri**: [Jibri], the broadcasting infrastructure.\n\n### Design considerations\n\nJitsi Meet uses XMPP for signaling, thus the need for the XMPP server. The setup provided\nby these containers does not expose the XMPP server to the outside world. Instead, it's kept\ncompletely sealed, and routing of XMPP traffic only happens on a user-defined network.\n\nThe XMPP server can be exposed to the outside world, but that's out of the scope of this\nproject.\n\n## Configuration\n\nThe configuration is performed via environment variables contained in a ``.env`` file. You\ncan copy the provided ``env.example`` file as a reference.\n\n**IMPORTANT**: At the moment, the configuration is not regenerated on every container boot, so\nif you make any changes to your ``.env`` file, make sure you remove the configuration directory\nbefore starting your containers again.\n\nVariable | Description | Example\n--- | --- | ---\n`CONFIG` | Directory where all configuration will be stored | /opt/jitsi-meet-cfg\n`TZ` | System Time Zone | Europe/Amsterdam\n`HTTP_PORT` | Exposed port for HTTP traffic | 8000\n`HTTPS_PORT` | Exposed port for HTTPS traffic | 8443\n`DOCKER_HOST_ADDRESS` | IP address of the Docker host, needed for LAN environments | 192.168.1.1\n`PUBLIC_URL` | Public URL for the web service | https://meet.example.com\n\n**NOTE**: The mobile apps won't work with self-signed certificates (the default)\nsee below for instructions on how to obtain a proper certificate with Let's Encrypt.\n\n### Let's Encrypt configuration\n\nIf you plan on exposing this container setup to the outside traffic directly and\nwant a proper TLS certificate, you are in luck because Let's Encrypt support is\nbuilt right in. Here are the required options:\n\nVariable | Description | Example\n--- | --- | ---\n`ENABLE_LETSENCRYPT` | Enable Let's Encrypt certificate generation | 1\n`LETSENCRYPT_DOMAIN` | Domain for which to generate the certificate | meet.example.com\n`LETSENCRYPT_EMAIL` | E-Mail for receiving important account notifications (mandatory) | alice@atlanta.net\n\nIn addition, you will need to set `HTTP_PORT` to 80 and `HTTPS_PORT` to 443.\n\n### SIP gateway configuration\n\nIf you want to enable the SIP gateway, these options are required:\n\nVariable | Description | Example\n--- | --- | ---\n`JIGASI_SIP_URI` | SIP URI for incoming / outgoing calls | test@sip2sip.info\n`JIGASI_SIP_PASSWORD` | Password for the specified SIP account | passw0rd\n`JIGASI_SIP_SERVER` | SIP server (use the SIP account domain if in doubt) | sip2sip.info\n`JIGASI_SIP_PORT` | SIP server port | 5060\n`JIGASI_SIP_TRANSPORT` | SIP transport | UDP\n\n### JItsi BRoadcasting Infrastructure configuration\n\nBefore running Jibri, you need to set up an ALSA loopback device on the host. This **will not**\nwork on a non-Linux host.\n\nFor CentOS 7, the module is already compiled with the kernel, so just run:\n\n```\n# configure 5 capture/playback interfaces\necho \"options snd-aloop enable=1,1,1,1,1 index=0,1,2,3,4\" > /etc/modprobe.d/alsa-loopback.conf\n# setup autoload the module\necho \"snd_aloop\" > /etc/modules-load.d/snd_aloop.conf\n# load the module\nmodprobe snd-aloop\n# check that the module is loaded\nlsmod | grep snd_aloop\n```\n\nFor Ubuntu:\n\n```\n# install the module\napt update && apt install linux-image-extra-virtual\n# configure 5 capture/playback interfaces\necho \"options snd-aloop enable=1,1,1,1,1 index=0,1,2,3,4\" > /etc/modprobe.d/alsa-loopback.conf\n# setup autoload the module\necho \"snd-aloop\" >> /etc/modules\n# check that the module is loaded\nlsmod | grep snd_aloop\n```\n\nNOTE: if you are running on AWS you may need to reboot your machine to use the generic kernel instead\nof the \"aws\" kernel.\n\nIf you want to enable Jibri these options are required:\n\nVariable | Description | Example\n--- | --- | ---\n`ENABLE_RECORDING` | Enable recording conference to local disk | 1\n\nExtended Jibri configuration:\n\nVariable | Description | Example\n--- | --- | ---\n`JIBRI_RECORDER_USER` | Internal recorder user for Jibri client connections | recorder\n`JIBRI_RECORDER_PASSWORD` | Internal recorder password for Jibri client connections | passw0rd\n`JIBRI_RECORDING_DIR` | Directory for recordings inside Jibri container | /config/recordings\n`JIBRI_FINALIZE_RECORDING_SCRIPT_PATH` | The finalizing script. Will run after recording is complete | /config/finalize.sh\n`JIBRI_XMPP_USER` | Internal user for Jibri client connections. | jibri\n`JIBRI_RECORDER_PASSWORD` | Internal user for Jibri client connections | passw0rd\n`JIBRI_STRIP_DOMAIN_JID` | Prefix domain for strip inside Jibri (please see env.example for details) | muc\n`JIBRI_BREWERY_MUC` | MUC name for the Jibri pool | jibribrewery\n`JIBRI_PENDING_TIMEOUT` | MUC connection timeout | 90\n`JIBRI_LOGS_DIR` | Directory for logs inside Jibri container | /config/logs\n\nFor using multiple Jibri instances, you have to select different loopback interfaces for each instance manually.\n\n<details>\n  <summary>Set interface in file `/home/jibri/.asoundrc` inside a docker container.</summary>\n\n  Default the first instance has:\n\n  ```\n  ...\n  slave.pcm \"hw:Loopback,0,0\"\n  ...\n  slave.pcm \"hw:Loopback,0,1\"\n  ...\n  slave.pcm \"hw:Loopback,1,1\"\n  ...\n  slave.pcm \"hw:Loopback,1,0\"\n  ...\n  ```\n\n  For setup the second instance, run container with changed `/home/jibri/.asoundrc`:\n\n  ```\n  ...\n  slave.pcm \"hw:Loopback_1,0,0\"\n  ...\n  slave.pcm \"hw:Loopback_1,0,1\"\n  ...\n  slave.pcm \"hw:Loopback_1,1,1\"\n  ...\n  slave.pcm \"hw:Loopback_1,1,0\"\n  ...\n  ```\n\n  Also you can use numbering id for set loopback interface. The third instance will have `.asoundrc` that looks like:\n\n  ```\n  ...\n  slave.pcm \"hw:2,0,0\"\n  ...\n  slave.pcm \"hw:2,0,1\"\n  ...\n  slave.pcm \"hw:2,1,1\"\n  ...\n  slave.pcm \"hw:2,1,0\"\n  ...\n\n  ```\n\n</details>\n\n### Authentication\n\nAuthentication can be controlled with the environment variables below. If guest\naccess is enabled, unauthenticated users will need to wait until a user authenticates\nbefore they can join a room. If guest access is not enabled, every user will need\nto authenticate before they can join.\n\nVariable | Description | Example\n--- | --- | ---\n`ENABLE_AUTH` | Enable authentication | 1\n`ENABLE_GUESTS` | Enable guest access | 1\n`AUTH_TYPE` | Select authentication type (internal, jwt or ldap) | internal\n\n#### Internal authentication\n\nThe default authentication mode (`internal`) uses XMPP credentials to authenticate users.\nTo enable it you have to enable authentication with `ENABLE_AUTH` and set `AUTH_TYPE` to `internal`,\nthen configure the settings you can see below.\n\nInternal users must be created with the ``prosodyctl`` utility in the ``prosody`` container.\nIn order to do that, first, execute a shell in the corresponding container:\n\n``docker-compose exec prosody /bin/bash``\n\nOnce in the container, run the following command to create a user:\n\n``prosodyctl --config /config/prosody.cfg.lua register TheDesiredUsername meet.jitsi TheDesiredPassword``\n\nNote that the command produces no output.\n\n#### Authentication using LDAP\n\nYou can use LDAP to authenticate users. To enable it you have to enable authentication with `ENABLE_AUTH` and\nset `AUTH_TYPE` to `ldap`, then configure the settings you can see below.\n\nVariable | Description | Example\n--- | --- | ---\n`LDAP_URL` | URL for ldap connection | ldaps://ldap.domain.com/\n`LDAP_BASE` | LDAP base DN. Can be empty. | DC=example,DC=domain,DC=com\n`LDAP_BINDDN` | LDAP user DN. Do not specify this parameter for the anonymous bind. | CN=binduser,OU=users,DC=example,DC=domain,DC=com\n`LDAP_BINDPW` | LDAP user password. Do not specify this parameter for the anonymous bind. | LdapUserPassw0rd\n`LDAP_FILTER` | LDAP filter. | (sAMAccountName=%u)\n`LDAP_AUTH_METHOD` | LDAP authentication method. | bind\n`LDAP_VERSION` | LDAP protocol version | 3\n`LDAP_USE_TLS` | Enable LDAP TLS | 1\n`LDAP_TLS_CIPHERS` | Set TLS ciphers list to allow | SECURE256:SECURE128\n`LDAP_TLS_CHECK_PEER` | Require and verify LDAP server certificate | 1\n`LDAP_TLS_CACERT_FILE` | Path to CA cert file. Used when server certificate verification is enabled | /etc/ssl/certs/ca-certificates.crt\n`LDAP_TLS_CACERT_DIR` | Path to CA certs directory. Used when server certificate verification is enabled. | /etc/ssl/certs\n`LDAP_START_TLS` | Enable START_TLS, requires LDAPv3, URL must be ldap:// not ldaps:// | 0\n\n#### Authentication using JWT tokens\n\nYou can use JWT tokens to authenticate users. To enable it you have to enable authentication with `ENABLE_AUTH` and\nset `AUTH_TYPE` to `jwt`, then configure the settings you can see below.\n\nVariable | Description | Example\n--- | --- | ---\n`JWT_APP_ID` | Application identifier | my_jitsi_app_id\n`JWT_APP_SECRET` | Application secret known only to your token | my_jitsi_app_secret\n`JWT_ACCEPTED_ISSUERS` | (Optional) Set asap_accepted_issuers as a comma separated list | my_web_client,my_app_client\n`JWT_ACCEPTED_AUDIENCES` | (Optional) Set asap_accepted_audiences as a comma separated list | my_server1,my_server2\n`JWT_ASAP_KEYSERVER` | (Optional) Set asap_keyserver to a url where public keys can be found | https://example.com/asap\n`JWT_ALLOW_EMPTY` | (Optional) Allow anonymous users with no JWT while validating JWTs when provided | 0\n`JWT_AUTH_TYPE` | (Optional) Controls which module is used for processing incoming JWTs | token\n`JWT_TOKEN_AUTH_MODULE` | (Optional) Controls which module is used for validating JWTs | token_verification\n\nThis can be tested using the [jwt.io] debugger. Use the following sample payload:\n\n```\n{\n  \"context\": {\n    \"user\": {\n      \"avatar\": \"https://robohash.org/john-doe\",\n      \"name\": \"John Doe\",\n      \"email\": \"jdoe@example.com\"\n    }\n  },\n  \"aud\": \"my_jitsi_app_id\",\n  \"iss\": \"my_jitsi_app_id\",\n  \"sub\": \"meet.jitsi\",\n  \"room\": \"*\"\n}\n```\n\n### Shared document editing using Etherpad\n\nYou can collaboratively edit a document via [Etherpad]. In order to enable it, set the config options below and run\nDocker Compose with the additional config file `etherpad.yml`.\n\nHere are the required options:\n\nVariable | Description | Example\n--- | --- | ---\n`ETHERPAD_URL_BASE` | Set etherpad-lite URL | http://etherpad.meet.jitsi:9001\n\n### Transcription configuration\n\nIf you want to enable the Transcribing function, these options are required:\n\nVariable | Description | Example\n--- | --- | ---\n`ENABLE_TRANSCRIPTIONS` | Enable Jigasi transcription in a conference | 1\n`GC_PROJECT_ID` | `project_id` from Google Cloud Credentials\n`GC_PRIVATE_KEY_ID` | `private_key_id` from Google Cloud Credentials\n`GC_PRIVATE_KEY` | `private_key` from Google Cloud Credentials\n`GC_CLIENT_EMAIL` | `client_email` from Google Cloud Credentials\n`GC_CLIENT_ID` | `client_id` from Google Cloud Credentials\n`GC_CLIENT_CERT_URL` | `client_x509_cert_url` from Google Cloud Credentials\n\nFor setting the Google Cloud Credentials please read https://cloud.google.com/text-to-speech/docs/quickstart-protocol section \"Before you begin\" paragraph 1 to 5.\n\n### Advanced configuration\n\nThese configuration options are already set and generally don't need to be changed.\n\nVariable | Description | Default value\n--- | --- | ---\n`XMPP_DOMAIN` | Internal XMPP domain | meet.jitsi\n`XMPP_AUTH_DOMAIN` | Internal XMPP domain for authenticated services | auth.meet.jitsi\n`XMPP_SERVER` | Internal XMPP server name xmpp.meet.jitsi | xmpp.meet.jitsi\n`XMPP_BOSH_URL_BASE` | Internal XMPP server URL for BOSH module | http://xmpp.meet.jitsi:5280\n`XMPP_MUC_DOMAIN` | XMPP domain for the MUC | muc.meet.jitsi\n`XMPP_INTERNAL_MUC_DOMAIN` | XMPP domain for the internal MUC | internal-muc.meet.jitsi\n`XMPP_GUEST_DOMAIN` | XMPP domain for unauthenticated users | guest.meet.jitsi\n`XMPP_RECORDER_DOMAIN` | Domain for the jibri recorder | recorder.meet.jitsi\n`XMPP_MODULES` | Custom Prosody modules for XMPP_DOMAIN (comma separated) | info,alert\n`XMPP_MUC_MODULES` | Custom Prosody modules for MUC component (comma separated) | info,alert\n`XMPP_INTERNAL_MUC_MODULES` | Custom Prosody modules for internal MUC component (comma separated) | info,alert\n`GLOBAL_MODULES` | Custom prosody modules to load in global configuration (comma separated) | statistics,alert\n`GLOBAL_CONFIG` | Custom configuration string with escaped newlines | foo = bar;\\nkey = val;\n`JICOFO_COMPONENT_SECRET` | XMPP component password for Jicofo | s3cr37\n`JICOFO_AUTH_USER` | XMPP user for Jicofo client connections | focus\n`JICOFO_AUTH_PASSWORD` | XMPP password for Jicofo client connections | passw0rd\n`JVB_AUTH_USER` | XMPP user for JVB MUC client connections | jvb\n`JVB_AUTH_PASSWORD` | XMPP password for JVB MUC client connections | passw0rd\n`JVB_STUN_SERVERS` | STUN servers used to discover the server's public IP | stun.l.google.com:19302, stun1.l.google.com:19302, stun2.l.google.com:19302\n`JVB_PORT` | UDP port for media used by Jitsi Videobridge | 10000\n`JVB_TCP_HARVESTER_DISABLED` | Disable the additional harvester which allows video over TCP (rather than just UDP) | true\n`JVB_TCP_PORT` | TCP port for media used by Jitsi Videobridge when the TCP Harvester is enabled | 4443\n`JVB_BREWERY_MUC` | MUC name for the JVB pool | jvbbrewery\n`JVB_ENABLE_APIS` | Comma separated list of JVB APIs to enable | none\n`JIGASI_XMPP_USER` | XMPP user for Jigasi MUC client connections | jigasi\n`JIGASI_XMPP_PASSWORD` | XMPP password for Jigasi MUC client connections | passw0rd\n`JIGASI_BREWERY_MUC` | MUC name for the Jigasi pool | jigasibrewery\n`JIGASI_PORT_MIN` | Minimum port for media used by Jigasi | 20000\n`JIGASI_PORT_MAX` | Maximum port for media used by Jigasi | 20050\n`JIGASI_ENABLE_SDES_SRTP` | Enable SDES srtp | 1\n`JIGASI_SIP_KEEP_ALIVE_METHOD` | Keepalive method | OPTIONS\n`JIGASI_HEALTH_CHECK_SIP_URI` | Health-check extension. Jigasi will call it for health check | keepalive\n`JIGASI_HEALTH_CHECK_INTERVAL` | Interval of health check in milliseconds | 300000\n`JIGASI_TRANSCRIBER_RECORD_AUDIO` | Jigasi will record audio when transcriber is on | true\n`JIGASI_TRANSCRIBER_SEND_TXT` | Jigasi will send a transcribed text to the chat when transcriber is on | true\n`JIGASI_TRANSCRIBER_ADVERTISE_URL` | Jigasi will post an URL to the chat with transcription file | true\n`DISABLE_HTTPS` | Handle TLS connections outside of this setup | 1\n`ENABLE_HTTP_REDIRECT` | Redirect HTTP traffic to HTTPS (necessary for Let's Encrypt) | 1\n`LOG_LEVEL` | Controls which logs are output from prosody and associated modules | info\n\n### Running behind NAT or on a LAN environment\n\nIf running in a LAN environment (as well as on the public Internet, via NAT) is a requirement,\nthe ``DOCKER_HOST_ADDRESS`` should be set. This way, the Videobridge will advertise the IP address\nof the host running Docker instead of the internal IP address that Docker assigned it, thus making [ICE]\nsucceed. If your users are coming in over the Internet (and not over LAN), this will likely be your public IP address. If this is not set up correctly, calls will crash when more than two users join a meeting.\n\nThe public IP address is discovered via [STUN]. STUN servers can be specified with the ``JVB_STUN_SERVERS``\noption.\n\n## Build Instructions\n\nBuilding your images allows you to edit the configuration files of each image individually, providing more customization for your deployment.\n\nThe docker images can be built by running the `make` command in the main repository folder. If you need to overwrite existing images from the remote source, use `FORCE_REBUILD=1 make`.\n\nIf you are on the unstable branch, build the images with `FORCE_REBUILD=1 JITSI_RELEASE=unstable make`.\n\nYou are now able to run `docker-compose up` as usual.\n\n## TODO\n\n* Support container replicas (where applicable).\n* TURN server.\n\n[Jitsi]: https://jitsi.org/\n[Jitsi Meet]: https://jitsi.org/jitsi-meet/\n[Docker]: https://www.docker.com\n[Docker Compose]: https://docs.docker.com/compose/\n[Swarm mode]: https://docs.docker.com/engine/swarm/\n[S6 Overlay]: https://github.com/just-containers/s6-overlay\n[Jitsi repositories]: https://jitsi.org/downloads/\n[Prosody]: https://prosody.im/\n[Jicofo]: https://github.com/jitsi/jicofo\n[Jitsi Videobridge]: https://github.com/jitsi/jitsi-videobridge\n[Jigasi]: https://github.com/jitsi/jigasi\n[ICE]: https://en.wikipedia.org/wiki/Interactive_Connectivity_Establishment\n[STUN]: https://en.wikipedia.org/wiki/STUN\n[jwt.io]: https://jwt.io/#debugger-io\n[Etherpad]: https://github.com/ether/etherpad-lite\n[Jibri]: https://github.com/jitsi/jibri\n"
            }
          },
          {
            "name": "jitsi-meet",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Jitsi Meet - Secure, Simple and Scalable Video Conferences that you use as a standalone app or embed in your web application.",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "Makefile"
                },
                {
                  "name": "JavaScript"
                },
                {
                  "name": "CSS"
                },
                {
                  "name": "HTML"
                },
                {
                  "name": "Lua"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/jitsi-meet",
            "primaryLanguage": {
              "name": "JavaScript"
            },
            "object": {
              "text": "# Jitsi Meet - Secure, Simple and Scalable Video Conferences\n\nJitsi Meet is an open-source (Apache) WebRTC JavaScript application that uses [Jitsi Videobridge](https://jitsi.org/videobridge) to provide high quality, [secure](#security) and scalable video conferences. Jitsi Meet in action can be seen at [here at the session #482 of the VoIP Users Conference](http://youtu.be/7vFUVClsNh0).\n\nThe Jitsi Meet client runs in your browser, without installing anything else on your computer. You can try it out at https://meet.jit.si .\n\nJitsi Meet allows very efficient collaboration. Users can stream their desktop or only some windows. It also supports shared document editing with Etherpad.\n\n## Installation\n\nOn the client side, no installation is necessary. You just point your browser to the URL of your deployment. This section is about installing a Jitsi Meet suite on your server and hosting your own conferencing service.\n\nInstalling Jitsi Meet is a simple experience. For Debian-based system, following the [quick-install](https://github.com/jitsi/jitsi-meet/blob/master/doc/quick-install.md) document, which uses the package system. You can also see a demonstration of the process in [this tutorial video](https://jitsi.org/tutorial).\n\nFor other systems, or if you wish to install all components manually, see the [detailed manual installation instructions](https://github.com/jitsi/jitsi-meet/blob/master/doc/manual-install.md).\n\n## Download\n\n| Latest stable release | [![release](https://img.shields.io/badge/release-latest-green.svg)](https://github.com/jitsi/jitsi-meet/releases/latest) |\n|---|---|\n\nYou can download Debian/Ubuntu binaries:\n* [stable](https://download.jitsi.org/stable/) ([instructions](https://jitsi.org/downloads/ubuntu-debian-installations-instructions/))\n* [testing](https://download.jitsi.org/testing/) ([instructions](https://jitsi.org/downloads/ubuntu-debian-installations-instructions-for-testing/))\n* [nightly](https://download.jitsi.org/unstable/) ([instructions](https://jitsi.org/downloads/ubuntu-debian-installations-instructions-nightly/))\n\nYou can download source archives (produced by ```make source-package```):\n* [source builds](https://download.jitsi.org/jitsi-meet/src/)\n\n### Mobile apps\n\n* [Android](https://play.google.com/store/apps/details?id=org.jitsi.meet)\n\n[<img src=\"resources/img/google-play-badge.png\" height=\"50\">](https://play.google.com/store/apps/details?id=org.jitsi.meet)\n\n* [Android (F-Droid)](https://f-droid.org/en/packages/org.jitsi.meet/)\n\n[<img src=\"resources/img/f-droid-badge.png\" height=\"50\">](https://f-droid.org/en/packages/org.jitsi.meet/)\n\n* [iOS](https://itunes.apple.com/us/app/jitsi-meet/id1165103905)\n\n[<img src=\"resources/img/appstore-badge.png\" height=\"50\">](https://itunes.apple.com/us/app/jitsi-meet/id1165103905)\n\nYou can also sign up for our open beta testing here:\n\n* [Android](https://play.google.com/apps/testing/org.jitsi.meet)\n* [iOS](https://testflight.apple.com/join/isy6ja7S)\n\n## Development\n\nFor web development see [here](doc/development.md), and for mobile see [here](doc/mobile.md).\n\n## Contributing\n\nIf you are looking to contribute to Jitsi Meet, first of all, thank you! Please\nsee our [guidelines for contributing](CONTRIBUTING.md).\n\n## Embedding in external applications\n\nJitsi Meet provides a very flexible way of embedding in external applications by using the [Jitsi Meet API](doc/api.md).\n\n## Security\n\nWebRTC does not (yet) provide a way of conducting multi-party conversations with end-to-end encryption. \nUnless you consistently compare DTLS fingerprints with your peers vocally, the same goes for one-to-one calls.\nAs a result, your stream is encrypted on the network but decrypted on the machine that hosts the bridge when using Jitsi Meet.\n\nThe Jitsi Meet architecture allows you to deploy your own version, including\nall server components. In that case, your security guarantees will be roughly\nequivalent to a direct one-to-one WebRTC call. This is the uniqueness of\nJitsi Meet in terms of security.\n\nThe [meet.jit.si](https://meet.jit.si) service is maintained by the Jitsi team\nat [8x8](https://8x8.com).\n\n## Security issues\n\nWe take security very seriously and develop all Jitsi projects to be secure and safe.\n\nIf you find (or simply suspect) a security issue in any of the Jitsi projects, please send us an email to security@jitsi.org.\n\n**We encourage responsible disclosure for the sake of our users, so please reach out before posting in a public space.**\n\n## Acknowledgements\n\nJitsi Meet started out as a sample conferencing application using Jitsi Videobridge. It was originally developed by ESTOS' developer Philipp Hancke who then contributed it to the community where development continues with joint forces!\n"
            }
          },
          {
            "name": "containerise",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Firefox extension to automatically open websites in a container",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "JavaScript"
                },
                {
                  "name": "HTML"
                },
                {
                  "name": "CSS"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/containerise",
            "primaryLanguage": {
              "name": "JavaScript"
            },
            "object": {
              "text": "# <img src=\"https://raw.githubusercontent.com/kintesh/containerise/master/static/icons/icon.png\" alt=\"Drawing\" width=\"42\" align=\"top\"/> containerise [![Build Status](https://travis-ci.org/kintesh/containerise.svg?branch=master)](https://travis-ci.org/kintesh/containerise)\n\nFirefox extension to automatically open websites in a container\n\n|![](https://raw.githubusercontent.com/kintesh/containerise/master/static/screenshots/1.png)  |  ![](https://raw.githubusercontent.com/kintesh/containerise/master/static/screenshots/2.png)  |  ![](https://raw.githubusercontent.com/kintesh/containerise/master/static/screenshots/3.png)  |  ![](https://raw.githubusercontent.com/kintesh/containerise/master/static/screenshots/4.png)|\n| --- | --- | --- | --- |\n|Select your container and add a domain to always open all visits in the chosen container. | Add many domains as you wish. | Special `No Container` option to break out of a container. | Simple CSV based mapping of a domain to a container by name for easy backup and bulk editing. |\n\n\n# Installation\nInstall the latest release for Firefox from [AMO](https://addons.mozilla.org/en-US/firefox/addon/containerise/)\n\n\n\n# Usage\n\n## Basic mapping\n\n`amazon.co.uk, Shopping` will open all amazon.co.uk (not subdomains) links in Shopping container.\n\n## Glob\n`!*.amazon.co.uk, Shopping`  will be treated as `*.amazon.co.uk` glob pattern. (suitable to subdomains)\n\n## Regex\n\n`@.+\\.amazon\\.co\\.uk$, Shopping` will be treat as `.+\\.amazon\\.co\\.uk$` regex. (suitable to subdomains and complex paths)\n\n\n\n# Development\n\n## Available Scripts\nIn the project directory, you can run:\n\n#### `npm ci`\nInstalls required dependencies. \n\n#### `npm run webpack`\nStarts webpack with `--watch` option and outputs to `./build` directory.\n \n#### `npm run build`\nBuilds the extension for production use.<br>\n\n#### `npm run test`\nRuns test specs using jest.\nUse `test:watch` to watch for edits and re-run the tests.\n\n#### `npm run lint`\nLint using eslint.\n\n#### `npm run web-ext`\nRuns web-ext process to debug the extension on Firefox. See [web-ext docs](https://github.com/mozilla/web-ext) <br/>\nTo live reload the extension, start this process in a new tab after starting `npm run webpack` process.\n"
            }
          },
          {
            "name": "zoom-e2e-whitepaper",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "End-to-End Encryption for Zoom Meetings",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": []
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/zoom-e2e-whitepaper",
            "primaryLanguage": null,
            "object": {
              "text": "# Zoom End-to-End Encryption Whitepaper\nThis is the home of the whitepaper documenting Zoom's planned end-to-end encryption system. The latest released PDF will always be [available here](https://github.com/zoom/zoom-e2e-whitepaper/blob/master/zoom_e2e.pdf). This repository will be updated as we implement and iterate our cryptographic design.\n\nThe public comment period for the initial design will be open from *22 May 2020* through *5 June 2020*. We ask that any recommendations or comments be posted under [Issues](https://github.com/zoom/zoom-e2e-whitepaper/issues).\n"
            }
          },
          {
            "name": "libwacom",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "libwacom is a tablet description library",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "Shell"
                },
                {
                  "name": "C"
                },
                {
                  "name": "Makefile"
                },
                {
                  "name": "M4"
                },
                {
                  "name": "Python"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/libwacom",
            "primaryLanguage": {
              "name": "C"
            },
            "object": {
              "text": "# Overview\nlibwacom is a library to identify Wacom tablets and their model-specific features. It provides easy access to information such as \"is this a built-in on-screen tablet\", \"what is the size of this model\", etc.\n\nThis functionality is currently used by e.g. GNOME to map built-in tablets to the correct screen.\n\n# Adding tablet descriptions to libwacom\nA common indicator that a device is not supported by libwacom is that it works normally in a GNOME session, but the device is not correctly mapped to the screen.\n\nUse the libwacom-list-local-devices tool to list all local devices recognized by libwacom. If your device is not listed, but it is available as an event device in the kernel (see /proc/bus/input/devices) and in the X session (see xinput list), the device is missing from libwacom's database.\n\n## To add support for a new tablet to libwacom:\n1. Create a new tablet definition file. See data/wacom.example in the source for a guideline on how to add a new tablet. For an installed version of libwacom, see the existing data files (e.g. /usr/share/libwacom/cintiq-13hd.tablet)\n2. A new tablet description is enabled by adding and installing a new file with a .tablet suffix. Once installed the tablet is part of libwacom's database, no rebuild is neccessary\n3. The tablet is then available through libwacom-list-local-devices\n\n**The new device should also be added to the udev rule to ensure all required properties are set**\n* ***When building from source*** generate an update ruleset with tools/generate-udev-rules after adding the tablet descripton to\n* ***When updating an installed version of libwacom***, add it manually to the existing ruleset (/lib/udev/rules.d/65-libwacom.rules)\n"
            }
          },
          {
            "name": "bitcoin-maintainer-tools",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "External repository for Bitcoin Core related maintenance tools",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "Python"
                },
                {
                  "name": "Shell"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/bitcoin-maintainer-tools",
            "primaryLanguage": {
              "name": "Python"
            },
            "object": {
              "text": "External repository for Bitcoin Core related maintenance tools.\n\ngithub-merge\n------------\n\nA small script to automate merging pull-requests securely and sign them with GPG.\n\nFor example:\n\n```bash\n./github-merge.py 1234\n```\n\n(in any git repository) will help you merge pull request #1234 for the configured repository.\n\nWhat it does:\n* Fetch master and the pull request.\n* Locally construct a merge commit.\n* Show the diff that merge results in.\n* Ask you to verify the resulting source tree (so you can do a make check or whatever).\n* Ask you whether to GPG sign the merge commit.\n* Ask you whether to push the result upstream.\n\nThis means that there are no potential race conditions (where a\npull request gets updated while you're reviewing it, but before you click\nmerge), and when using GPG signatures, that even a compromised GitHub\ncouldn't mess with the sources.\n\nSetup\n---------\nConfiguring the github-merge tool for the bitcoin repository is done in the following way:\n\n    git config githubmerge.repository bitcoin/bitcoin\n    git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n    git config --global user.signingkey mykeyid\n\nIf you want to use HTTPS instead of SSH for accessing GitHub, you need set the host additionally:\n\n    git config githubmerge.host \"https://github.com\"  (default is \"git@github.com\", which implies SSH)\n\nAuthentication (optional)\n--------------------------\n\nThe API request limit for unauthenticated requests is quite low, but the\nlimit for authenticated requests is much higher. If you start running\ninto rate limiting errors it can be useful to set an authentication token\nso that the script can authenticate requests.\n\n- First, go to [Personal access tokens](https://github.com/settings/tokens).\n- Click 'Generate new token'.\n- Fill in an arbitrary token description. No further privileges are needed.\n- Click the `Generate token` button at the bottom of the form.\n- Copy the generated token (should be a hexadecimal string)\n\nThen do:\n\n    git config --global user.ghtoken \"pasted token\"\n\nCreate and verify timestamps of merge commits\n---------------------------------------------\nTo create or verify timestamps on the merge commits, install the OpenTimestamps\nclient via `pip3 install opentimestamps-client`. Then, download the gpg wrapper\n`ots-git-gpg-wrapper.sh` and set it as git's `gpg.program`. See\n[the ots git integration documentation](https://github.com/opentimestamps/opentimestamps-client/blob/master/doc/git-integration.md#usage)\nfor further details.\n\nupdate-translations\n-------------------\n\nRun this script from the root of a repository to update all translations from Transifex.\nIt will do the following automatically:\n\n- Fetch all translations\n- Post-process them into valid and committable format\n- Add missing translations to the build system (TODO)\n\nclang-format\n------------\n\nA script to format cpp source code according to the .clang-format file in the bitcoin repo.\nThis should only be applied to new files or files which are currently not actively developed on.\nAlso, git subtrees are not subject to formatting.\n\nNote: The script is currently untested and unmaintained, but kept for archival reasons, in\ncase it is planned to be used some day.\n\nbuild-for-compare\n--------------------\n\nBuild for binary comparison.\n\nSee `build-for-compare.py --help` for more information.\n\nBuilds from current directory, which is assumed to be a git clone of the bitcoin repository.\n\n**DO NOT RUN this with the nocopy=1 flag set on working tree if you have any local additions, it will nuke all\nnon-repository files, multiple times over. By leaving nocopy off (default) the git tree is copied to a temporary\ndirectory and all operations are performed there.**\n\nExample:\n```bash\ngit clone https://github.com/bitcoin/bitcoin.git bitcoin-compare\ncd bitcoin-compare\n../bitcoin-maintainer-tools/build-for-compare.py 4731cab 2f71490\nsha256sum /tmp/compare/bitcoind.*.stripped\ngit diff -W --word-diff /tmp/compare/4731cab /tmp/compare/2f71490\n```\n\nbackport\n--------\n\nScript to backport pull requests in order of merge, to minimize number of conflicts.\nPull ids are listed in `to_backport.txt` or given on the command line.\n\nRequires `pip3 install gitpython` or similar.\n\nunittest-statistics\n--------------------------\n\n`unittest-statistics.py` can be used to print a table of the slowest 20 unit tests.\n\nUsage:\n```bash\nunittest-statistics.py </path/to/test_bitcoin> [<subtest>]\n```\n\nFor example:\n```bash\nunittest-statistics.py src/test/test_bitcoin wallet_tests\n```\n\ntreehash512\n--------------\n\nThis script will show the SHA512 tree has for a certain commit, or HEAD\nby default.\n\nUsage:\n\n```bash\ntreehash512.py [<commithash>]\n```\n\nThis should match the Tree-SHA512 commit metadata field added by\ngithub-merge.\n\nsignoff\n----------\n\nThis is an utility to manually add a treehash to the HEAD commit and then\ngpg-sign it. This is useful when there is the need to manually add a commit.\n\nUsage:\n\n```bash\nsignoff.py\n```\n(no command line arguments)\n\nWhen there is already a treehash on the HEAD commit, it is compared against\nwhat is computed. If this matches, it continues. If the treehash mismatches an\nerror is thrown. If there is no treehash it adds the \"Tree-SHA512:\" header with\nthe computed hash to the commit message.\n\nAfter making sure the treehash is correct it verifies whether the commit is\nsigned. If so it just displays the signature, if not, it is signed.\n\nsubtree updates\n---------------\n\nBitcoin Core comes with several subtrees (c.f. https://github.com/bitcoin/bitcoin/tree/master/test/lint#git-subtree-checksh)\nTo update the subtree, make sure to fetch the remote of the subtree.\nThen a simple call should pull in and squash the changes:\n\n```sh\ngit subtree pull --prefix src/${prefix} ${remote_repo} ${ref} --squash\n```\n\nFor setting up a subtree, refer to `git help subtree`.\n\ncheck-dnsseeds\n---------------\n\nSanity-check the DNS seeds used by Bitcoin Core.\n\nUsage:\n\n```bash\ncheck-dnsseeds.py\n```\n\nExample output:\n\n```bash\n* Mainnet\nOK   seed.bitcoin.sipa.be (40 results)\nOK   dnsseed.bluematt.me (33 results)\nFAIL dnsseed.bitcoin.dashjr.org\nOK   seed.bitcoinstats.com (50 results)\nOK   seed.bitcoin.jonasschnelli.ch (38 results)\nOK   seed.btc.petertodd.org (23 results)\nOK   seed.bitcoin.sprovoost.nl (35 results)\nOK   dnsseed.emzy.de (41 results)\n\n* Testnet\nOK   testnet-seed.bitcoin.jonasschnelli.ch (36 results)\nOK   seed.tbtc.petertodd.org (38 results)\nOK   testnet-seed.bluematt.me (5 results)\n```\n\nfastcopy-chaindata\n-------------------\n\nFast local copy of Bitcoin Core blockchain state.\n\n```bash\nfastcopy-chaindata.py ~/.bitcoin /path/to/temp/datadir\n```\n\nThis utility hardlinks all but the last block data file (rev and blk),\nand hardlinks all .ldb files to the destination. The last data files as well\nas the other leveldb data files (such as the log) are copied.\n\nThis relies on the fact that block files (except the last) and ldb files\nare read-only once they are written.\n\nWarning: Hardlinking only works within a filesystem, and may not work for all\nfilesystems.\n\ntransifex-migrate-resource\n--------------------------\n\nCopy a transifex resource to another.\n\nRun the script providing the slug of the project and the slug of the old and new resource.\nThe new resource should already have been created, but be otherwise empty. It should\nbe based on the exact same source translation.\n \nExample:\nOld resource slug: 'old'\nNew resource slug: 'new'\n \npython transifex-migrate-resource.py project old new\n \nAfter running the command you will be asked for your Transifex username and password.\n\nlist-pulls\n----------\n\nScript to parse git commit list, extract github issues to create a changelog in\ntext and json format.\n\nRun this in the root directory of the repository.\n\nThis requires an up-to-date checkout of https://github.com/zw/bitcoin-gh-meta.git\nin the parent directory, or environment variable `GHMETA`.\n\nIt takes a range of commits and a .json file of PRs to exclude, for\nexample if these are already backported in a minor release. This can be the pulls.json\ngenerated from a previous release.\n\nExample usage:\n\n    ../maintainer-tools/list-pulls.py v0.18.0 0.19 relnot/pulls-exclude.json > relnot/pulls.md\n\nThe output of this script is a first draft based on rough heuristics, and\nlikely needs to be extensively manually edited before ending up in the release\nnotes.\n\nmake-tag\n--------\n\nMake a new release tag, performing a few checks.\n\nUsage: `make-tag.py <tag>`.\n"
            }
          },
          {
            "name": "compiler-explorer",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Run compilers interactively from your web browser and interact with the assembly",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "Makefile"
                },
                {
                  "name": "JavaScript"
                },
                {
                  "name": "CSS"
                },
                {
                  "name": "HTML"
                },
                {
                  "name": "Shell"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/compiler-explorer",
            "primaryLanguage": {
              "name": "Assembly"
            },
            "object": {
              "text": "[![Build Status](https://travis-ci.org/compiler-explorer/compiler-explorer.svg?branch=master)](https://travis-ci.org/github/compiler-explorer/compiler-explorer)\n[![codecov](https://codecov.io/gh/mattgodbolt/compiler-explorer/branch/master/graph/badge.svg)](https://codecov.io/gh/mattgodbolt/compiler-explorer)\n\n![Compiler Explorer](docs/logo.svg)\n\nCompiler Explorer\n------------\n\n**Compiler Explorer** is an interactive compiler. The left-hand pane shows\n editable C, C++, Rust, Go, D, Haskell, Swift, Pascal (and some more!) code.\nThe right, the assembly output of having compiled the code with a given\n compiler and settings. Multiple compilers are supported, and the UI layout\n is configurable (thanks to [GoldenLayout](https://www.golden-layout.com/)).\nThere is also an ispc compiler _[?](https://ispc.github.io/)_ for a C variant\n with extensions for SPMD.\n\nTry out at [godbolt.org](https://godbolt.org)\n\nYou can support [this project on Patreon](https://patreon.com/mattgodbolt).\n\n**Compiler Explorer** follows a [Code of Conduct](CODE_OF_CONDUCT.md) which\n aims to foster an open and welcoming environment.\n\n**Compiler Explorer** was started in 2012 to serve my needs at [my previous employer](https://drw.com) to show how\n C++ constructs translated to assembly code. It started out as a `tmux` session with `vi` running in one\n pane and `watch gcc -S foo.cc -o -` running in the other.\nSince then, it has become a public website serving around [210,000 compilations per day](https://www.stathat.com/cards/Tk5csAWI0O7x).\n\n##### FAQ\n\nThere is now a FAQ section [in the repository wiki](https://github.com/compiler-explorer/compiler-explorer/wiki/FAQ).\n If your question is not present, please contact us as described below so we can help you.\n If you find that the FAQ is lacking some important point, please free to contribute to it and/or ask us to clarify it.\n\nThere are a number of videos that showcase some of the features of Compiler Explorer:\n A presentation for CppCon 2019 about the project https://www.youtube.com/watch?v=kIoZDUd5DKw\n and an older 2 part series of videos which go into a bit more detail into the more obscure features\n https://www.youtube.com/watch?v=4_HL3PH4wDg\n\n##### Contact us\n\nFor general discussion, please join the\n [cpplang](https://cpplang.now.sh/) slack channel `#compiler_explorer` or\n [the public mailing list](https://groups.google.com/forum/#!forum/compiler-explorer-discussion)\n\nIf you are interested in developing, or want to see the discussions between\n existing developers, feel free to join the [cpplang](https://cpplang.now.sh/)\n slack channel `#compiler_explorer-development` or\n [the development mailing list](https://groups.google.com/forum/#!forum/compiler-explorer-development)\n \nFeel free to raise an issue on\n [github](https://github.com/compiler-explorer/compiler-explorer/issues) or\n [email Matt directly](mailto:matt@godbolt.org) for more help.\n\n### Developing\n\n**Compiler Explorer** is written in [Node.js](https://nodejs.org/).\n\nAssuming you have a compatible version of `node` installed, simply running\n `make` ought to get you up and running with an Explorer running on port 10240\n on your local machine: http://localhost:10240/.\n Currently **Compiler Explorer**\n [requires the latest LTS](CONTRIBUTING.md#node-version) `node` version\n (_v12_) installed, either on the path or at `NODE_DIR`\n (an environment variable or `make` parameter).\n\nRunning with `make EXTRA_ARGS='--language LANG'` will allow you to load\n `LANG` exclusively, where `LANG` is one for the language ids/aliases defined\n in `lib/languages.js`. The `Makefile` will automatically install all the\n third party libraries needed to run; using `npm` to install server-side and\n client side components.\n\nSome languages need extra tools to demangle them, e.g. `rust`, `d`, or `haskell`.\n Such tools are kept separately in the\n [tools repo](https://github.com/compiler-explorer/compiler-explorer-tools).\n\nThe config system leaves a lot to be desired.\n [Work has been done](https://github.com/rabsrincon/ccs-js) on porting\n [CCS](https://github.com/hellige/ccs-cpp) to Javascript and then something\n more rational can be used.\n\n\nA [Road map](Roadmap.md) is available which gives a little insight into\n the future plans for **Compiler Explorer**.\n\n### Running a local instance\n\nIf you want to point it at your own GCC or similar binaries, either edit the\n `etc/config/LANG.defaults.properties` or else make a new one with\n the name `LANG.local.properties`, substituting `LANG` as needed.\n `*.local.properties` files have the highest priority when loading properties.\n\nWhen running in a corporate setting the URL shortening service can be replaced\n by an internal one if the default storage driver isn't appropriate for your\n environment. To do this, add a new module in `lib/shortener-myservice.js` and\n set the `urlShortenService` variable in configuration. This module should\n export a single function, see the [tinyurl module](lib/shortener-tinyurl.js)\n for an example.\n\n### RESTful API\n\nThere's a simple restful API that can be used to do compiles to asm and to\n list compilers. \n\nYou can find the API documentation [here](docs/API.md).\n\n### Credits\n\n**Compiler Explorer** is maintained by the awesome people listed in the\n [AUTHORS](AUTHORS.md) file.\n\nWe would like to thank the contributors listed in the\n [CONTRIBUTORS](CONTRIBUTORS.md) file, who have helped shape **Compiler Explorer**.\n\n\nWe would also like to specially thank these people for their contributions to\n **Compiler Explorer**:\n- [Gabriel Devillers](https://github.com/voxelf)\n (_while working for [Kalray](http://www.kalrayinc.com/)_)\n- [Johan Engelen](https://github.com/JohanEngelen)\n- [Joshua Sheard](https://github.com/jsheard)\n- [Marc Poulhi√®s](https://github.com/dkm)\n- [Andrew Pardoe](https://github.com/AndrewPardoe)\n\nWe would like to thank [JetBrains](https://www.jetbrains.com/) for their support\n and for donating licenses to their excellent products to develop **Compiler Explorer**.\n\n![JetBrains](docs/jetbrains.svg)\n"
            }
          },
          {
            "name": "Taktische-Zeichen",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Taktische Zeichen f√ºr Hilfsorganisationen als Vektorgrafiken",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "JavaScript"
                },
                {
                  "name": "Makefile"
                },
                {
                  "name": "HTML"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/Taktische-Zeichen",
            "primaryLanguage": {
              "name": "HTML"
            },
            "object": {
              "text": "[![Build Status](https://travis-ci.org/jonas-koeritz/Taktische-Zeichen.svg?branch=master)](https://travis-ci.org/jonas-koeritz/Taktische-Zeichen)\n\n# Taktische-Zeichen\nTaktische Zeichen f√ºr Hilfsorganisationen als Vektorgrafiken.\n\n![Zugf√ºhrer - THW](https://rawgit.com/jonas-koeritz/Taktische-Zeichen/master/examples/Zugf√ºhrer.svg)\n![L√∂schzug](https://rawgit.com/jonas-koeritz/Taktische-Zeichen/master/examples/L√∂schzug.svg)\n![Leitstelle](https://rawgit.com/jonas-koeritz/Taktische-Zeichen/master/examples/Leitstelle.svg)\n![Gerettete Person](https://rawgit.com/jonas-koeritz/Taktische-Zeichen/master/examples/Gerettete_Person.svg)\n![Gefahr durch Explosivstoffe](https://rawgit.com/jonas-koeritz/Taktische-Zeichen/master/examples/Gefahr_durch_Explosivstoffe.svg)\n![Zugtrupp - THW](https://rawgit.com/jonas-koeritz/Taktische-Zeichen/master/examples/Zugtrupp.svg)\n\n## Fehlende Zeichen\nFehlende zeichen k√∂nnen als [issue](https://github.com/jonas-koeritz/Taktische-Zeichen/issues) eingereicht werden, Ich erstelle die Symbole dann.\n\n## Aufbau der Symbole\nDie .SVG Dateien haben die Ma√üe 256x256 Einheiten, Alle Zeichen m√ºssen in diesem Bereich dargestellt werden und mittig ausgerichtet sein.\nZeichen f√ºr Einheiten/Fahrzeuge/Personen etc. m√ºssen untereinander Deckungsgleich sein.\nUm die SVG-Dateien zu erzeugen werden Jinja2 Templates verwendet. Das beigef√ºgte Makefile kann verwendet werden um alle SVG-Dateien zu erzeugen:\n\n```\nmake svg\n```\n\n## PNG-Dateien\nDie PNG-Dateien stehen in den Ma√üen 256x256, 512x512 und 1024x1024 zur Verf√ºgung. Die fertigen PNG Dateien k√∂nnen unter [releases](https://github.com/jonas-koeritz/Taktische-Zeichen/releases) heruntergeladen werden.\nDie Dateien k√∂nnen auch mit dem beiliegenenden Makefile erstellt werden:\n\n```\nmake png\n```\n\n## Vollst√§ndiger Build\nAlle SVG- und PNG-Dateien k√∂nnen mit dem beiliegenden Makefile in einem Schritt erzeugt werden:\n\n```\nmake all\n```\n\nEin Release-Zip Archiv kann ebenfalls erstellt werden:\n\n```\nmake release\n```\n\n## Voraussetzungen\nAls Voraussetzung f√ºr den Buildvorgang werden die Programme: [j2cli](https://github.com/kolypto/j2cli), [PhantomJS](http://phantomjs.org/), und [optipng](http://optipng.sourceforge.net/) im Systempfad vorausgesetzt. Zum erstellen der SVG-Dateien ist nur j2cli erforderlich.\n\n## Lizenz\nDie Zeichen k√∂nnen im Rahmen der Apache License 2.0 verwendet werden. Die Datei COPYRIGHT.md darf nur durch Angaben √ºber eigene √Ñnderungen erweitert werden.\nDie Datei NOTICE muss in jeder Kopie unver√§ndert beibehalten werden.\nDie Kommerzielle Nutzung ist gestattet, sofern die Copyright Hinweise f√ºr den Benutzer klar ersichtlich sind, d.h. der Vollst√§ndige Inhalt der Datei COPYRIGHT.md muss √ºber die Benutzeroberfl√§che (bei Anwendungen mit grafischer Benutzeroberfl√§che) oder im Programmverzeichnis (f√ºr Anwendungen ohne grafische Benutzeroberfl√§che) f√ºr jeden Benutzer einsehbar sein.\nDer Druck und die Vervielf√§ltigung von Ausdrucken ist ebenfalls gestattet.\n\n## Liste der Projekte die diesen Zeichensatz verwenden\n\n* [draw.io Shapes von Martin B√∂hmer](https://github.com/MartinBoehmer/Taktische-Zeichen-drawio)\n* [Taktische Zeichen Vorlagen Generator von Tristan Lins](https://tristanlins.gitlab.io/taktische-zeichen-vorlagen-generator/)\n\nFehlt dein Projekt auf der Liste? Bitte direkt mit mir Kontakt aufnehmen oder eine √Ñnderung an dieser Datei per Pull-Request einsenden.\n\n## Schriftart\nDie verwendete Schriftart ist \"RobotoSlab-Bold\" lizenziert unter Apache 2.0 Lizenz.\n"
            }
          },
          {
            "name": "osx-images",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": null,
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "Shell"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/osx-images",
            "primaryLanguage": {
              "name": "Shell"
            },
            "object": null
          },
          {
            "name": "spacemacs",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "A community-driven Emacs distribution - The best editor is neither Emacs nor Vim,  it's Emacs *and* Vim!",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "Emacs Lisp"
                },
                {
                  "name": "Makefile"
                },
                {
                  "name": "Python"
                },
                {
                  "name": "Shell"
                },
                {
                  "name": "YASnippet"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/spacemacs",
            "primaryLanguage": {
              "name": "Emacs Lisp"
            },
            "object": {
              "text": "<a name=\"top\"></a>\n<a href=\"http://spacemacs.org\"><img src=\"https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg\" alt=\"Made with Spacemacs\"></a><a href=\"http://www.twitter.com/spacemacs\"><img src=\"http://i.imgur.com/tXSoThF.png\" alt=\"Twitter\" align=\"right\"></a><br>\n- - -\n<p align=\"center\"><img src=\"/doc/img/title2.png\" alt=\"Spacemacs\"/></p>\n<p align=\"center\">\n<b><a href=\"http://spacemacs.org/doc/DOCUMENTATION#orgheadline5\">philosophy</a></b>\n|\n<b><a href=\"http://spacemacs.org/doc/DOCUMENTATION#orgheadline8\">for whom?</a></b>\n|\n<b><a href=\"http://spacemacs.org/doc/DOCUMENTATION#orgheadline7\">screenshots</a></b>\n|\n<b><a href=\"http://spacemacs.org/doc/DOCUMENTATION.html\">documentation</a></b>\n|\n<b><a href=\"CONTRIBUTING.org\">contribute</a></b>\n|\n<b><a href=\"http://spacemacs.org/doc/DOCUMENTATION#achievements\">achievements</a></b>\n|\n<b><a href=\"http://spacemacs.org/doc/FAQ\">FAQ</a></b>\n</p>\n\n- - -\n\n<p align=\"center\">\n<a href=\"https://gitter.im/syl20bnr/spacemacs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"><img src=\"https://badges.gitter.im/Join Chat.svg\" alt=\"Gitter\"></a>\n<a href=\"https://travis-ci.org/syl20bnr/spacemacs\"><img src=\"https://travis-ci.org/syl20bnr/spacemacs.svg\" alt=\"Build Status\"></a>\n<a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=ESFVNPKP4Y742\"><img src=\"https://img.shields.io/badge/Paypal-Donate-blue.svg\" alt=\"Donate\"></a>\n<a href=\"https://shop.spreadshirt.com/spacemacs-shop\"><img src=\"https://img.shields.io/badge/Shop-T--Shirts-blue.svg\" alt=\"Donate\"></a>\n<a href=\"http://www.slant.co/topics/12/~what-are-the-best-programming-text-editors\"><img src=\"https://img.shields.io/badge/Slant-Recommend-ff69b4.svg\" alt=\"Recommend it\"></a>\n</p>\n\n- - -\n\n**Quick Install:**\n\n    git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d\n\n<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again -->\n**Table of Contents**\n\n- [Introduction](#introduction)\n- [Features](#features)\n- [Documentation](#documentation)\n- [Getting Help](#getting-help)\n- [Prerequisites](#prerequisites)\n    - [Emacs](#emacs)\n        - [Linux distros](#linux-distros)\n        - [macOS](#macos)\n        - [Windows](#windows)\n- [Install](#install)\n    - [Default installation](#default-installation)\n    - [Alternate installations](#alternate-installations)\n        - [Modify HOME environment variable](#modify-home-environment-variable)\n        - [Modify spacemacs-start-directory variable](#modify-spacemacs-start-directory-variable)\n    - [Spacemacs logo](#spacemacs-logo)\n- [Update](#update)\n    - [Automatic update (on master branch)](#automatic-update-on-master-branch)\n    - [Manual update (on master branch)](#manual-update-on-master-branch)\n    - [On develop branch](#on-develop-branch)\n    - [Revert to a specific version](#revert-to-a-specific-version)\n- [Quotes](#quotes)\n- [Contributions](#contributions)\n- [Communities](#communities)\n- [License](#license)\n- [Supporting Spacemacs](#supporting-spacemacs)\n\n<!-- markdown-toc end -->\n\n# Introduction\n\nSpacemacs is a new way to experience Emacs -- a sophisticated and\npolished set-up focused on ergonomics, mnemonics and consistency.\n\nJust clone it, launch it, then press the space bar to explore the\ninteractive list of carefully-chosen key bindings. You can also press\nthe home buffer's `[?]` button for some great first key bindings to\ntry.\n\nSpacemacs can be used naturally by both Emacs and Vim users -- you can\neven mix the two editing styles. Switching easily between input styles\nmakes Spacemacs a great tool for pair-programming.\n\nSpacemacs is currently in beta, and contributions are very welcome.\n\n![spacemacs_python](doc/img/spacemacs-python.png)\n\n# Features\n\n- **Great documentation:** access documentation in Emacs with\n<kbd>SPC h SPC</kbd>.\n- **Beautiful GUI:** you'll love the distraction free UI and its functional\nmode-line.\n- **Excellent ergonomics:** all the key bindings are accessible by pressing\nthe <kbd>space bar</kbd> or <kbd>alt-m</kbd>.\n- **Mnemonic key bindings:** commands have mnemonic prefixes like\n<kbd>SPC b</kbd> for all the buffer commands or <kbd>SPC p</kbd> for the\nproject commands.\n- **Batteries included:** discover hundreds of ready-to-use packages nicely\norganised in configuration layers following a set of\n[conventions][CONVENTIONS.org].\n\n# Documentation\n\nComprehensive documentation is available for each layer by pressing\n<kbd>SPC h SPC</kbd>.\n\nYou can also check the [general documentation][DOCUMENTATION.org],\n[quick start guide][QUICK_START.org] and the [FAQ][FAQ.org].\n\n# Getting Help\n\nIf you need help, ask your question in the [Gitter Chat][] and a member of the\ncommunity will help you out.\n\nIf you prefer IRC, connect to the [Gitter Chat IRC server][] and join the\n`#syl20bnr/spacemacs` channel.\n\n# Prerequisites\n\n## Emacs\n\nSpacemacs requires Emacs 24.4 or above. The development version of Emacs (at the\ntime of writing, this is 25.2) is not *officially* supported, but should\nnevertheless be expected to work.\n\nSome modes require third-party tools that you'll have to install via your\nfavorite package manager.\n\n### Linux distros\n\nInstall Emacs from the package manager of your Linux distribution.\n\nYou should install the \"emacs\" package, not the \"xemacs\" package.\nXEmacs is an old fork of Emacs. The X in its name is unrelated to X11.\nBoth Emacs and XEmacs have graphical support.\n\n**Note:** Ubuntu LTS 12.04 and 14.04 repositories have only Emacs 24.3\navailable. You have to [build from source][build_source] Emacs 24.4 or greater,\nas Spacemacs won't work with 24.3. The same may be true for other distributions\nas well.\n\n### macOS\n\nThe recommended way of installing Emacs on macOS is using [homebrew][]:\n\n```sh\n$ brew tap d12frosted/emacs-plus\n$ brew install emacs-plus\n$ brew linkapps emacs-plus\n```\n\n*Note:* these homebrew commands will install GNU Emacs, and link it to your\n`/Applications` directory. You still need to run the `git clone` mentioned at\nthe start of this file. That will populate your `~/.emacs.d` directory, which is\nwhat transforms a regular GNU Emacs into Spacemacs.\n\n*Note:* the proposed `emacs-plus` tap is identical to the `emacs` formulae, it\njust builds GNU Emacs with support of several features by default along with\nproviding Spacemacs icon.\nSee [emacs-plus](https://github.com/d12frosted/homebrew-emacs-plus) for more\ninformation.\n\n*Note*: to have the title bar match your theme background color,\nconsider using instead:\n\n``` sh\n$ brew install emacs-plus --HEAD --with-natural-title-bars\n```\n\n*Note:* after you have completed the [install process](#install) below, it is\nalso recommended to add the [osx layer][] to your [dotfile][]. Install\ninstructions are available in the [osx layer][] documentation.\n\n*Note:* if the powerline separators on the spaceline are a different (less\nsaturated) color than the rest of the line, you can add following snippet to\n`dotspacemacs/user-config` in your `.spacemacs` file.\n\n```elisp\n(setq ns-use-srgb-colorspace nil)\n```\n\nKeep in mind that this is not ideal solution as it affects all colours in Emacs.\nAnother option is to use different powerline separator. For example, `alternate`\nand `bar` diminishes the difference. And using `utf-8` separator makes it go\naway completely without the need to change colour space. In order to change\npowerline separator put following snippet in `dotspacemacs/user-config`.\n\n```eslip\n(setq powerline-default-separator 'utf-8)\n```\n\nFor more information about powerline separators, please refer to appropriate\nsection in [Documentation][DOCUMENTATION.org].\n\n### Windows\n\nYou can download good quality builds from the [emacs-w64 project][emacs-for-windows].\nIt is recommended to install the most recent [stable build][emacs-for-windows-stable].\n\nBe sure to declare a environment variable named `HOME` pointing to your user\ndirectory `C:\\Users\\<username>`. Then you can clone Spacemacs in this directory.\n\nSometimes you'll get the following error when you first start Emacs:\n\n```\nThe directory ~/.emacs.d/server is unsafe\n```\n\nTo fix it change the owner of the directory `~/.emacs.d/server`:\n  - from Properties select the Tab ‚ÄúSecurity‚Äù,\n  - select the button ‚ÄúAdvanced‚Äù,\n  - select the Tab ‚ÄúOwner‚Äù\n  - change the owner to your account name\n\nSource: [Stack Overflow][so-server-unsafe]\n\nFor efficient searches we recommend to install `pt` ([the platinum searcher][]).\n`pt` version 1.7.7 or higher is required.\n\n# Install\n\n## Default installation\n\n1. If you have an existing Emacs configuration, back it up first:\n\n   ```sh\n   cd ~\n   mv .emacs.d .emacs.d.bak\n   mv .emacs .emacs.bak\n   ```\n\n   Don't forget to backup and *remove* `~/.emacs` file otherwise Spacemacs\n   **WILL NOT** load since that file prevents Emacs from loading the proper\n   initialization file.\n\n2. Clone the repository:\n\n   ```sh\n   git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d\n   ```\n\n   `master` is the stable branch and it is _immutable_, **DO NOT** make any\n   modification to it or you will break the update mechanism. If you want to\n   fork Spacemacs safely use the `develop` branch where you handle the update\n   manually.\n\n3. (Optional) Install the [Source Code Pro][] font.\n\n   If you are running in terminal you'll also need to change font settings of\n   your terminal.\n\n4. Launch Emacs. Spacemacs will automatically install the packages it requires.\n   If you get an error regarding package downloads then you may try to disable\n   the HTTPS protocol by starting Emacs with\n\n   ```sh\n   emacs --insecure\n   ```\n\n   Or you can set the `dotspacemacs-elpa-https` to `nil` in your dotfile to\n   remove the need to start Emacs with `--insecure` argument. You may wish to\n   clear out your `.emacs.d/elpa` directory before doing this, so that any\n   corrupted packages you may have downloaded will be re-installed.\n\n5. Restart Emacs to complete the installation.\n\nIf the mode-line turns red then be sure to consult the [FAQ][FAQ.org].\n\n## Alternate installations\n\nIt may be useful to clone Spacemacs outside Emacs dotdirectory `~/.emacs.d` so\nyou can try Spacemacs without replacing completely our own configuration.\nThere is currently two possibilities to support alternative location for\nSpacemacs configuration.\n\n### Modify HOME environment variable\n\nThis solution is ideal to quickly try Spacemacs without compromising your\nexisting configuration.\n\n```sh\nmkdir ~/spacemacs\ngit clone https://github.com/syl20bnr/spacemacs.git ~/spacemacs/.emacs.d\nHOME=~/spacemacs emacs\n```\n\nNote: If you're on Fish shell, you will need to modify the last command to: `env\nHOME=$HOME/spacemacs emacs`\n\n### Modify spacemacs-start-directory variable\n\nThis solution is better suited to \"embed\" Spacemacs into your own configuration.\nSay you cloned Spacemacs in `~/.emacs.d/spacemacs/` then drop these lines in\n`~/.emacs.d/init.el`:\n\n```elisp\n(setq spacemacs-start-directory \"~/.emacs.d/spacemacs/\")\n(load-file (concat spacemacs-start-directory \"init.el\"))\n```\n\n## Spacemacs logo\n\nFor Ubuntu users, follow this guide to\n[change the logo in Unity][cpaulik-unity-icon].\n\nFor Mac users, you need to [download the .icns version of the logo][icon-repository],\nthen [change the logo on Dock][icon-mac-instructions].\n\n# Update\n\nSpacemacs has a built-in notification of a new version when you are on the\n`master` branch. If you are on the `develop` branch then you'll have to\nupdate Spacemacs manually by updating your repository.\n\n## Automatic update (on master branch)\n\nWhen a new version is available a little arrow appears in the mode-line.\n\nIts color depends on the number of versions available since your last update.\nGreen means that your current version is recent, orange and red mean that your\ncurrent version is older.\n\n![powerline_update](doc/img/powerline-update.png)\n\nClick on the arrow to update Spacemacs to the last version.\n\n## Manual update (on master branch)\n\n(Remove the angle brackets when typing the lines below into your shell.)\n\n```sh\ngit fetch\ngit reset --hard <tag version which you are updating to>\n```\n\n## On develop branch\n\n1. Update Emacs packages by clicking (press `RET`) on the `[Update Packages]` link of\nthe starting page.\n\n2. Close Emacs and update the git repository:\n\n   ```sh\n   git pull --rebase\n   ```\n\n3. Restart Emacs to complete the upgrade.\n\n## Revert to a specific version\n\nTo revert to a specific version you just have to checkout the corresponding\nbranch, for instance to revert to the last `0.103`:\n\n   ```sh\n   git checkout origin/release-0.103\n   ```\n\n**After you update, either manually, or automatically, you are advised to update\n  your packages by clicking the `[Update Packages]` button on the Spacemacs Home\n  Buffer.**\n\n# Quotes\n\n[Quote][quote01] by [ashnur](https://github.com/ashnur):\n\n    ¬´I feel that spacemacs is an aircraft carrier and I am playing table tennis on the deck as a freerider.¬ª\n\n[Quote][quote02] by [deuill](https://github.com/deuill):\n\n    ¬´I LOVE SPACEMACS AND MAGIT\n\n     That is all¬ª\n\n# Contributions\n\nSpacemacs is a community-driven project, it needs _you_ to keep it up to\ndate and propose great and useful configuration for all the things!\n\nBefore contributing be sure to consult the\n[contribution guidelines][CONTRIBUTING.org] and [conventions][CONVENTIONS.org].\n\n# Communities\n\n- [Gitter Chat]\n- [Stack Exchange]\n- [Reddit]\n\n# License\n\nThe license is GPLv3 for all parts specific to Spacemacs, this includes:\n- the initialization and core files\n- all the layer files\n- the documentation\n\nFor the packages shipped in this repository you can refer to the files header.\n\n[Spacemacs logo][] by [Nasser Alshammari][] released under a [Creative Commons Attribution-ShareAlike 4.0 International License.](http://creativecommons.org/licenses/by-sa/4.0/)\n\n# Supporting Spacemacs\n\nThe best way to support Spacemacs is to contribute to it either by reporting\nbugs, helping the community on the [Gitter Chat][] or sending pull requests.\n\nYou can show your love for the project by getting cool Spacemacs t-shirts, mugs\nand more in the [Spacemacs Shop][].\n\nIf you want to show your support financially you can contribute to [Bountysource][] or buy a drink for the\nmaintainer by clicking on the [Paypal badge](#top).\n\nIf you used spacemacs in a project and you want to show that fact, you can use\nthe spacemacs badge: [![Built with Spacemacs](https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg)](http://spacemacs.org)\n\n- For Markdown:\n\n   ```\n   [![Built with Spacemacs](https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg)](http://spacemacs.org)\n   ```\n\n- For HTML:\n\n   ```\n   <a href=\"http://spacemacs.org\"><img src=\"https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg\" /></a>\n   ```\n\n- For Org-mode:\n\n   ```\n   [[http://spacemacs.org][file:https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg]]\n   ```\n\nThank you!\n\n[Twitter]: http://i.imgur.com/tXSoThF.png\n[CONTRIBUTING.org]: CONTRIBUTING.org\n[CONVENTIONS.org]: http://spacemacs.org/doc/CONVENTIONS\n[DOCUMENTATION.org]: http://spacemacs.org/doc/DOCUMENTATION\n[QUICK_START.org]: http://spacemacs.org/doc/QUICK_START\n[FAQ.org]: http://spacemacs.org/doc/FAQ\n[VIMUSERS.org]: http://spacemacs.org/doc/VIMUSERS\n[dotfile]: http://spacemacs.org/doc/DOCUMENTATION#orgheadline45\n[osx layer]: http://spacemacs.org/layers/+os/osx/README.html\n[Gitter Chat]: https://gitter.im/syl20bnr/spacemacs\n[Gitter Chat IRC server]: https://irc.gitter.im/\n[homebrew]: http://brew.sh\n[emacs-for-windows]: http://emacsbinw64.sourceforge.net/\n[emacs-for-windows-stable]: https://sourceforge.net/projects/emacsbinw64/files/release/\n[the platinum searcher]: https://github.com/monochromegane/the_platinum_searcher\n[so-server-unsafe]: http://stackoverflow.com/questions/885793/emacs-error-when-calling-server-start\n[Spacemacs logo]: https://github.com/nashamri/spacemacs-logo\n[Nasser Alshammari]: https://github.com/nashamri\n[cpaulik-unity-icon]: http://splendidabacus.com/posts/2015/03/spacemacs-unity-icon/\n[icon-mac-instructions]: http://www.idownloadblog.com/2014/07/16/how-to-change-app-icon-mac/\n[icon-repository]: https://github.com/nashamri/spacemacs-logo\n[Stack Exchange]: http://emacs.stackexchange.com/questions/tagged/spacemacs\n[Reddit]: https://www.reddit.com/r/spacemacs\n[quote01]: https://gitter.im/syl20bnr/spacemacs?at=568e627a0cdaaa62045a7df6\n[quote02]: https://gitter.im/syl20bnr/spacemacs?at=5768456c6577f032450cfedb\n[build_source]: https://www.gnu.org/software/emacs/manual/html_node/efaq/Installing-Emacs.html\n[Bountysource]: https://salt.bountysource.com/teams/spacemacs\n[Source Code Pro]: https://github.com/adobe-fonts/source-code-pro\n[Spacemacs Shop]: https://shop.spreadshirt.com/spacemacs-shop\n"
            }
          },
          {
            "name": "scriptless-scripts",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "Documentation about scriptless scripts",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "TeX"
                },
                {
                  "name": "Makefile"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/scriptless-scripts",
            "primaryLanguage": {
              "name": "TeX"
            },
            "object": {
              "text": "# Scriptless Scripts\nScriptless scripts is an approach to designing cryptographic protocol on top of Bitcoin which avoids execution of explicit smart contracts.\n\n**WARNING:** Unless specified otherwise, the presented schemes are ad-hoc constructions and have no formal security model or security proof. They may miss crucial details, are outright insecure or seriously flawed in other ways.\n\n* **[Adaptor Signatures and Atomic Swaps from Scriptless Scripts](md/atomic-swap.md)**\n  * This document describes adaptor signatures and multisignatures, which are the original building blocks of scriptless scripts.\n    It also describes an atomic swap protocol using these building blocks.\n* **[Partially Blind Atomic Swap Using Adaptor Signatures](md/partially-blind-swap.md)**\n  * In this scheme one of the participants of the swap does not learn which coins are being swapped.\n* **[Atomic Pedersen Swap Using Adaptor Signatures](md/pedersen-swap.md)**\n  * An atomic Pedersen swap exchanges a coin with the opening `(r, x)` of a Pedersen commitment `r*G + x*H`.\n* **[Multi-Hop Locks from Scriptless Scripts](md/multi-hop-locks.md)**\n  * Multi-hop locks are protocols that allow two parties to exchange coins and proof of payment without requiring a mutual funding multisig output (also known as \"Lightning with Scriptless Scripts\"). \n* **[Non-Interactive Threshold Escrow (NITE)](md/NITE.md)**\n  * NITE allows non-interactively setting up certain threshold policies on-chain, as well as off-chain if it is combined with [multi-hop locks](md/multi-hop-locks.md).\n"
            }
          },
          {
            "name": "btcguide.github.io",
            "repositoryTopics": {
              "totalCount": 0,
              "nodes": []
            },
            "description": "https://btcguide.github.io/",
            "watchers": {
              "totalCount": 0
            },
            "languages": {
              "nodes": [
                {
                  "name": "Ruby"
                },
                {
                  "name": "HTML"
                },
                {
                  "name": "SCSS"
                }
              ]
            },
            "issues": {
              "totalCount": 0
            },
            "pullRequests": {
              "totalCount": 0
            },
            "isFork": true,
            "forkCount": 0,
            "url": "https://github.com/real-or-random/btcguide.github.io",
            "primaryLanguage": {
              "name": "HTML"
            },
            "object": {
              "text": "# btcguide.github.io\n\nFor regular users, just visit <https://btcguide.github.io/> to see GitHub Pages render this content as a static website.\n\n---\n\nFor advanced users, you can host this locally with [jekyll](https://jekyllrb.com/) (setup instructions: [Ubuntu](https://jekyllrb.com/docs/installation/ubuntu/); [macOS](https://jekyllrb.com/docs/installation/macos/)):\n```bash\n$ bundle exec jekyll serve\n```\n\nThen visit: <http://127.0.0.1:4000>\n\nTo spell check (takes ~3s):\n```bash\n$ pyspelling -c .spellcheck.yml \nSpelling check passed :)\n```\n\nNotes:\n* See `.wordlist.txt` for all the exception words.\n* `$ brew install aspell && pip install pyspelling` are needed.\n"
            }
          }
        ]
      },
      "contributionsCollection": {
        "totalRepositoryContributions": 10,
        "totalCommitContributions": 163,
        "totalIssueContributions": 58,
        "totalPullRequestContributions": 45,
        "totalPullRequestReviewContributions": 79,
        "commitContributionsByRepository": [
          {
            "contributions": {
              "totalCount": 72,
              "nodes": [
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                },
                {
                  "repository": {
                    "description": "Experimental fork of libsecp256k1 with support for pedersen commitments and range proofs.",
                    "name": "secp256k1-zkp"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 68,
              "nodes": [
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Optimized C library for EC operations on curve secp256k1",
                    "name": "secp256k1"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 4,
              "nodes": [
                {
                  "repository": {
                    "description": "Rust language bindings for Bitcoin secp256k1 library.",
                    "name": "rust-secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Rust language bindings for Bitcoin secp256k1 library.",
                    "name": "rust-secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Rust language bindings for Bitcoin secp256k1 library.",
                    "name": "rust-secp256k1"
                  }
                },
                {
                  "repository": {
                    "description": "Rust language bindings for Bitcoin secp256k1 library.",
                    "name": "rust-secp256k1"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 4,
              "nodes": [
                {
                  "repository": {
                    "description": null,
                    "name": "ieeesb20"
                  }
                },
                {
                  "repository": {
                    "description": null,
                    "name": "ieeesb20"
                  }
                },
                {
                  "repository": {
                    "description": null,
                    "name": "ieeesb20"
                  }
                },
                {
                  "repository": {
                    "description": null,
                    "name": "ieeesb20"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 2,
              "nodes": [
                {
                  "repository": {
                    "description": null,
                    "name": "dicemix"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 2,
              "nodes": [
                {
                  "repository": {
                    "description": "Taktische Zeichen f√ºr Hilfsorganisationen als Vektorgrafiken",
                    "name": "Taktische-Zeichen"
                  }
                },
                {
                  "repository": {
                    "description": "Taktische Zeichen f√ºr Hilfsorganisationen als Vektorgrafiken",
                    "name": "Taktische-Zeichen"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 2,
              "nodes": [
                {
                  "repository": {
                    "description": "Run compilers interactively from your web browser and interact with the assembly",
                    "name": "compiler-explorer"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 1,
              "nodes": [
                {
                  "repository": {
                    "description": "https://btcguide.github.io/",
                    "name": "btcguide.github.io"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 1,
              "nodes": [
                {
                  "repository": {
                    "description": "Documentation about scriptless scripts",
                    "name": "scriptless-scripts"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 1,
              "nodes": [
                {
                  "repository": {
                    "description": null,
                    "name": "osx-images"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 1,
              "nodes": [
                {
                  "repository": {
                    "description": "A community-driven Emacs distribution - The best editor is neither Emacs nor Vim,  it's Emacs *and* Vim!",
                    "name": "spacemacs"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 1,
              "nodes": [
                {
                  "repository": {
                    "description": "Bitcoin Improvement Proposals",
                    "name": "bips"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 1,
              "nodes": [
                {
                  "repository": {
                    "description": "External repository for Bitcoin Core related maintenance tools",
                    "name": "bitcoin-maintainer-tools"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 1,
              "nodes": [
                {
                  "repository": {
                    "description": "libwacom is a tablet description library",
                    "name": "libwacom"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 1,
              "nodes": [
                {
                  "repository": {
                    "description": "Firefox extension to automatically open websites in a container",
                    "name": "containerise"
                  }
                }
              ]
            }
          },
          {
            "contributions": {
              "totalCount": 1,
              "nodes": [
                {
                  "repository": {
                    "description": "This is a SHA-256 implementation that allows for setting and getting the mid-state information.",
                    "name": "sha256"
                  }
                }
              ]
            }
          }
        ]
      }
    }
  }
}